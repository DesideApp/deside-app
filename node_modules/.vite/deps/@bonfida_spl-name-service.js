import {
  PublicKey,
  SIGNATURE_LENGTH_IN_BYTES,
  SYSVAR_RENT_PUBKEY,
  SolanaJSONRPCError,
  SystemProgram,
  TransactionInstruction,
  require_Layout,
  require_browser
} from "./chunk-TDKE2ZSC.js";
import {
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/@bonfida/spl-name-service/dist/esm/_virtual/index.mjs
var r = {};

// node_modules/@bonfida/spl-name-service/dist/esm/_virtual/index2.mjs
var r2 = {};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/base64-js/index.mjs
r2.byteLength = function(r35) {
  var t26 = h(r35), e36 = t26[0], n27 = t26[1];
  return 3 * (e36 + n27) / 4 - n27;
}, r2.toByteArray = function(r35) {
  var t26, o25, a25 = h(r35), u17 = a25[0], i33 = a25[1], c21 = new n27(function(r36, t27, e36) {
    return 3 * (t27 + e36) / 4 - e36;
  }(0, u17, i33)), d19 = 0, f20 = i33 > 0 ? u17 - 4 : u17;
  for (o25 = 0; o25 < f20; o25 += 4) t26 = e36[r35.charCodeAt(o25)] << 18 | e36[r35.charCodeAt(o25 + 1)] << 12 | e36[r35.charCodeAt(o25 + 2)] << 6 | e36[r35.charCodeAt(o25 + 3)], c21[d19++] = t26 >> 16 & 255, c21[d19++] = t26 >> 8 & 255, c21[d19++] = 255 & t26;
  2 === i33 && (t26 = e36[r35.charCodeAt(o25)] << 2 | e36[r35.charCodeAt(o25 + 1)] >> 4, c21[d19++] = 255 & t26);
  1 === i33 && (t26 = e36[r35.charCodeAt(o25)] << 10 | e36[r35.charCodeAt(o25 + 1)] << 4 | e36[r35.charCodeAt(o25 + 2)] >> 2, c21[d19++] = t26 >> 8 & 255, c21[d19++] = 255 & t26);
  return c21;
}, r2.fromByteArray = function(r35) {
  for (var e36, n27 = r35.length, o25 = n27 % 3, a25 = [], h16 = 16383, i33 = 0, c21 = n27 - o25; i33 < c21; i33 += h16) a25.push(u(r35, i33, i33 + h16 > c21 ? c21 : i33 + h16));
  1 === o25 ? (e36 = r35[n27 - 1], a25.push(t26[e36 >> 2] + t26[e36 << 4 & 63] + "==")) : 2 === o25 && (e36 = (r35[n27 - 2] << 8) + r35[n27 - 1], a25.push(t26[e36 >> 10] + t26[e36 >> 4 & 63] + t26[e36 << 2 & 63] + "="));
  return a25.join("");
};
for (t26 = [], e36 = [], n27 = "undefined" != typeof Uint8Array ? Uint8Array : Array, o25 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a25 = 0; a25 < 64; ++a25) t26[a25] = o25[a25], e36[o25.charCodeAt(a25)] = a25;
var t26;
var e36;
var n27;
var o25;
var a25;
function h(r35) {
  var t26 = r35.length;
  if (t26 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
  var e36 = r35.indexOf("=");
  return -1 === e36 && (e36 = t26), [e36, e36 === t26 ? 0 : 4 - e36 % 4];
}
function u(r35, e36, n27) {
  for (var o25, a25, h16 = [], u17 = e36; u17 < n27; u17 += 3) o25 = (r35[u17] << 16 & 16711680) + (r35[u17 + 1] << 8 & 65280) + (255 & r35[u17 + 2]), h16.push(t26[(a25 = o25) >> 18 & 63] + t26[a25 >> 12 & 63] + t26[a25 >> 6 & 63] + t26[63 & a25]);
  return h16.join("");
}
e36["-".charCodeAt(0)] = 62, e36["_".charCodeAt(0)] = 63;

// node_modules/@bonfida/spl-name-service/dist/esm/_virtual/index3.mjs
var r3 = {};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/ieee754/index.mjs
r3.read = function(a25, t26, o25, r35, h16) {
  var M2, p16, f20 = 8 * h16 - r35 - 1, e36 = (1 << f20) - 1, i33 = e36 >> 1, w11 = -7, s24 = o25 ? h16 - 1 : 0, n27 = o25 ? -1 : 1, N6 = a25[t26 + s24];
  for (s24 += n27, M2 = N6 & (1 << -w11) - 1, N6 >>= -w11, w11 += f20; w11 > 0; M2 = 256 * M2 + a25[t26 + s24], s24 += n27, w11 -= 8) ;
  for (p16 = M2 & (1 << -w11) - 1, M2 >>= -w11, w11 += r35; w11 > 0; p16 = 256 * p16 + a25[t26 + s24], s24 += n27, w11 -= 8) ;
  if (0 === M2) M2 = 1 - i33;
  else {
    if (M2 === e36) return p16 ? NaN : 1 / 0 * (N6 ? -1 : 1);
    p16 += Math.pow(2, r35), M2 -= i33;
  }
  return (N6 ? -1 : 1) * p16 * Math.pow(2, M2 - r35);
}, r3.write = function(a25, t26, o25, r35, h16, M2) {
  var p16, f20, e36, i33 = 8 * M2 - h16 - 1, w11 = (1 << i33) - 1, s24 = w11 >> 1, n27 = 23 === h16 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, N6 = r35 ? 0 : M2 - 1, u17 = r35 ? 1 : -1, l17 = t26 < 0 || 0 === t26 && 1 / t26 < 0 ? 1 : 0;
  for (t26 = Math.abs(t26), isNaN(t26) || t26 === 1 / 0 ? (f20 = isNaN(t26) ? 1 : 0, p16 = w11) : (p16 = Math.floor(Math.log(t26) / Math.LN2), t26 * (e36 = Math.pow(2, -p16)) < 1 && (p16--, e36 *= 2), (t26 += p16 + s24 >= 1 ? n27 / e36 : n27 * Math.pow(2, 1 - s24)) * e36 >= 2 && (p16++, e36 /= 2), p16 + s24 >= w11 ? (f20 = 0, p16 = w11) : p16 + s24 >= 1 ? (f20 = (t26 * e36 - 1) * Math.pow(2, h16), p16 += s24) : (f20 = t26 * Math.pow(2, s24 - 1) * Math.pow(2, h16), p16 = 0)); h16 >= 8; a25[o25 + N6] = 255 & f20, N6 += u17, f20 /= 256, h16 -= 8) ;
  for (p16 = p16 << h16 | f20, i33 += h16; i33 > 0; a25[o25 + N6] = 255 & p16, N6 += u17, p16 /= 256, i33 -= 8) ;
  a25[o25 + N6 - u17] |= 128 * l17;
};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/buffer/index.mjs
!function(t26) {
  const n27 = r2, i33 = r3, o25 = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
  t26.Buffer = u17, t26.SlowBuffer = function(t27) {
    +t27 != t27 && (t27 = 0);
    return u17.alloc(+t27);
  }, t26.INSPECT_MAX_BYTES = 50;
  const f20 = 2147483647;
  function s24(t27) {
    if (t27 > f20) throw new RangeError('The value "' + t27 + '" is invalid for option "size"');
    const e36 = new Uint8Array(t27);
    return Object.setPrototypeOf(e36, u17.prototype), e36;
  }
  function u17(t27, e36, r35) {
    if ("number" == typeof t27) {
      if ("string" == typeof e36) throw new TypeError('The "string" argument must be of type string. Received type number');
      return a25(t27);
    }
    return h16(t27, e36, r35);
  }
  function h16(t27, e36, r35) {
    if ("string" == typeof t27) return function(t28, e37) {
      "string" == typeof e37 && "" !== e37 || (e37 = "utf8");
      if (!u17.isEncoding(e37)) throw new TypeError("Unknown encoding: " + e37);
      const r36 = 0 | y10(t28, e37);
      let n29 = s24(r36);
      const i35 = n29.write(t28, e37);
      i35 !== r36 && (n29 = n29.slice(0, i35));
      return n29;
    }(t27, e36);
    if (ArrayBuffer.isView(t27)) return function(t28) {
      if (J(t28, Uint8Array)) {
        const e37 = new Uint8Array(t28);
        return l17(e37.buffer, e37.byteOffset, e37.byteLength);
      }
      return p16(t28);
    }(t27);
    if (null == t27) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t27);
    if (J(t27, ArrayBuffer) || t27 && J(t27.buffer, ArrayBuffer)) return l17(t27, e36, r35);
    if ("undefined" != typeof SharedArrayBuffer && (J(t27, SharedArrayBuffer) || t27 && J(t27.buffer, SharedArrayBuffer))) return l17(t27, e36, r35);
    if ("number" == typeof t27) throw new TypeError('The "value" argument must not be of type number. Received type number');
    const n28 = t27.valueOf && t27.valueOf();
    if (null != n28 && n28 !== t27) return u17.from(n28, e36, r35);
    const i34 = function(t28) {
      if (u17.isBuffer(t28)) {
        const e37 = 0 | g12(t28.length), r36 = s24(e37);
        return 0 === r36.length || t28.copy(r36, 0, 0, e37), r36;
      }
      if (void 0 !== t28.length) return "number" != typeof t28.length || Z2(t28.length) ? s24(0) : p16(t28);
      if ("Buffer" === t28.type && Array.isArray(t28.data)) return p16(t28.data);
    }(t27);
    if (i34) return i34;
    if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t27[Symbol.toPrimitive]) return u17.from(t27[Symbol.toPrimitive]("string"), e36, r35);
    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t27);
  }
  function c21(t27) {
    if ("number" != typeof t27) throw new TypeError('"size" argument must be of type number');
    if (t27 < 0) throw new RangeError('The value "' + t27 + '" is invalid for option "size"');
  }
  function a25(t27) {
    return c21(t27), s24(t27 < 0 ? 0 : 0 | g12(t27));
  }
  function p16(t27) {
    const e36 = t27.length < 0 ? 0 : 0 | g12(t27.length), r35 = s24(e36);
    for (let n28 = 0; n28 < e36; n28 += 1) r35[n28] = 255 & t27[n28];
    return r35;
  }
  function l17(t27, e36, r35) {
    if (e36 < 0 || t27.byteLength < e36) throw new RangeError('"offset" is outside of buffer bounds');
    if (t27.byteLength < e36 + (r35 || 0)) throw new RangeError('"length" is outside of buffer bounds');
    let n28;
    return n28 = void 0 === e36 && void 0 === r35 ? new Uint8Array(t27) : void 0 === r35 ? new Uint8Array(t27, e36) : new Uint8Array(t27, e36, r35), Object.setPrototypeOf(n28, u17.prototype), n28;
  }
  function g12(t27) {
    if (t27 >= f20) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + f20.toString(16) + " bytes");
    return 0 | t27;
  }
  function y10(t27, e36) {
    if (u17.isBuffer(t27)) return t27.length;
    if (ArrayBuffer.isView(t27) || J(t27, ArrayBuffer)) return t27.byteLength;
    if ("string" != typeof t27) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t27);
    const r35 = t27.length, n28 = arguments.length > 2 && true === arguments[2];
    if (!n28 && 0 === r35) return 0;
    let i34 = false;
    for (; ; ) switch (e36) {
      case "ascii":
      case "latin1":
      case "binary":
        return r35;
      case "utf8":
      case "utf-8":
        return q2(t27).length;
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return 2 * r35;
      case "hex":
        return r35 >>> 1;
      case "base64":
        return W2(t27).length;
      default:
        if (i34) return n28 ? -1 : q2(t27).length;
        e36 = ("" + e36).toLowerCase(), i34 = true;
    }
  }
  function w11(t27, e36, r35) {
    let n28 = false;
    if ((void 0 === e36 || e36 < 0) && (e36 = 0), e36 > this.length) return "";
    if ((void 0 === r35 || r35 > this.length) && (r35 = this.length), r35 <= 0) return "";
    if ((r35 >>>= 0) <= (e36 >>>= 0)) return "";
    for (t27 || (t27 = "utf8"); ; ) switch (t27) {
      case "hex":
        return L5(this, e36, r35);
      case "utf8":
      case "utf-8":
        return R7(this, e36, r35);
      case "ascii":
        return O5(this, e36, r35);
      case "latin1":
      case "binary":
        return _4(this, e36, r35);
      case "base64":
        return v10(this, e36, r35);
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return S7(this, e36, r35);
      default:
        if (n28) throw new TypeError("Unknown encoding: " + t27);
        t27 = (t27 + "").toLowerCase(), n28 = true;
    }
  }
  function d19(t27, e36, r35) {
    const n28 = t27[e36];
    t27[e36] = t27[r35], t27[r35] = n28;
  }
  function b10(t27, e36, r35, n28, i34) {
    if (0 === t27.length) return -1;
    if ("string" == typeof r35 ? (n28 = r35, r35 = 0) : r35 > 2147483647 ? r35 = 2147483647 : r35 < -2147483648 && (r35 = -2147483648), Z2(r35 = +r35) && (r35 = i34 ? 0 : t27.length - 1), r35 < 0 && (r35 = t27.length + r35), r35 >= t27.length) {
      if (i34) return -1;
      r35 = t27.length - 1;
    } else if (r35 < 0) {
      if (!i34) return -1;
      r35 = 0;
    }
    if ("string" == typeof e36 && (e36 = u17.from(e36, n28)), u17.isBuffer(e36)) return 0 === e36.length ? -1 : m30(t27, e36, r35, n28, i34);
    if ("number" == typeof e36) return e36 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? i34 ? Uint8Array.prototype.indexOf.call(t27, e36, r35) : Uint8Array.prototype.lastIndexOf.call(t27, e36, r35) : m30(t27, [e36], r35, n28, i34);
    throw new TypeError("val must be string, number or Buffer");
  }
  function m30(t27, e36, r35, n28, i34) {
    let o26, f21 = 1, s25 = t27.length, u18 = e36.length;
    if (void 0 !== n28 && ("ucs2" === (n28 = String(n28).toLowerCase()) || "ucs-2" === n28 || "utf16le" === n28 || "utf-16le" === n28)) {
      if (t27.length < 2 || e36.length < 2) return -1;
      f21 = 2, s25 /= 2, u18 /= 2, r35 /= 2;
    }
    function h17(t28, e37) {
      return 1 === f21 ? t28[e37] : t28.readUInt16BE(e37 * f21);
    }
    if (i34) {
      let n29 = -1;
      for (o26 = r35; o26 < s25; o26++) if (h17(t27, o26) === h17(e36, -1 === n29 ? 0 : o26 - n29)) {
        if (-1 === n29 && (n29 = o26), o26 - n29 + 1 === u18) return n29 * f21;
      } else -1 !== n29 && (o26 -= o26 - n29), n29 = -1;
    } else for (r35 + u18 > s25 && (r35 = s25 - u18), o26 = r35; o26 >= 0; o26--) {
      let r36 = true;
      for (let n29 = 0; n29 < u18; n29++) if (h17(t27, o26 + n29) !== h17(e36, n29)) {
        r36 = false;
        break;
      }
      if (r36) return o26;
    }
    return -1;
  }
  function B9(t27, e36, r35, n28) {
    r35 = Number(r35) || 0;
    const i34 = t27.length - r35;
    n28 ? (n28 = Number(n28)) > i34 && (n28 = i34) : n28 = i34;
    const o26 = e36.length;
    let f21;
    for (n28 > o26 / 2 && (n28 = o26 / 2), f21 = 0; f21 < n28; ++f21) {
      const n29 = parseInt(e36.substr(2 * f21, 2), 16);
      if (Z2(n29)) return f21;
      t27[r35 + f21] = n29;
    }
    return f21;
  }
  function E6(t27, e36, r35, n28) {
    return X2(q2(e36, t27.length - r35), t27, r35, n28);
  }
  function I9(t27, e36, r35, n28) {
    return X2(function(t28) {
      const e37 = [];
      for (let r36 = 0; r36 < t28.length; ++r36) e37.push(255 & t28.charCodeAt(r36));
      return e37;
    }(e36), t27, r35, n28);
  }
  function U6(t27, e36, r35, n28) {
    return X2(W2(e36), t27, r35, n28);
  }
  function A7(t27, e36, r35, n28) {
    return X2(function(t28, e37) {
      let r36, n29, i34;
      const o26 = [];
      for (let f21 = 0; f21 < t28.length && !((e37 -= 2) < 0); ++f21) r36 = t28.charCodeAt(f21), n29 = r36 >> 8, i34 = r36 % 256, o26.push(i34), o26.push(n29);
      return o26;
    }(e36, t27.length - r35), t27, r35, n28);
  }
  function v10(t27, e36, r35) {
    return 0 === e36 && r35 === t27.length ? n27.fromByteArray(t27) : n27.fromByteArray(t27.slice(e36, r35));
  }
  function R7(t27, e36, r35) {
    r35 = Math.min(t27.length, r35);
    const n28 = [];
    let i34 = e36;
    for (; i34 < r35; ) {
      const e37 = t27[i34];
      let o26 = null, f21 = e37 > 239 ? 4 : e37 > 223 ? 3 : e37 > 191 ? 2 : 1;
      if (i34 + f21 <= r35) {
        let r36, n29, s25, u18;
        switch (f21) {
          case 1:
            e37 < 128 && (o26 = e37);
            break;
          case 2:
            r36 = t27[i34 + 1], 128 == (192 & r36) && (u18 = (31 & e37) << 6 | 63 & r36, u18 > 127 && (o26 = u18));
            break;
          case 3:
            r36 = t27[i34 + 1], n29 = t27[i34 + 2], 128 == (192 & r36) && 128 == (192 & n29) && (u18 = (15 & e37) << 12 | (63 & r36) << 6 | 63 & n29, u18 > 2047 && (u18 < 55296 || u18 > 57343) && (o26 = u18));
            break;
          case 4:
            r36 = t27[i34 + 1], n29 = t27[i34 + 2], s25 = t27[i34 + 3], 128 == (192 & r36) && 128 == (192 & n29) && 128 == (192 & s25) && (u18 = (15 & e37) << 18 | (63 & r36) << 12 | (63 & n29) << 6 | 63 & s25, u18 > 65535 && u18 < 1114112 && (o26 = u18));
        }
      }
      null === o26 ? (o26 = 65533, f21 = 1) : o26 > 65535 && (o26 -= 65536, n28.push(o26 >>> 10 & 1023 | 55296), o26 = 56320 | 1023 & o26), n28.push(o26), i34 += f21;
    }
    return function(t28) {
      const e37 = t28.length;
      if (e37 <= T4) return String.fromCharCode.apply(String, t28);
      let r36 = "", n29 = 0;
      for (; n29 < e37; ) r36 += String.fromCharCode.apply(String, t28.slice(n29, n29 += T4));
      return r36;
    }(n28);
  }
  t26.kMaxLength = f20, u17.TYPED_ARRAY_SUPPORT = function() {
    try {
      const t27 = new Uint8Array(1), e36 = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(e36, Uint8Array.prototype), Object.setPrototypeOf(t27, e36), 42 === t27.foo();
    } catch (t27) {
      return false;
    }
  }(), u17.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(u17.prototype, "parent", { enumerable: true, get: function() {
    if (u17.isBuffer(this)) return this.buffer;
  } }), Object.defineProperty(u17.prototype, "offset", { enumerable: true, get: function() {
    if (u17.isBuffer(this)) return this.byteOffset;
  } }), u17.poolSize = 8192, u17.from = function(t27, e36, r35) {
    return h16(t27, e36, r35);
  }, Object.setPrototypeOf(u17.prototype, Uint8Array.prototype), Object.setPrototypeOf(u17, Uint8Array), u17.alloc = function(t27, e36, r35) {
    return function(t28, e37, r36) {
      return c21(t28), t28 <= 0 ? s24(t28) : void 0 !== e37 ? "string" == typeof r36 ? s24(t28).fill(e37, r36) : s24(t28).fill(e37) : s24(t28);
    }(t27, e36, r35);
  }, u17.allocUnsafe = function(t27) {
    return a25(t27);
  }, u17.allocUnsafeSlow = function(t27) {
    return a25(t27);
  }, u17.isBuffer = function(t27) {
    return null != t27 && true === t27._isBuffer && t27 !== u17.prototype;
  }, u17.compare = function(t27, e36) {
    if (J(t27, Uint8Array) && (t27 = u17.from(t27, t27.offset, t27.byteLength)), J(e36, Uint8Array) && (e36 = u17.from(e36, e36.offset, e36.byteLength)), !u17.isBuffer(t27) || !u17.isBuffer(e36)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    if (t27 === e36) return 0;
    let r35 = t27.length, n28 = e36.length;
    for (let i34 = 0, o26 = Math.min(r35, n28); i34 < o26; ++i34) if (t27[i34] !== e36[i34]) {
      r35 = t27[i34], n28 = e36[i34];
      break;
    }
    return r35 < n28 ? -1 : n28 < r35 ? 1 : 0;
  }, u17.isEncoding = function(t27) {
    switch (String(t27).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return true;
      default:
        return false;
    }
  }, u17.concat = function(t27, e36) {
    if (!Array.isArray(t27)) throw new TypeError('"list" argument must be an Array of Buffers');
    if (0 === t27.length) return u17.alloc(0);
    let r35;
    if (void 0 === e36) for (e36 = 0, r35 = 0; r35 < t27.length; ++r35) e36 += t27[r35].length;
    const n28 = u17.allocUnsafe(e36);
    let i34 = 0;
    for (r35 = 0; r35 < t27.length; ++r35) {
      let e37 = t27[r35];
      if (J(e37, Uint8Array)) i34 + e37.length > n28.length ? (u17.isBuffer(e37) || (e37 = u17.from(e37)), e37.copy(n28, i34)) : Uint8Array.prototype.set.call(n28, e37, i34);
      else {
        if (!u17.isBuffer(e37)) throw new TypeError('"list" argument must be an Array of Buffers');
        e37.copy(n28, i34);
      }
      i34 += e37.length;
    }
    return n28;
  }, u17.byteLength = y10, u17.prototype._isBuffer = true, u17.prototype.swap16 = function() {
    const t27 = this.length;
    if (t27 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (let e36 = 0; e36 < t27; e36 += 2) d19(this, e36, e36 + 1);
    return this;
  }, u17.prototype.swap32 = function() {
    const t27 = this.length;
    if (t27 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (let e36 = 0; e36 < t27; e36 += 4) d19(this, e36, e36 + 3), d19(this, e36 + 1, e36 + 2);
    return this;
  }, u17.prototype.swap64 = function() {
    const t27 = this.length;
    if (t27 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (let e36 = 0; e36 < t27; e36 += 8) d19(this, e36, e36 + 7), d19(this, e36 + 1, e36 + 6), d19(this, e36 + 2, e36 + 5), d19(this, e36 + 3, e36 + 4);
    return this;
  }, u17.prototype.toString = function() {
    const t27 = this.length;
    return 0 === t27 ? "" : 0 === arguments.length ? R7(this, 0, t27) : w11.apply(this, arguments);
  }, u17.prototype.toLocaleString = u17.prototype.toString, u17.prototype.equals = function(t27) {
    if (!u17.isBuffer(t27)) throw new TypeError("Argument must be a Buffer");
    return this === t27 || 0 === u17.compare(this, t27);
  }, u17.prototype.inspect = function() {
    let e36 = "";
    const r35 = t26.INSPECT_MAX_BYTES;
    return e36 = this.toString("hex", 0, r35).replace(/(.{2})/g, "$1 ").trim(), this.length > r35 && (e36 += " ... "), "<Buffer " + e36 + ">";
  }, o25 && (u17.prototype[o25] = u17.prototype.inspect), u17.prototype.compare = function(t27, e36, r35, n28, i34) {
    if (J(t27, Uint8Array) && (t27 = u17.from(t27, t27.offset, t27.byteLength)), !u17.isBuffer(t27)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t27);
    if (void 0 === e36 && (e36 = 0), void 0 === r35 && (r35 = t27 ? t27.length : 0), void 0 === n28 && (n28 = 0), void 0 === i34 && (i34 = this.length), e36 < 0 || r35 > t27.length || n28 < 0 || i34 > this.length) throw new RangeError("out of range index");
    if (n28 >= i34 && e36 >= r35) return 0;
    if (n28 >= i34) return -1;
    if (e36 >= r35) return 1;
    if (this === t27) return 0;
    let o26 = (i34 >>>= 0) - (n28 >>>= 0), f21 = (r35 >>>= 0) - (e36 >>>= 0);
    const s25 = Math.min(o26, f21), h17 = this.slice(n28, i34), c22 = t27.slice(e36, r35);
    for (let t28 = 0; t28 < s25; ++t28) if (h17[t28] !== c22[t28]) {
      o26 = h17[t28], f21 = c22[t28];
      break;
    }
    return o26 < f21 ? -1 : f21 < o26 ? 1 : 0;
  }, u17.prototype.includes = function(t27, e36, r35) {
    return -1 !== this.indexOf(t27, e36, r35);
  }, u17.prototype.indexOf = function(t27, e36, r35) {
    return b10(this, t27, e36, r35, true);
  }, u17.prototype.lastIndexOf = function(t27, e36, r35) {
    return b10(this, t27, e36, r35, false);
  }, u17.prototype.write = function(t27, e36, r35, n28) {
    if (void 0 === e36) n28 = "utf8", r35 = this.length, e36 = 0;
    else if (void 0 === r35 && "string" == typeof e36) n28 = e36, r35 = this.length, e36 = 0;
    else {
      if (!isFinite(e36)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      e36 >>>= 0, isFinite(r35) ? (r35 >>>= 0, void 0 === n28 && (n28 = "utf8")) : (n28 = r35, r35 = void 0);
    }
    const i34 = this.length - e36;
    if ((void 0 === r35 || r35 > i34) && (r35 = i34), t27.length > 0 && (r35 < 0 || e36 < 0) || e36 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
    n28 || (n28 = "utf8");
    let o26 = false;
    for (; ; ) switch (n28) {
      case "hex":
        return B9(this, t27, e36, r35);
      case "utf8":
      case "utf-8":
        return E6(this, t27, e36, r35);
      case "ascii":
      case "latin1":
      case "binary":
        return I9(this, t27, e36, r35);
      case "base64":
        return U6(this, t27, e36, r35);
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return A7(this, t27, e36, r35);
      default:
        if (o26) throw new TypeError("Unknown encoding: " + n28);
        n28 = ("" + n28).toLowerCase(), o26 = true;
    }
  }, u17.prototype.toJSON = function() {
    return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
  };
  const T4 = 4096;
  function O5(t27, e36, r35) {
    let n28 = "";
    r35 = Math.min(t27.length, r35);
    for (let i34 = e36; i34 < r35; ++i34) n28 += String.fromCharCode(127 & t27[i34]);
    return n28;
  }
  function _4(t27, e36, r35) {
    let n28 = "";
    r35 = Math.min(t27.length, r35);
    for (let i34 = e36; i34 < r35; ++i34) n28 += String.fromCharCode(t27[i34]);
    return n28;
  }
  function L5(t27, e36, r35) {
    const n28 = t27.length;
    (!e36 || e36 < 0) && (e36 = 0), (!r35 || r35 < 0 || r35 > n28) && (r35 = n28);
    let i34 = "";
    for (let n29 = e36; n29 < r35; ++n29) i34 += H3[t27[n29]];
    return i34;
  }
  function S7(t27, e36, r35) {
    const n28 = t27.slice(e36, r35);
    let i34 = "";
    for (let t28 = 0; t28 < n28.length - 1; t28 += 2) i34 += String.fromCharCode(n28[t28] + 256 * n28[t28 + 1]);
    return i34;
  }
  function x9(t27, e36, r35) {
    if (t27 % 1 != 0 || t27 < 0) throw new RangeError("offset is not uint");
    if (t27 + e36 > r35) throw new RangeError("Trying to access beyond buffer length");
  }
  function $2(t27, e36, r35, n28, i34, o26) {
    if (!u17.isBuffer(t27)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (e36 > i34 || e36 < o26) throw new RangeError('"value" argument is out of bounds');
    if (r35 + n28 > t27.length) throw new RangeError("Index out of range");
  }
  function P5(t27, e36, r35, n28, i34) {
    z5(e36, n28, i34, t27, r35, 7);
    let o26 = Number(e36 & BigInt(4294967295));
    t27[r35++] = o26, o26 >>= 8, t27[r35++] = o26, o26 >>= 8, t27[r35++] = o26, o26 >>= 8, t27[r35++] = o26;
    let f21 = Number(e36 >> BigInt(32) & BigInt(4294967295));
    return t27[r35++] = f21, f21 >>= 8, t27[r35++] = f21, f21 >>= 8, t27[r35++] = f21, f21 >>= 8, t27[r35++] = f21, r35;
  }
  function C5(t27, e36, r35, n28, i34) {
    z5(e36, n28, i34, t27, r35, 7);
    let o26 = Number(e36 & BigInt(4294967295));
    t27[r35 + 7] = o26, o26 >>= 8, t27[r35 + 6] = o26, o26 >>= 8, t27[r35 + 5] = o26, o26 >>= 8, t27[r35 + 4] = o26;
    let f21 = Number(e36 >> BigInt(32) & BigInt(4294967295));
    return t27[r35 + 3] = f21, f21 >>= 8, t27[r35 + 2] = f21, f21 >>= 8, t27[r35 + 1] = f21, f21 >>= 8, t27[r35] = f21, r35 + 8;
  }
  function j7(t27, e36, r35, n28, i34, o26) {
    if (r35 + n28 > t27.length) throw new RangeError("Index out of range");
    if (r35 < 0) throw new RangeError("Index out of range");
  }
  function N6(t27, e36, r35, n28, o26) {
    return e36 = +e36, r35 >>>= 0, o26 || j7(t27, 0, r35, 4), i33.write(t27, e36, r35, n28, 23, 4), r35 + 4;
  }
  function k4(t27, e36, r35, n28, o26) {
    return e36 = +e36, r35 >>>= 0, o26 || j7(t27, 0, r35, 8), i33.write(t27, e36, r35, n28, 52, 8), r35 + 8;
  }
  u17.prototype.slice = function(t27, e36) {
    const r35 = this.length;
    (t27 = ~~t27) < 0 ? (t27 += r35) < 0 && (t27 = 0) : t27 > r35 && (t27 = r35), (e36 = void 0 === e36 ? r35 : ~~e36) < 0 ? (e36 += r35) < 0 && (e36 = 0) : e36 > r35 && (e36 = r35), e36 < t27 && (e36 = t27);
    const n28 = this.subarray(t27, e36);
    return Object.setPrototypeOf(n28, u17.prototype), n28;
  }, u17.prototype.readUintLE = u17.prototype.readUIntLE = function(t27, e36, r35) {
    t27 >>>= 0, e36 >>>= 0, r35 || x9(t27, e36, this.length);
    let n28 = this[t27], i34 = 1, o26 = 0;
    for (; ++o26 < e36 && (i34 *= 256); ) n28 += this[t27 + o26] * i34;
    return n28;
  }, u17.prototype.readUintBE = u17.prototype.readUIntBE = function(t27, e36, r35) {
    t27 >>>= 0, e36 >>>= 0, r35 || x9(t27, e36, this.length);
    let n28 = this[t27 + --e36], i34 = 1;
    for (; e36 > 0 && (i34 *= 256); ) n28 += this[t27 + --e36] * i34;
    return n28;
  }, u17.prototype.readUint8 = u17.prototype.readUInt8 = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 1, this.length), this[t27];
  }, u17.prototype.readUint16LE = u17.prototype.readUInt16LE = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 2, this.length), this[t27] | this[t27 + 1] << 8;
  }, u17.prototype.readUint16BE = u17.prototype.readUInt16BE = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 2, this.length), this[t27] << 8 | this[t27 + 1];
  }, u17.prototype.readUint32LE = u17.prototype.readUInt32LE = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 4, this.length), (this[t27] | this[t27 + 1] << 8 | this[t27 + 2] << 16) + 16777216 * this[t27 + 3];
  }, u17.prototype.readUint32BE = u17.prototype.readUInt32BE = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 4, this.length), 16777216 * this[t27] + (this[t27 + 1] << 16 | this[t27 + 2] << 8 | this[t27 + 3]);
  }, u17.prototype.readBigUInt64LE = K(function(t27) {
    Y(t27 >>>= 0, "offset");
    const e36 = this[t27], r35 = this[t27 + 7];
    void 0 !== e36 && void 0 !== r35 || G4(t27, this.length - 8);
    const n28 = e36 + 256 * this[++t27] + 65536 * this[++t27] + this[++t27] * 2 ** 24, i34 = this[++t27] + 256 * this[++t27] + 65536 * this[++t27] + r35 * 2 ** 24;
    return BigInt(n28) + (BigInt(i34) << BigInt(32));
  }), u17.prototype.readBigUInt64BE = K(function(t27) {
    Y(t27 >>>= 0, "offset");
    const e36 = this[t27], r35 = this[t27 + 7];
    void 0 !== e36 && void 0 !== r35 || G4(t27, this.length - 8);
    const n28 = e36 * 2 ** 24 + 65536 * this[++t27] + 256 * this[++t27] + this[++t27], i34 = this[++t27] * 2 ** 24 + 65536 * this[++t27] + 256 * this[++t27] + r35;
    return (BigInt(n28) << BigInt(32)) + BigInt(i34);
  }), u17.prototype.readIntLE = function(t27, e36, r35) {
    t27 >>>= 0, e36 >>>= 0, r35 || x9(t27, e36, this.length);
    let n28 = this[t27], i34 = 1, o26 = 0;
    for (; ++o26 < e36 && (i34 *= 256); ) n28 += this[t27 + o26] * i34;
    return i34 *= 128, n28 >= i34 && (n28 -= Math.pow(2, 8 * e36)), n28;
  }, u17.prototype.readIntBE = function(t27, e36, r35) {
    t27 >>>= 0, e36 >>>= 0, r35 || x9(t27, e36, this.length);
    let n28 = e36, i34 = 1, o26 = this[t27 + --n28];
    for (; n28 > 0 && (i34 *= 256); ) o26 += this[t27 + --n28] * i34;
    return i34 *= 128, o26 >= i34 && (o26 -= Math.pow(2, 8 * e36)), o26;
  }, u17.prototype.readInt8 = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 1, this.length), 128 & this[t27] ? -1 * (255 - this[t27] + 1) : this[t27];
  }, u17.prototype.readInt16LE = function(t27, e36) {
    t27 >>>= 0, e36 || x9(t27, 2, this.length);
    const r35 = this[t27] | this[t27 + 1] << 8;
    return 32768 & r35 ? 4294901760 | r35 : r35;
  }, u17.prototype.readInt16BE = function(t27, e36) {
    t27 >>>= 0, e36 || x9(t27, 2, this.length);
    const r35 = this[t27 + 1] | this[t27] << 8;
    return 32768 & r35 ? 4294901760 | r35 : r35;
  }, u17.prototype.readInt32LE = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 4, this.length), this[t27] | this[t27 + 1] << 8 | this[t27 + 2] << 16 | this[t27 + 3] << 24;
  }, u17.prototype.readInt32BE = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 4, this.length), this[t27] << 24 | this[t27 + 1] << 16 | this[t27 + 2] << 8 | this[t27 + 3];
  }, u17.prototype.readBigInt64LE = K(function(t27) {
    Y(t27 >>>= 0, "offset");
    const e36 = this[t27], r35 = this[t27 + 7];
    void 0 !== e36 && void 0 !== r35 || G4(t27, this.length - 8);
    const n28 = this[t27 + 4] + 256 * this[t27 + 5] + 65536 * this[t27 + 6] + (r35 << 24);
    return (BigInt(n28) << BigInt(32)) + BigInt(e36 + 256 * this[++t27] + 65536 * this[++t27] + this[++t27] * 2 ** 24);
  }), u17.prototype.readBigInt64BE = K(function(t27) {
    Y(t27 >>>= 0, "offset");
    const e36 = this[t27], r35 = this[t27 + 7];
    void 0 !== e36 && void 0 !== r35 || G4(t27, this.length - 8);
    const n28 = (e36 << 24) + 65536 * this[++t27] + 256 * this[++t27] + this[++t27];
    return (BigInt(n28) << BigInt(32)) + BigInt(this[++t27] * 2 ** 24 + 65536 * this[++t27] + 256 * this[++t27] + r35);
  }), u17.prototype.readFloatLE = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 4, this.length), i33.read(this, t27, true, 23, 4);
  }, u17.prototype.readFloatBE = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 4, this.length), i33.read(this, t27, false, 23, 4);
  }, u17.prototype.readDoubleLE = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 8, this.length), i33.read(this, t27, true, 52, 8);
  }, u17.prototype.readDoubleBE = function(t27, e36) {
    return t27 >>>= 0, e36 || x9(t27, 8, this.length), i33.read(this, t27, false, 52, 8);
  }, u17.prototype.writeUintLE = u17.prototype.writeUIntLE = function(t27, e36, r35, n28) {
    if (t27 = +t27, e36 >>>= 0, r35 >>>= 0, !n28) {
      $2(this, t27, e36, r35, Math.pow(2, 8 * r35) - 1, 0);
    }
    let i34 = 1, o26 = 0;
    for (this[e36] = 255 & t27; ++o26 < r35 && (i34 *= 256); ) this[e36 + o26] = t27 / i34 & 255;
    return e36 + r35;
  }, u17.prototype.writeUintBE = u17.prototype.writeUIntBE = function(t27, e36, r35, n28) {
    if (t27 = +t27, e36 >>>= 0, r35 >>>= 0, !n28) {
      $2(this, t27, e36, r35, Math.pow(2, 8 * r35) - 1, 0);
    }
    let i34 = r35 - 1, o26 = 1;
    for (this[e36 + i34] = 255 & t27; --i34 >= 0 && (o26 *= 256); ) this[e36 + i34] = t27 / o26 & 255;
    return e36 + r35;
  }, u17.prototype.writeUint8 = u17.prototype.writeUInt8 = function(t27, e36, r35) {
    return t27 = +t27, e36 >>>= 0, r35 || $2(this, t27, e36, 1, 255, 0), this[e36] = 255 & t27, e36 + 1;
  }, u17.prototype.writeUint16LE = u17.prototype.writeUInt16LE = function(t27, e36, r35) {
    return t27 = +t27, e36 >>>= 0, r35 || $2(this, t27, e36, 2, 65535, 0), this[e36] = 255 & t27, this[e36 + 1] = t27 >>> 8, e36 + 2;
  }, u17.prototype.writeUint16BE = u17.prototype.writeUInt16BE = function(t27, e36, r35) {
    return t27 = +t27, e36 >>>= 0, r35 || $2(this, t27, e36, 2, 65535, 0), this[e36] = t27 >>> 8, this[e36 + 1] = 255 & t27, e36 + 2;
  }, u17.prototype.writeUint32LE = u17.prototype.writeUInt32LE = function(t27, e36, r35) {
    return t27 = +t27, e36 >>>= 0, r35 || $2(this, t27, e36, 4, 4294967295, 0), this[e36 + 3] = t27 >>> 24, this[e36 + 2] = t27 >>> 16, this[e36 + 1] = t27 >>> 8, this[e36] = 255 & t27, e36 + 4;
  }, u17.prototype.writeUint32BE = u17.prototype.writeUInt32BE = function(t27, e36, r35) {
    return t27 = +t27, e36 >>>= 0, r35 || $2(this, t27, e36, 4, 4294967295, 0), this[e36] = t27 >>> 24, this[e36 + 1] = t27 >>> 16, this[e36 + 2] = t27 >>> 8, this[e36 + 3] = 255 & t27, e36 + 4;
  }, u17.prototype.writeBigUInt64LE = K(function(t27, e36 = 0) {
    return P5(this, t27, e36, BigInt(0), BigInt("0xffffffffffffffff"));
  }), u17.prototype.writeBigUInt64BE = K(function(t27, e36 = 0) {
    return C5(this, t27, e36, BigInt(0), BigInt("0xffffffffffffffff"));
  }), u17.prototype.writeIntLE = function(t27, e36, r35, n28) {
    if (t27 = +t27, e36 >>>= 0, !n28) {
      const n29 = Math.pow(2, 8 * r35 - 1);
      $2(this, t27, e36, r35, n29 - 1, -n29);
    }
    let i34 = 0, o26 = 1, f21 = 0;
    for (this[e36] = 255 & t27; ++i34 < r35 && (o26 *= 256); ) t27 < 0 && 0 === f21 && 0 !== this[e36 + i34 - 1] && (f21 = 1), this[e36 + i34] = (t27 / o26 >> 0) - f21 & 255;
    return e36 + r35;
  }, u17.prototype.writeIntBE = function(t27, e36, r35, n28) {
    if (t27 = +t27, e36 >>>= 0, !n28) {
      const n29 = Math.pow(2, 8 * r35 - 1);
      $2(this, t27, e36, r35, n29 - 1, -n29);
    }
    let i34 = r35 - 1, o26 = 1, f21 = 0;
    for (this[e36 + i34] = 255 & t27; --i34 >= 0 && (o26 *= 256); ) t27 < 0 && 0 === f21 && 0 !== this[e36 + i34 + 1] && (f21 = 1), this[e36 + i34] = (t27 / o26 >> 0) - f21 & 255;
    return e36 + r35;
  }, u17.prototype.writeInt8 = function(t27, e36, r35) {
    return t27 = +t27, e36 >>>= 0, r35 || $2(this, t27, e36, 1, 127, -128), t27 < 0 && (t27 = 255 + t27 + 1), this[e36] = 255 & t27, e36 + 1;
  }, u17.prototype.writeInt16LE = function(t27, e36, r35) {
    return t27 = +t27, e36 >>>= 0, r35 || $2(this, t27, e36, 2, 32767, -32768), this[e36] = 255 & t27, this[e36 + 1] = t27 >>> 8, e36 + 2;
  }, u17.prototype.writeInt16BE = function(t27, e36, r35) {
    return t27 = +t27, e36 >>>= 0, r35 || $2(this, t27, e36, 2, 32767, -32768), this[e36] = t27 >>> 8, this[e36 + 1] = 255 & t27, e36 + 2;
  }, u17.prototype.writeInt32LE = function(t27, e36, r35) {
    return t27 = +t27, e36 >>>= 0, r35 || $2(this, t27, e36, 4, 2147483647, -2147483648), this[e36] = 255 & t27, this[e36 + 1] = t27 >>> 8, this[e36 + 2] = t27 >>> 16, this[e36 + 3] = t27 >>> 24, e36 + 4;
  }, u17.prototype.writeInt32BE = function(t27, e36, r35) {
    return t27 = +t27, e36 >>>= 0, r35 || $2(this, t27, e36, 4, 2147483647, -2147483648), t27 < 0 && (t27 = 4294967295 + t27 + 1), this[e36] = t27 >>> 24, this[e36 + 1] = t27 >>> 16, this[e36 + 2] = t27 >>> 8, this[e36 + 3] = 255 & t27, e36 + 4;
  }, u17.prototype.writeBigInt64LE = K(function(t27, e36 = 0) {
    return P5(this, t27, e36, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }), u17.prototype.writeBigInt64BE = K(function(t27, e36 = 0) {
    return C5(this, t27, e36, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }), u17.prototype.writeFloatLE = function(t27, e36, r35) {
    return N6(this, t27, e36, true, r35);
  }, u17.prototype.writeFloatBE = function(t27, e36, r35) {
    return N6(this, t27, e36, false, r35);
  }, u17.prototype.writeDoubleLE = function(t27, e36, r35) {
    return k4(this, t27, e36, true, r35);
  }, u17.prototype.writeDoubleBE = function(t27, e36, r35) {
    return k4(this, t27, e36, false, r35);
  }, u17.prototype.copy = function(t27, e36, r35, n28) {
    if (!u17.isBuffer(t27)) throw new TypeError("argument should be a Buffer");
    if (r35 || (r35 = 0), n28 || 0 === n28 || (n28 = this.length), e36 >= t27.length && (e36 = t27.length), e36 || (e36 = 0), n28 > 0 && n28 < r35 && (n28 = r35), n28 === r35) return 0;
    if (0 === t27.length || 0 === this.length) return 0;
    if (e36 < 0) throw new RangeError("targetStart out of bounds");
    if (r35 < 0 || r35 >= this.length) throw new RangeError("Index out of range");
    if (n28 < 0) throw new RangeError("sourceEnd out of bounds");
    n28 > this.length && (n28 = this.length), t27.length - e36 < n28 - r35 && (n28 = t27.length - e36 + r35);
    const i34 = n28 - r35;
    return this === t27 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(e36, r35, n28) : Uint8Array.prototype.set.call(t27, this.subarray(r35, n28), e36), i34;
  }, u17.prototype.fill = function(t27, e36, r35, n28) {
    if ("string" == typeof t27) {
      if ("string" == typeof e36 ? (n28 = e36, e36 = 0, r35 = this.length) : "string" == typeof r35 && (n28 = r35, r35 = this.length), void 0 !== n28 && "string" != typeof n28) throw new TypeError("encoding must be a string");
      if ("string" == typeof n28 && !u17.isEncoding(n28)) throw new TypeError("Unknown encoding: " + n28);
      if (1 === t27.length) {
        const e37 = t27.charCodeAt(0);
        ("utf8" === n28 && e37 < 128 || "latin1" === n28) && (t27 = e37);
      }
    } else "number" == typeof t27 ? t27 &= 255 : "boolean" == typeof t27 && (t27 = Number(t27));
    if (e36 < 0 || this.length < e36 || this.length < r35) throw new RangeError("Out of range index");
    if (r35 <= e36) return this;
    let i34;
    if (e36 >>>= 0, r35 = void 0 === r35 ? this.length : r35 >>> 0, t27 || (t27 = 0), "number" == typeof t27) for (i34 = e36; i34 < r35; ++i34) this[i34] = t27;
    else {
      const o26 = u17.isBuffer(t27) ? t27 : u17.from(t27, n28), f21 = o26.length;
      if (0 === f21) throw new TypeError('The value "' + t27 + '" is invalid for argument "value"');
      for (i34 = 0; i34 < r35 - e36; ++i34) this[i34 + e36] = o26[i34 % f21];
    }
    return this;
  };
  const F3 = {};
  function M2(t27, e36, r35) {
    F3[t27] = class extends r35 {
      constructor() {
        super(), Object.defineProperty(this, "message", { value: e36.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${t27}]`, delete this.name;
      }
      get code() {
        return t27;
      }
      set code(t28) {
        Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: t28, writable: true });
      }
      toString() {
        return `${this.name} [${t27}]: ${this.message}`;
      }
    };
  }
  function D3(t27) {
    let e36 = "", r35 = t27.length;
    const n28 = "-" === t27[0] ? 1 : 0;
    for (; r35 >= n28 + 4; r35 -= 3) e36 = `_${t27.slice(r35 - 3, r35)}${e36}`;
    return `${t27.slice(0, r35)}${e36}`;
  }
  function z5(t27, e36, r35, n28, i34, o26) {
    if (t27 > r35 || t27 < e36) {
      const n29 = "bigint" == typeof e36 ? "n" : "";
      let i35;
      throw i35 = o26 > 3 ? 0 === e36 || e36 === BigInt(0) ? `>= 0${n29} and < 2${n29} ** ${8 * (o26 + 1)}${n29}` : `>= -(2${n29} ** ${8 * (o26 + 1) - 1}${n29}) and < 2 ** ${8 * (o26 + 1) - 1}${n29}` : `>= ${e36}${n29} and <= ${r35}${n29}`, new F3.ERR_OUT_OF_RANGE("value", i35, t27);
    }
    !function(t28, e37, r36) {
      Y(e37, "offset"), void 0 !== t28[e37] && void 0 !== t28[e37 + r36] || G4(e37, t28.length - (r36 + 1));
    }(n28, i34, o26);
  }
  function Y(t27, e36) {
    if ("number" != typeof t27) throw new F3.ERR_INVALID_ARG_TYPE(e36, "number", t27);
  }
  function G4(t27, e36, r35) {
    if (Math.floor(t27) !== t27) throw Y(t27, r35), new F3.ERR_OUT_OF_RANGE(r35 || "offset", "an integer", t27);
    if (e36 < 0) throw new F3.ERR_BUFFER_OUT_OF_BOUNDS();
    throw new F3.ERR_OUT_OF_RANGE(r35 || "offset", `>= ${r35 ? 1 : 0} and <= ${e36}`, t27);
  }
  M2("ERR_BUFFER_OUT_OF_BOUNDS", function(t27) {
    return t27 ? `${t27} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
  }, RangeError), M2("ERR_INVALID_ARG_TYPE", function(t27, e36) {
    return `The "${t27}" argument must be of type number. Received type ${typeof e36}`;
  }, TypeError), M2("ERR_OUT_OF_RANGE", function(t27, e36, r35) {
    let n28 = `The value of "${t27}" is out of range.`, i34 = r35;
    return Number.isInteger(r35) && Math.abs(r35) > 2 ** 32 ? i34 = D3(String(r35)) : "bigint" == typeof r35 && (i34 = String(r35), (r35 > BigInt(2) ** BigInt(32) || r35 < -(BigInt(2) ** BigInt(32))) && (i34 = D3(i34)), i34 += "n"), n28 += ` It must be ${e36}. Received ${i34}`, n28;
  }, RangeError);
  const V4 = /[^+/0-9A-Za-z-_]/g;
  function q2(t27, e36) {
    let r35;
    e36 = e36 || 1 / 0;
    const n28 = t27.length;
    let i34 = null;
    const o26 = [];
    for (let f21 = 0; f21 < n28; ++f21) {
      if (r35 = t27.charCodeAt(f21), r35 > 55295 && r35 < 57344) {
        if (!i34) {
          if (r35 > 56319) {
            (e36 -= 3) > -1 && o26.push(239, 191, 189);
            continue;
          }
          if (f21 + 1 === n28) {
            (e36 -= 3) > -1 && o26.push(239, 191, 189);
            continue;
          }
          i34 = r35;
          continue;
        }
        if (r35 < 56320) {
          (e36 -= 3) > -1 && o26.push(239, 191, 189), i34 = r35;
          continue;
        }
        r35 = 65536 + (i34 - 55296 << 10 | r35 - 56320);
      } else i34 && (e36 -= 3) > -1 && o26.push(239, 191, 189);
      if (i34 = null, r35 < 128) {
        if ((e36 -= 1) < 0) break;
        o26.push(r35);
      } else if (r35 < 2048) {
        if ((e36 -= 2) < 0) break;
        o26.push(r35 >> 6 | 192, 63 & r35 | 128);
      } else if (r35 < 65536) {
        if ((e36 -= 3) < 0) break;
        o26.push(r35 >> 12 | 224, r35 >> 6 & 63 | 128, 63 & r35 | 128);
      } else {
        if (!(r35 < 1114112)) throw new Error("Invalid code point");
        if ((e36 -= 4) < 0) break;
        o26.push(r35 >> 18 | 240, r35 >> 12 & 63 | 128, r35 >> 6 & 63 | 128, 63 & r35 | 128);
      }
    }
    return o26;
  }
  function W2(t27) {
    return n27.toByteArray(function(t28) {
      if ((t28 = (t28 = t28.split("=")[0]).trim().replace(V4, "")).length < 2) return "";
      for (; t28.length % 4 != 0; ) t28 += "=";
      return t28;
    }(t27));
  }
  function X2(t27, e36, r35, n28) {
    let i34;
    for (i34 = 0; i34 < n28 && !(i34 + r35 >= e36.length || i34 >= t27.length); ++i34) e36[i34 + r35] = t27[i34];
    return i34;
  }
  function J(t27, e36) {
    return t27 instanceof e36 || null != t27 && null != t27.constructor && null != t27.constructor.name && t27.constructor.name === e36.name;
  }
  function Z2(t27) {
    return t27 != t27;
  }
  const H3 = function() {
    const t27 = "0123456789abcdef", e36 = new Array(256);
    for (let r35 = 0; r35 < 16; ++r35) {
      const n28 = 16 * r35;
      for (let i34 = 0; i34 < 16; ++i34) e36[n28 + i34] = t27[r35] + t27[i34];
    }
    return e36;
  }();
  function K(t27) {
    return "undefined" == typeof BigInt ? Q : t27;
  }
  function Q() {
    throw new Error("BigInt not supported");
  }
}(r);

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/borsh/lib/esm/types.mjs
var i = ["u8", "u16", "u32", "u64", "u128", "i8", "i16", "i32", "i64", "i128", "f32", "f64"];

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/borsh/lib/esm/buffer.mjs
var t = function() {
  function t26() {
    this.offset = 0, this.buffer_size = 256, this.buffer = new ArrayBuffer(this.buffer_size), this.view = new DataView(this.buffer);
  }
  return t26.prototype.resize_if_necessary = function(t27) {
    if (this.buffer_size - this.offset < t27) {
      this.buffer_size = Math.max(2 * this.buffer_size, this.buffer_size + t27);
      var e36 = new ArrayBuffer(this.buffer_size);
      new Uint8Array(e36).set(new Uint8Array(this.buffer)), this.buffer = e36, this.view = new DataView(e36);
    }
  }, t26.prototype.get_used_buffer = function() {
    return new Uint8Array(this.buffer).slice(0, this.offset);
  }, t26.prototype.store_value = function(t27, e36) {
    var s24 = e36.substring(1), f20 = parseInt(s24) / 8;
    this.resize_if_necessary(f20);
    var i33 = "f" === e36[0] ? "setFloat".concat(s24) : "i" === e36[0] ? "setInt".concat(s24) : "setUint".concat(s24);
    this.view[i33](this.offset, t27, true), this.offset += f20;
  }, t26.prototype.store_bytes = function(t27) {
    this.resize_if_necessary(t27.length), new Uint8Array(this.buffer).set(new Uint8Array(t27), this.offset), this.offset += t27.length;
  }, t26;
}();
var e = function() {
  function t26(t27) {
    this.offset = 0, this.buffer_size = t27.length, this.buffer = new ArrayBuffer(t27.length), new Uint8Array(this.buffer).set(t27), this.view = new DataView(this.buffer);
  }
  return t26.prototype.assert_enough_buffer = function(t27) {
    if (this.offset + t27 > this.buffer.byteLength) throw new Error("Error in schema, the buffer is smaller than expected");
  }, t26.prototype.consume_value = function(t27) {
    var e36 = t27.substring(1), s24 = parseInt(e36) / 8;
    this.assert_enough_buffer(s24);
    var f20 = "f" === t27[0] ? "getFloat".concat(e36) : "i" === t27[0] ? "getInt".concat(e36) : "getUint".concat(e36), i33 = this.view[f20](this.offset, true);
    return this.offset += s24, i33;
  }, t26.prototype.consume_bytes = function(t27) {
    this.assert_enough_buffer(t27);
    var e36 = this.buffer.slice(this.offset, this.offset + t27);
    return this.offset += t27, e36;
  }, t26;
}();

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/borsh/lib/esm/utils.mjs
var n;
var o = (n = function(t26, o25) {
  return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t27, n27) {
    t27.__proto__ = n27;
  } || function(t27, n27) {
    for (var o26 in n27) Object.prototype.hasOwnProperty.call(n27, o26) && (t27[o26] = n27[o26]);
  }, n(t26, o25);
}, function(t26, o25) {
  if ("function" != typeof o25 && null !== o25) throw new TypeError("Class extends value " + String(o25) + " is not a constructor or null");
  function e36() {
    this.constructor = t26;
  }
  n(t26, o25), t26.prototype = null === o25 ? Object.create(o25) : (e36.prototype = o25.prototype, new e36());
});
function e2(t26) {
  return Array.isArray(t26) || !!t26 && "object" == typeof t26 && "length" in t26 && "number" == typeof t26.length && (0 === t26.length || t26.length > 0 && t26.length - 1 in t26);
}
function r4(t26, n27, o25) {
  if (typeof t26 !== n27) throw new Error("Expected ".concat(n27, " not ").concat(typeof t26, "(").concat(t26, ") at ").concat(o25.join(".")));
}
function c(t26, n27) {
  if (!["number", "string", "bigint", "boolean"].includes(typeof t26) && !("object" == typeof t26 && null !== t26 && "toString" in t26)) throw new Error("Expected bigint, number, boolean or string not ".concat(typeof t26, "(").concat(t26, ") at ").concat(n27.join(".")));
}
function i2(t26, n27, o25) {
  if (t26 !== n27) throw new Error("Array length ".concat(t26, " does not match schema length ").concat(n27, " at ").concat(o25.join(".")));
}
function a(t26, n27) {
  if ("object" != typeof t26 || null === t26) throw new Error("Expected object not ".concat(typeof t26, "(").concat(t26, ") at ").concat(n27.join(".")));
}
var f = i.concat(["bool", "string"]);
var u2 = ["option", "enum", "array", "set", "map", "struct"];
var y = function(t26) {
  function n27(n28, o25) {
    var e36 = "Invalid schema: ".concat(JSON.stringify(n28), " expected ").concat(o25);
    return t26.call(this, e36) || this;
  }
  return o(n27, t26), n27;
}(Error);
function p(t26) {
  if ("string" != typeof t26 || !f.includes(t26)) {
    if (t26 && "object" == typeof t26) {
      var n27 = Object.keys(t26);
      if (1 === n27.length && u2.includes(n27[0])) {
        var o25 = n27[0];
        if ("option" === o25) return p(t26[o25]);
        if ("enum" === o25) return function(t27) {
          if (!Array.isArray(t27)) throw new y(t27, "Array");
          for (var n28 = 0, o26 = t27; n28 < o26.length; n28++) {
            var e36 = o26[n28];
            if ("object" != typeof e36 || !("struct" in e36)) throw new Error('Missing "struct" key in enum schema');
            if ("object" != typeof e36.struct || 1 !== Object.keys(e36.struct).length) throw new Error('The "struct" in each enum must have a single key');
            p({ struct: e36.struct });
          }
        }(t26[o25]);
        if ("array" === o25) return function(t27) {
          if ("object" != typeof t27) throw new y(t27, "{ type, len? }");
          if (t27.len && "number" != typeof t27.len) throw new Error("Invalid schema: ".concat(t27));
          if ("type" in t27) return p(t27.type);
          throw new y(t27, "{ type, len? }");
        }(t26[o25]);
        if ("set" === o25) return p(t26[o25]);
        if ("map" === o25) return function(t27) {
          if ("object" != typeof t27 || !("key" in t27) || !("value" in t27)) throw new y(t27, "{ key, value }");
          p(t27.key), p(t27.value);
        }(t26[o25]);
        if ("struct" === o25) return function(t27) {
          if ("object" != typeof t27) throw new y(t27, "object");
          for (var n28 in t27) p(t27[n28]);
        }(t26[o25]);
      }
    }
    throw new y(t26, u2.join(", ") + " or " + f.join(", "));
  }
}

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/borsh/lib/esm/serialize.mjs
var c2 = function() {
  function c21(e36) {
    this.encoded = new t(), this.fieldPath = ["value"], this.checkTypes = e36;
  }
  return c21.prototype.encode = function(e36, t26) {
    return this.encode_value(e36, t26), this.encoded.get_used_buffer();
  }, c21.prototype.encode_value = function(t26, n27) {
    if ("string" == typeof n27) {
      if (i.includes(n27)) return this.encode_integer(t26, n27);
      if ("string" === n27) return this.encode_string(t26);
      if ("bool" === n27) return this.encode_boolean(t26);
    }
    if ("object" == typeof n27) {
      if ("option" in n27) return this.encode_option(t26, n27);
      if ("enum" in n27) return this.encode_enum(t26, n27);
      if ("array" in n27) return this.encode_array(t26, n27);
      if ("set" in n27) return this.encode_set(t26, n27);
      if ("map" in n27) return this.encode_map(t26, n27);
      if ("struct" in n27) return this.encode_struct(t26, n27);
    }
  }, c21.prototype.encode_integer = function(e36, t26) {
    var r35 = parseInt(t26.substring(1));
    r35 <= 32 || "f64" == t26 ? (this.checkTypes && r4(e36, "number", this.fieldPath), this.encoded.store_value(e36, t26)) : (this.checkTypes && c(e36, this.fieldPath), this.encode_bigint(BigInt(e36), r35));
  }, c21.prototype.encode_bigint = function(e36, t26) {
    for (var n27 = t26 / 8, o25 = new Uint8Array(n27), r35 = 0; r35 < n27; r35++) o25[r35] = Number(e36 & BigInt(255)), e36 >>= BigInt(8);
    this.encoded.store_bytes(new Uint8Array(o25));
  }, c21.prototype.encode_string = function(e36) {
    this.checkTypes && r4(e36, "string", this.fieldPath);
    for (var t26 = e36, o25 = [], r35 = 0; r35 < t26.length; r35++) {
      var i33 = t26.charCodeAt(r35);
      i33 < 128 ? o25.push(i33) : i33 < 2048 ? o25.push(192 | i33 >> 6, 128 | 63 & i33) : i33 < 55296 || i33 >= 57344 ? o25.push(224 | i33 >> 12, 128 | i33 >> 6 & 63, 128 | 63 & i33) : (r35++, i33 = 65536 + ((1023 & i33) << 10 | 1023 & t26.charCodeAt(r35)), o25.push(240 | i33 >> 18, 128 | i33 >> 12 & 63, 128 | i33 >> 6 & 63, 128 | 63 & i33));
    }
    this.encoded.store_value(o25.length, "u32"), this.encoded.store_bytes(new Uint8Array(o25));
  }, c21.prototype.encode_boolean = function(e36) {
    this.checkTypes && r4(e36, "boolean", this.fieldPath), this.encoded.store_value(e36 ? 1 : 0, "u8");
  }, c21.prototype.encode_option = function(e36, t26) {
    null == e36 ? this.encoded.store_value(0, "u8") : (this.encoded.store_value(1, "u8"), this.encode_value(e36, t26.option));
  }, c21.prototype.encode_enum = function(e36, t26) {
    this.checkTypes && a(e36, this.fieldPath);
    for (var n27 = Object.keys(e36)[0], o25 = 0; o25 < t26.enum.length; o25++) {
      var i33 = t26.enum[o25];
      if (n27 === Object.keys(i33.struct)[0]) return this.encoded.store_value(o25, "u8"), this.encode_struct(e36, i33);
    }
    throw new Error("Enum key (".concat(n27, ") not found in enum schema: ").concat(JSON.stringify(t26), " at ").concat(this.fieldPath.join(".")));
  }, c21.prototype.encode_array = function(e36, t26) {
    if (e2(e36)) return this.encode_arraylike(e36, t26);
    if (e36 instanceof ArrayBuffer) return this.encode_buffer(e36, t26);
    throw new Error("Expected Array-like not ".concat(typeof e36, "(").concat(e36, ") at ").concat(this.fieldPath.join(".")));
  }, c21.prototype.encode_arraylike = function(e36, t26) {
    t26.array.len ? i2(e36.length, t26.array.len, this.fieldPath) : this.encoded.store_value(e36.length, "u32");
    for (var n27 = 0; n27 < e36.length; n27++) this.encode_value(e36[n27], t26.array.type);
  }, c21.prototype.encode_buffer = function(e36, t26) {
    t26.array.len ? i2(e36.byteLength, t26.array.len, this.fieldPath) : this.encoded.store_value(e36.byteLength, "u32"), this.encoded.store_bytes(new Uint8Array(e36));
  }, c21.prototype.encode_set = function(e36, t26) {
    this.checkTypes && r4(e36, "object", this.fieldPath);
    var o25 = e36 instanceof Set ? Array.from(e36.values()) : Object.values(e36);
    this.encoded.store_value(o25.length, "u32");
    for (var r35 = 0, i33 = o25; r35 < i33.length; r35++) {
      var s24 = i33[r35];
      this.encode_value(s24, t26.set);
    }
  }, c21.prototype.encode_map = function(e36, t26) {
    this.checkTypes && r4(e36, "object", this.fieldPath);
    var o25 = e36 instanceof Map, r35 = o25 ? Array.from(e36.keys()) : Object.keys(e36);
    this.encoded.store_value(r35.length, "u32");
    for (var i33 = 0, s24 = r35; i33 < s24.length; i33++) {
      var c22 = s24[i33];
      this.encode_value(c22, t26.map.key), this.encode_value(o25 ? e36.get(c22) : e36[c22], t26.map.value);
    }
  }, c21.prototype.encode_struct = function(e36, t26) {
    this.checkTypes && r4(e36, "object", this.fieldPath);
    for (var o25 = 0, r35 = Object.keys(t26.struct); o25 < r35.length; o25++) {
      var i33 = r35[o25];
      this.fieldPath.push(i33), this.encode_value(e36[i33], t26.struct[i33]), this.fieldPath.pop();
    }
  }, c21;
}();

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/borsh/lib/esm/deserialize.mjs
var r5 = function() {
  function r35(e36) {
    this.buffer = new e(e36);
  }
  return r35.prototype.decode = function(e36) {
    return this.decode_value(e36);
  }, r35.prototype.decode_value = function(t26) {
    if ("string" == typeof t26) {
      if (i.includes(t26)) return this.decode_integer(t26);
      if ("string" === t26) return this.decode_string();
      if ("bool" === t26) return this.decode_boolean();
    }
    if ("object" == typeof t26) {
      if ("option" in t26) return this.decode_option(t26);
      if ("enum" in t26) return this.decode_enum(t26);
      if ("array" in t26) return this.decode_array(t26);
      if ("set" in t26) return this.decode_set(t26);
      if ("map" in t26) return this.decode_map(t26);
      if ("struct" in t26) return this.decode_struct(t26);
    }
    throw new Error("Unsupported type: ".concat(t26));
  }, r35.prototype.decode_integer = function(e36) {
    var t26 = parseInt(e36.substring(1));
    return t26 <= 32 || "f64" == e36 ? this.buffer.consume_value(e36) : this.decode_bigint(t26, e36.startsWith("i"));
  }, r35.prototype.decode_bigint = function(e36, t26) {
    void 0 === t26 && (t26 = false);
    var r36 = e36 / 8, o25 = new Uint8Array(this.buffer.consume_bytes(r36)), n27 = o25.reduceRight(function(e37, t27) {
      return e37 + t27.toString(16).padStart(2, "0");
    }, "");
    return t26 && o25[r36 - 1] ? BigInt.asIntN(e36, BigInt("0x".concat(n27))) : BigInt("0x".concat(n27));
  }, r35.prototype.decode_string = function() {
    for (var e36 = this.decode_integer("u32"), t26 = new Uint8Array(this.buffer.consume_bytes(e36)), r36 = [], o25 = 0; o25 < e36; ++o25) {
      var n27 = t26[o25];
      if (n27 < 128) r36.push(n27);
      else if (n27 < 224) r36.push((31 & n27) << 6 | 63 & t26[++o25]);
      else if (n27 < 240) r36.push((15 & n27) << 12 | (63 & t26[++o25]) << 6 | 63 & t26[++o25]);
      else {
        var i33 = (7 & n27) << 18 | (63 & t26[++o25]) << 12 | (63 & t26[++o25]) << 6 | 63 & t26[++o25];
        r36.push(i33);
      }
    }
    return String.fromCodePoint.apply(String, r36);
  }, r35.prototype.decode_boolean = function() {
    return this.buffer.consume_value("u8") > 0;
  }, r35.prototype.decode_option = function(e36) {
    var t26 = this.buffer.consume_value("u8");
    if (1 === t26) return this.decode_value(e36.option);
    if (0 !== t26) throw new Error("Invalid option ".concat(t26));
    return null;
  }, r35.prototype.decode_enum = function(e36) {
    var t26, r36 = this.buffer.consume_value("u8");
    if (r36 > e36.enum.length) throw new Error("Enum option ".concat(r36, " is not available"));
    var o25 = e36.enum[r36].struct, n27 = Object.keys(o25)[0];
    return (t26 = {})[n27] = this.decode_value(o25[n27]), t26;
  }, r35.prototype.decode_array = function(e36) {
    for (var t26 = [], r36 = e36.array.len ? e36.array.len : this.decode_integer("u32"), o25 = 0; o25 < r36; ++o25) t26.push(this.decode_value(e36.array.type));
    return t26;
  }, r35.prototype.decode_set = function(e36) {
    for (var t26 = this.decode_integer("u32"), r36 = /* @__PURE__ */ new Set(), o25 = 0; o25 < t26; ++o25) r36.add(this.decode_value(e36.set));
    return r36;
  }, r35.prototype.decode_map = function(e36) {
    for (var t26 = this.decode_integer("u32"), r36 = /* @__PURE__ */ new Map(), o25 = 0; o25 < t26; ++o25) {
      var n27 = this.decode_value(e36.map.key), i33 = this.decode_value(e36.map.value);
      r36.set(n27, i33);
    }
    return r36;
  }, r35.prototype.decode_struct = function(e36) {
    var t26 = {};
    for (var r36 in e36.struct) t26[r36] = this.decode_value(e36.struct[r36]);
    return t26;
  }, r35;
}();

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/borsh/lib/esm/index.mjs
function i3(o25, i33, m30) {
  return void 0 === m30 && (m30 = true), m30 && p(o25), new c2(m30).encode(i33, o25);
}
function m(e36, i33, m30) {
  return void 0 === m30 && (m30 = true), m30 && p(e36), new r5(i33).decode(e36);
}

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/burnInstruction.mjs
var r6 = class _r {
  constructor() {
    this.tag = 16;
  }
  serialize() {
    return i3(_r.schema, this);
  }
  getInstruction(e36, r35, t26, u17, p16, a25, b10, n27, o25, l17) {
    const m30 = r.Buffer.from(this.serialize());
    let h16 = [];
    return h16.push({ pubkey: r35, isSigner: false, isWritable: false }), h16.push({ pubkey: t26, isSigner: false, isWritable: false }), h16.push({ pubkey: u17, isSigner: false, isWritable: true }), h16.push({ pubkey: p16, isSigner: false, isWritable: true }), h16.push({ pubkey: a25, isSigner: false, isWritable: true }), h16.push({ pubkey: b10, isSigner: false, isWritable: true }), h16.push({ pubkey: n27, isSigner: false, isWritable: false }), h16.push({ pubkey: o25, isSigner: true, isWritable: false }), h16.push({ pubkey: l17, isSigner: false, isWritable: true }), new TransactionInstruction({ keys: h16, programId: e36, data: m30 });
  }
};
r6.schema = { struct: { tag: "u8" } };

// node_modules/@bonfida/spl-name-service/dist/esm/constants.mjs
var w = new PublicKey("namesLPneVptA9Z5rqUDD9tMTWEJwofgaYwp8cawRkX");
var n2 = "SPL Name Service";
var r7 = new PublicKey("58PwtjSDuFHuUkYjH9BYnnQKHfwo9reZhC2zMJv9JPkx");
var o2 = new PublicKey("jCebN34bUfdeUYJT13J1yG16XWQpt5PDx6Mse9GUqhR");
var E = new PublicKey("33m47vH6Eav6jr5Ry86XjhRft2jRBLDnDgPSHoquXi2Z");
var p2 = E;
var t2 = new PublicKey("FvPH7PrVrLGKPfqaf3xJodFTjZriqrAXXLTVWEorTFBi");
var L = new PublicKey("4YcexoW3r78zz16J2aqmukBLRwGq6rAvWzJpkYAXqebv");
var z = new PublicKey("EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v");
var B = [new PublicKey("3ogYncmMM5CmytsGCqKHydmXmKUZ6sGWvizkzqwT7zb1"), new PublicKey("DM1jJCkZZEwY5tmWbgvKRxsDFzXCdbfrYCCH1CtwguEs"), new PublicKey("ADCp4QXFajHrhy4f43pD6GJFtQLkdBY2mjS9DfCk7tNW"), new PublicKey("2XTgjw8yi1E3Etgj4CUyRD7Zk49gynH2U9gA5N2MY4NP"), new PublicKey("5PwNeqQPiygQks9R17jUAodZQNuhvCqqkrxSaeNE8qTR"), new PublicKey("8kJqxAbqbPLGLMgB6FhLcnw2SiUEavx2aEGM3WQGhtJF"), new PublicKey("HemvJzwxvVpWBjPETpaseAH395WAxb2G73MeUfjVkK1u"), new PublicKey("7hMiiUtkH4StMPJxyAtvzXTUjecTniQ8czkCPusf5eSW"), new PublicKey("DGpjHo4yYA3NgHvhHTp3XfBFrESsx1DnhfTr8D881ZBM"), new PublicKey("7vWSqSw1eCXZXXUubuHWssXELNQ8MLaDgAs2ErEfCKxn"), new PublicKey("5F6gcdzpw7wUjNEugdsD4aLJdEQ4Wt8d6E85vaQXZQSJ"), new PublicKey("XEy9o73JBN2pEuN7aspe8mVLaWbL4ozjJs1tNRxx8bL"), new PublicKey("D5cLoAGjNTHKU1UGv2bYwbnyRoGTMe3sbpLtJW3fRq91"), new PublicKey("FePcCmrr7vgjeFXcXtJHqShSXydaTrga2wfHRt9RrYvP")];
var i4 = /* @__PURE__ */ new Map([["EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v", "USDC"], ["Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB", "USDT"], ["So11111111111111111111111111111111111111112", "SOL"], ["EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp", "FIDA"], ["mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So", "MSOL"], ["DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263", "BONK"], ["EPeUFDgHRxs9xxEPVaL6kfGQvCon7jmAWKVUHuux1Tpz", "BAT"], ["HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3", "PYTH"], ["bSo13r4TkiE4KumL71LsHTPpL2euBYLFx6h9HP3piy1", "BSOL"], ["6McPRfPV6bY1e9hLxWyG54W9i9Epq75QBvXg2oetBVTB", "INJ"]]);
var y2 = /* @__PURE__ */ new Map([["EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v", { price: "Gnt27xtC473ZT2Mw5u8wZ68Z3gULkSTb5DuxJy7eJotD", product: "8GWTTbNiXdmyZREXbjsZBmCRuzdPrW55dnZGDkTRjWvb" }], ["Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB", { price: "3vxLXJqLqF3JG5TCbYycbKWRBbCJQLxQmBGCkyqEEefL", product: "Av6XyAMJnyi68FdsKSPYgzfXGjYrrt6jcAMwtvzLCqaM" }], ["So11111111111111111111111111111111111111112", { price: "H6ARHf6YXhGYeQfUzQNGk6rDNnLBQKrenN712K4AQJEG", product: "ALP8SdU9oARYVLgLR7LrqMNCYBnhtnQz1cj6bwgwQmgj" }], ["EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp", { price: "ETp9eKXVv1dWwHSpsXRUuXHmw24PwRkttCGVgpZEY9zF", product: "HyEB4Goiv7QyfFStaBn49JqQzSTV1ybtVikwsMLH1f2M" }], ["mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So", { price: "E4v1BBgoso9s64TQvmyownAVJbhbEPGyzA3qn4n46qj9", product: "BS2iAqT67j8hA9Jji4B8UpL3Nfw9kwPfU5s4qeaf1e7r" }], ["DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263", { price: "8ihFLu5FimgTQ1Unh4dVyEHUGodJ5gJQCrQf4KUVB9bN", product: "FerFD54J6RgmQVCR5oNgpzXmz8BW2eBNhhirb1d5oifo" }], ["EPeUFDgHRxs9xxEPVaL6kfGQvCon7jmAWKVUHuux1Tpz", { price: "AbMTYZ82Xfv9PtTQ5e1fJXemXjzqEEFHP3oDLRTae6yz", product: "8xTEctXKo6Xo3EzNhSNp4TUe8mgfwWFbDUXJhuubvrKx" }], ["HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3", { price: "nrYkQQQur7z8rYTST3G9GqATviK5SxTDkrqd21MW6Ue", product: "AiQB4WngNPKDe3iWAwZmMzbULDAAfUD6Sr1knfZNJj3y" }], ["bSo13r4TkiE4KumL71LsHTPpL2euBYLFx6h9HP3piy1", { price: "AFrYBhb5wKQtxRS9UA9YRS4V3dwFm7SqmS6DHKq6YVgo", product: "3RtUHQR2LQ7su5R4zWwjupx72sWRGvLA4cFmnbHnT9M7" }], ["6McPRfPV6bY1e9hLxWyG54W9i9Epq75QBvXg2oetBVTB", { price: "9EdtbaivHQYA4Nh3XzGR6DwRaoorqXYnmpfsnFhvwuVj", product: "5Q5kyCVzssrGMd2BniSdVeRwjNWrGGrFhMrgGt4zURyA" }]]);
var C = new PublicKey("AHtgzX45WTKfkPG53L6WYhGEXwQkN1BVknET3sVsLL8J");
var G = new PublicKey("GcWEQ9K78FV7LEHteFVciYApERk5YvQuFDQPk1yYJVXi");
var P = new PublicKey("5D2zKog251d6KPCyFyLMt3KroWwXXPWSgTPyhV22K2gR");
var S = new PublicKey("BPeXUQDqGbzxeK1LJby6ugvCBuo7kRSEUkjD726mUVsz");
var x = new PublicKey("72aLKvXeV4aansAQtxKymeXDevT5ed6sCuz9iN62ugPT");
var v = new PublicKey("metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s");
var R = new PublicKey("pythWSnswVUd12oZpeFP8e9CVaEqJg25g1Vtc2biRsT");
var X = /* @__PURE__ */ new Map([["EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v", [234, 160, 32, 198, 28, 196, 121, 113, 40, 19, 70, 28, 225, 83, 137, 74, 150, 166, 192, 11, 33, 237, 12, 252, 39, 152, 209, 249, 169, 233, 201, 74]], ["Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB", [43, 137, 185, 220, 143, 223, 159, 52, 112, 154, 91, 16, 107, 71, 47, 15, 57, 187, 108, 169, 206, 4, 176, 253, 127, 46, 151, 22, 136, 226, 229, 59]], ["So11111111111111111111111111111111111111112", [239, 13, 139, 111, 218, 44, 235, 164, 29, 161, 93, 64, 149, 209, 218, 57, 42, 13, 47, 142, 208, 198, 199, 188, 15, 76, 250, 200, 194, 128, 181, 109]], ["EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp", [200, 6, 87, 183, 246, 243, 234, 194, 114, 24, 208, 157, 90, 78, 84, 228, 123, 37, 118, 141, 159, 94, 16, 172, 21, 254, 44, 249, 0, 136, 20, 0]], ["mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So", [194, 40, 154, 106, 67, 210, 206, 145, 198, 245, 92, 174, 195, 112, 244, 172, 195, 138, 46, 212, 119, 245, 136, 19, 51, 76, 109, 3, 116, 159, 242, 164]], ["DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263", [114, 176, 33, 33, 124, 163, 254, 104, 146, 42, 25, 170, 249, 144, 16, 156, 185, 216, 78, 154, 208, 4, 180, 210, 2, 90, 214, 245, 41, 49, 68, 25]], ["EPeUFDgHRxs9xxEPVaL6kfGQvCon7jmAWKVUHuux1Tpz", [142, 134, 15, 183, 78, 96, 229, 115, 107, 69, 93, 130, 246, 11, 55, 40, 4, 156, 52, 142, 148, 150, 26, 221, 95, 150, 27, 2, 253, 238, 37, 53]], ["HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3", [11, 191, 40, 233, 168, 65, 161, 204, 120, 143, 106, 54, 27, 23, 202, 7, 45, 14, 163, 9, 138, 30, 93, 241, 195, 146, 45, 6, 113, 149, 121, 255]], ["bSo13r4TkiE4KumL71LsHTPpL2euBYLFx6h9HP3piy1", [137, 135, 83, 121, 231, 15, 143, 186, 220, 23, 174, 243, 21, 173, 243, 168, 213, 209, 96, 184, 17, 67, 85, 55, 224, 60, 151, 232, 170, 201, 125, 156]], ["6McPRfPV6bY1e9hLxWyG54W9i9Epq75QBvXg2oetBVTB", [122, 91, 193, 210, 181, 106, 208, 41, 4, 140, 214, 57, 100, 179, 173, 39, 118, 234, 223, 129, 46, 220, 26, 67, 163, 20, 6, 203, 84, 191, 245, 146]]]);

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@bonfida/sns-records/dist/index.mjs
var n3;
var s = ["u8", "u16", "u32", "u64", "u128", "i8", "i16", "i32", "i64", "i128", "f32", "f64"];
var o3 = function() {
  function e36() {
    this.offset = 0, this.buffer_size = 256, this.buffer = new ArrayBuffer(this.buffer_size), this.view = new DataView(this.buffer);
  }
  return e36.prototype.resize_if_necessary = function(e37) {
    if (this.buffer_size - this.offset < e37) {
      this.buffer_size = Math.max(2 * this.buffer_size, this.buffer_size + e37);
      var t26 = new ArrayBuffer(this.buffer_size);
      new Uint8Array(t26).set(new Uint8Array(this.buffer)), this.buffer = t26, this.view = new DataView(t26);
    }
  }, e36.prototype.get_used_buffer = function() {
    return new Uint8Array(this.buffer).slice(0, this.offset);
  }, e36.prototype.store_value = function(e37, t26) {
    var r35 = t26.substring(1), i33 = parseInt(r35) / 8;
    this.resize_if_necessary(i33);
    var n27 = "f" === t26[0] ? "setFloat".concat(r35) : "i" === t26[0] ? "setInt".concat(r35) : "setUint".concat(r35);
    this.view[n27](this.offset, e37, true), this.offset += i33;
  }, e36.prototype.store_bytes = function(e37) {
    this.resize_if_necessary(e37.length), new Uint8Array(this.buffer).set(new Uint8Array(e37), this.offset), this.offset += e37.length;
  }, e36;
}();
var a2 = function() {
  function e36(e37) {
    this.offset = 0, this.buffer_size = e37.length, this.buffer = new ArrayBuffer(e37.length), new Uint8Array(this.buffer).set(e37), this.view = new DataView(this.buffer);
  }
  return e36.prototype.assert_enough_buffer = function(e37) {
    if (this.offset + e37 > this.buffer.byteLength) throw new Error("Error in schema, the buffer is smaller than expected");
  }, e36.prototype.consume_value = function(e37) {
    var t26 = e37.substring(1), r35 = parseInt(t26) / 8;
    this.assert_enough_buffer(r35);
    var i33 = "f" === e37[0] ? "getFloat".concat(t26) : "i" === e37[0] ? "getInt".concat(t26) : "getUint".concat(t26), n27 = this.view[i33](this.offset, true);
    return this.offset += r35, n27;
  }, e36.prototype.consume_bytes = function(e37) {
    this.assert_enough_buffer(e37);
    var t26 = this.buffer.slice(this.offset, this.offset + e37);
    return this.offset += e37, t26;
  }, e36;
}();
var u3 = (n3 = function(e36, t26) {
  return n3 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e37, t27) {
    e37.__proto__ = t27;
  } || function(e37, t27) {
    for (var r35 in t27) Object.prototype.hasOwnProperty.call(t27, r35) && (e37[r35] = t27[r35]);
  }, n3(e36, t26);
}, function(e36, t26) {
  if ("function" != typeof t26 && null !== t26) throw new TypeError("Class extends value " + String(t26) + " is not a constructor or null");
  function r35() {
    this.constructor = e36;
  }
  n3(e36, t26), e36.prototype = null === t26 ? Object.create(t26) : (r35.prototype = t26.prototype, new r35());
});
function c3(e36, t26, r35) {
  if (typeof e36 !== t26) throw new Error("Expected ".concat(t26, " not ").concat(typeof e36, "(").concat(e36, ") at ").concat(r35.join(".")));
}
function h2(e36, t26, r35) {
  if (e36 !== t26) throw new Error("Array length ".concat(e36, " does not match schema length ").concat(t26, " at ").concat(r35.join(".")));
}
var f2 = s.concat(["bool", "string"]);
var d = ["option", "enum", "array", "set", "map", "struct"];
var l = function(e36) {
  function t26(t27, r35) {
    var i33 = "Invalid schema: ".concat(JSON.stringify(t27), " expected ").concat(r35);
    return e36.call(this, i33) || this;
  }
  return u3(t26, e36), t26;
}(Error);
function p3(e36) {
  if ("string" != typeof e36 || !f2.includes(e36)) {
    if (e36 && "object" == typeof e36) {
      var t26 = Object.keys(e36);
      if (1 === t26.length && d.includes(t26[0])) {
        var r35 = t26[0];
        if ("option" === r35) return p3(e36[r35]);
        if ("enum" === r35) return function(e37) {
          if (!Array.isArray(e37)) throw new l(e37, "Array");
          for (var t27 = 0, r36 = e37; t27 < r36.length; t27++) {
            var i33 = r36[t27];
            if ("object" != typeof i33 || !("struct" in i33)) throw new Error('Missing "struct" key in enum schema');
            if ("object" != typeof i33.struct || 1 !== Object.keys(i33.struct).length) throw new Error('The "struct" in each enum must have a single key');
            p3({ struct: i33.struct });
          }
        }(e36[r35]);
        if ("array" === r35) return function(e37) {
          if ("object" != typeof e37) throw new l(e37, "{ type, len? }");
          if (e37.len && "number" != typeof e37.len) throw new Error("Invalid schema: ".concat(e37));
          if ("type" in e37) return p3(e37.type);
          throw new l(e37, "{ type, len? }");
        }(e36[r35]);
        if ("set" === r35) return p3(e36[r35]);
        if ("map" === r35) return function(e37) {
          if ("object" != typeof e37 || !("key" in e37) || !("value" in e37)) throw new l(e37, "{ key, value }");
          p3(e37.key), p3(e37.value);
        }(e36[r35]);
        if ("struct" === r35) return function(e37) {
          if ("object" != typeof e37) throw new l(e37, "object");
          for (var t27 in e37) p3(e37[t27]);
        }(e36[r35]);
      }
    }
    throw new l(e36, d.join(", ") + " or " + f2.join(", "));
  }
}
var y3 = function() {
  function e36(e37) {
    this.encoded = new o3(), this.fieldPath = ["value"], this.checkTypes = e37;
  }
  return e36.prototype.encode = function(e37, t26) {
    return this.encode_value(e37, t26), this.encoded.get_used_buffer();
  }, e36.prototype.encode_value = function(e37, t26) {
    if ("string" == typeof t26) {
      if (s.includes(t26)) return this.encode_integer(e37, t26);
      if ("string" === t26) return this.encode_string(e37);
      if ("bool" === t26) return this.encode_boolean(e37);
    }
    if ("object" == typeof t26) {
      if ("option" in t26) return this.encode_option(e37, t26);
      if ("enum" in t26) return this.encode_enum(e37, t26);
      if ("array" in t26) return this.encode_array(e37, t26);
      if ("set" in t26) return this.encode_set(e37, t26);
      if ("map" in t26) return this.encode_map(e37, t26);
      if ("struct" in t26) return this.encode_struct(e37, t26);
    }
  }, e36.prototype.encode_integer = function(e37, t26) {
    var r35 = parseInt(t26.substring(1));
    r35 <= 32 || "f64" == t26 ? (this.checkTypes && c3(e37, "number", this.fieldPath), this.encoded.store_value(e37, t26)) : (this.checkTypes && function(e38, t27) {
      if (!(["number", "string", "bigint", "boolean"].includes(typeof e38) || "object" == typeof e38 && null !== e38 && "toString" in e38)) throw new Error("Expected bigint, number, boolean or string not ".concat(typeof e38, "(").concat(e38, ") at ").concat(t27.join(".")));
    }(e37, this.fieldPath), this.encode_bigint(BigInt(e37), r35));
  }, e36.prototype.encode_bigint = function(e37, t26) {
    for (var r35 = t26 / 8, i33 = new Uint8Array(r35), n27 = 0; n27 < r35; n27++) i33[n27] = Number(e37 & BigInt(255)), e37 >>= BigInt(8);
    this.encoded.store_bytes(new Uint8Array(i33));
  }, e36.prototype.encode_string = function(e37) {
    this.checkTypes && c3(e37, "string", this.fieldPath);
    var t26 = e37;
    this.encoded.store_value(t26.length, "u32");
    for (var r35 = 0; r35 < t26.length; r35++) this.encoded.store_value(t26.charCodeAt(r35), "u8");
  }, e36.prototype.encode_boolean = function(e37) {
    this.checkTypes && c3(e37, "boolean", this.fieldPath), this.encoded.store_value(e37 ? 1 : 0, "u8");
  }, e36.prototype.encode_option = function(e37, t26) {
    null == e37 ? this.encoded.store_value(0, "u8") : (this.encoded.store_value(1, "u8"), this.encode_value(e37, t26.option));
  }, e36.prototype.encode_enum = function(e37, t26) {
    this.checkTypes && function(e38, t27) {
      if ("object" != typeof e38 || null === e38) throw new Error("Expected object not ".concat(typeof e38, "(").concat(e38, ") at ").concat(t27.join(".")));
    }(e37, this.fieldPath);
    for (var r35 = Object.keys(e37)[0], i33 = 0; i33 < t26.enum.length; i33++) {
      var n27 = t26.enum[i33];
      if (r35 === Object.keys(n27.struct)[0]) return this.encoded.store_value(i33, "u8"), this.encode_struct(e37, n27);
    }
    throw new Error("Enum key (".concat(r35, ") not found in enum schema: ").concat(JSON.stringify(t26), " at ").concat(this.fieldPath.join(".")));
  }, e36.prototype.encode_array = function(e37, t26) {
    if (function(e38) {
      return Array.isArray(e38) || !!e38 && "object" == typeof e38 && "length" in e38 && "number" == typeof e38.length && (0 === e38.length || e38.length > 0 && e38.length - 1 in e38);
    }(e37)) return this.encode_arraylike(e37, t26);
    if (e37 instanceof ArrayBuffer) return this.encode_buffer(e37, t26);
    throw new Error("Expected Array-like not ".concat(typeof e37, "(").concat(e37, ") at ").concat(this.fieldPath.join(".")));
  }, e36.prototype.encode_arraylike = function(e37, t26) {
    t26.array.len ? h2(e37.length, t26.array.len, this.fieldPath) : this.encoded.store_value(e37.length, "u32");
    for (var r35 = 0; r35 < e37.length; r35++) this.encode_value(e37[r35], t26.array.type);
  }, e36.prototype.encode_buffer = function(e37, t26) {
    t26.array.len ? h2(e37.byteLength, t26.array.len, this.fieldPath) : this.encoded.store_value(e37.byteLength, "u32"), this.encoded.store_bytes(new Uint8Array(e37));
  }, e36.prototype.encode_set = function(e37, t26) {
    this.checkTypes && c3(e37, "object", this.fieldPath);
    var r35 = e37 instanceof Set ? Array.from(e37.values()) : Object.values(e37);
    this.encoded.store_value(r35.length, "u32");
    for (var i33 = 0, n27 = r35; i33 < n27.length; i33++) {
      var s24 = n27[i33];
      this.encode_value(s24, t26.set);
    }
  }, e36.prototype.encode_map = function(e37, t26) {
    this.checkTypes && c3(e37, "object", this.fieldPath);
    var r35 = e37 instanceof Map, i33 = r35 ? Array.from(e37.keys()) : Object.keys(e37);
    this.encoded.store_value(i33.length, "u32");
    for (var n27 = 0, s24 = i33; n27 < s24.length; n27++) {
      var o25 = s24[n27];
      this.encode_value(o25, t26.map.key), this.encode_value(r35 ? e37.get(o25) : e37[o25], t26.map.value);
    }
  }, e36.prototype.encode_struct = function(e37, t26) {
    this.checkTypes && c3(e37, "object", this.fieldPath);
    for (var r35 = 0, i33 = Object.keys(t26.struct); r35 < i33.length; r35++) {
      var n27 = i33[r35];
      this.fieldPath.push(n27), this.encode_value(e37[n27], t26.struct[n27]), this.fieldPath.pop();
    }
  }, e36;
}();
var g = function() {
  function e36(e37) {
    this.buffer = new a2(e37);
  }
  return e36.prototype.decode = function(e37) {
    return this.decode_value(e37);
  }, e36.prototype.decode_value = function(e37) {
    if ("string" == typeof e37) {
      if (s.includes(e37)) return this.decode_integer(e37);
      if ("string" === e37) return this.decode_string();
      if ("bool" === e37) return this.decode_boolean();
    }
    if ("object" == typeof e37) {
      if ("option" in e37) return this.decode_option(e37);
      if ("enum" in e37) return this.decode_enum(e37);
      if ("array" in e37) return this.decode_array(e37);
      if ("set" in e37) return this.decode_set(e37);
      if ("map" in e37) return this.decode_map(e37);
      if ("struct" in e37) return this.decode_struct(e37);
    }
    throw new Error("Unsupported type: ".concat(e37));
  }, e36.prototype.decode_integer = function(e37) {
    var t26 = parseInt(e37.substring(1));
    return t26 <= 32 || "f64" == e37 ? this.buffer.consume_value(e37) : this.decode_bigint(t26, e37.startsWith("i"));
  }, e36.prototype.decode_bigint = function(e37, t26) {
    void 0 === t26 && (t26 = false);
    var r35 = e37 / 8, i33 = new Uint8Array(this.buffer.consume_bytes(r35)), n27 = i33.reduceRight(function(e38, t27) {
      return e38 + t27.toString(16).padStart(2, "0");
    }, "");
    return t26 && i33[r35 - 1] ? BigInt.asIntN(e37, BigInt("0x".concat(n27))) : BigInt("0x".concat(n27));
  }, e36.prototype.decode_string = function() {
    var e37 = this.decode_integer("u32"), t26 = new Uint8Array(this.buffer.consume_bytes(e37));
    return String.fromCharCode.apply(null, t26);
  }, e36.prototype.decode_boolean = function() {
    return this.buffer.consume_value("u8") > 0;
  }, e36.prototype.decode_option = function(e37) {
    var t26 = this.buffer.consume_value("u8");
    if (1 === t26) return this.decode_value(e37.option);
    if (0 !== t26) throw new Error("Invalid option ".concat(t26));
    return null;
  }, e36.prototype.decode_enum = function(e37) {
    var t26, r35 = this.buffer.consume_value("u8");
    if (r35 > e37.enum.length) throw new Error("Enum option ".concat(r35, " is not available"));
    var i33 = e37.enum[r35].struct, n27 = Object.keys(i33)[0];
    return (t26 = {})[n27] = this.decode_value(i33[n27]), t26;
  }, e36.prototype.decode_array = function(e37) {
    for (var t26 = [], r35 = e37.array.len ? e37.array.len : this.decode_integer("u32"), i33 = 0; i33 < r35; ++i33) t26.push(this.decode_value(e37.array.type));
    return t26;
  }, e36.prototype.decode_set = function(e37) {
    for (var t26 = this.decode_integer("u32"), r35 = /* @__PURE__ */ new Set(), i33 = 0; i33 < t26; ++i33) r35.add(this.decode_value(e37.set));
    return r35;
  }, e36.prototype.decode_map = function(e37) {
    for (var t26 = this.decode_integer("u32"), r35 = /* @__PURE__ */ new Map(), i33 = 0; i33 < t26; ++i33) {
      var n27 = this.decode_value(e37.map.key), s24 = this.decode_value(e37.map.value);
      r35.set(n27, s24);
    }
    return r35;
  }, e36.prototype.decode_struct = function(e37) {
    var t26 = {};
    for (var r35 in e37.struct) t26[r35] = this.decode_value(e37.struct[r35]);
    return t26;
  }, e36;
}();
function b(e36, t26, r35) {
  return void 0 === r35 && (r35 = true), r35 && p3(e36), new y3(r35).encode(t26, e36);
}
var _ = class __ {
  constructor(e36) {
    this.tag = 1, this.record = e36.record, this.content = e36.content;
  }
  serialize() {
    return b(__.schema, this);
  }
  getInstruction(e36, t26, n27, s24, o25, a25, u17, c21) {
    const h16 = r.Buffer.from(this.serialize());
    let f20 = [];
    return f20.push({ pubkey: t26, isSigner: false, isWritable: false }), f20.push({ pubkey: n27, isSigner: false, isWritable: false }), f20.push({ pubkey: s24, isSigner: true, isWritable: true }), f20.push({ pubkey: o25, isSigner: false, isWritable: true }), f20.push({ pubkey: a25, isSigner: false, isWritable: true }), f20.push({ pubkey: u17, isSigner: true, isWritable: true }), f20.push({ pubkey: c21, isSigner: false, isWritable: false }), new TransactionInstruction({ keys: f20, programId: e36, data: h16 });
  }
};
_.schema = { struct: { tag: "u8", record: "string", content: { array: { type: "u8" } } } };
var v2 = class _v {
  constructor(e36) {
    this.tag = 4, this.validation = e36.validation, this.signature = e36.signature, this.expectedPubkey = e36.expectedPubkey;
  }
  serialize() {
    return b(_v.schema, this);
  }
  getInstruction(e36, t26, n27, s24, o25, a25, u17, c21) {
    const h16 = r.Buffer.from(this.serialize());
    let f20 = [];
    return f20.push({ pubkey: t26, isSigner: false, isWritable: false }), f20.push({ pubkey: n27, isSigner: false, isWritable: false }), f20.push({ pubkey: s24, isSigner: true, isWritable: true }), f20.push({ pubkey: o25, isSigner: false, isWritable: true }), f20.push({ pubkey: a25, isSigner: false, isWritable: true }), f20.push({ pubkey: u17, isSigner: true, isWritable: true }), f20.push({ pubkey: c21, isSigner: false, isWritable: false }), new TransactionInstruction({ keys: f20, programId: e36, data: h16 });
  }
};
v2.schema = { struct: { tag: "u8", validation: "u8", signature: { array: { type: "u8" } }, expectedPubkey: { array: { type: "u8" } } } };
var m2 = class _m {
  constructor(e36) {
    this.tag = 3, this.staleness = e36.staleness;
  }
  serialize() {
    return b(_m.schema, this);
  }
  getInstruction(e36, t26, n27, s24, o25, a25, u17, c21, h16) {
    const f20 = r.Buffer.from(this.serialize());
    let d19 = [];
    return d19.push({ pubkey: t26, isSigner: false, isWritable: false }), d19.push({ pubkey: n27, isSigner: false, isWritable: false }), d19.push({ pubkey: s24, isSigner: true, isWritable: true }), d19.push({ pubkey: o25, isSigner: false, isWritable: true }), d19.push({ pubkey: a25, isSigner: false, isWritable: true }), d19.push({ pubkey: u17, isSigner: false, isWritable: true }), d19.push({ pubkey: c21, isSigner: false, isWritable: false }), d19.push({ pubkey: h16, isSigner: true, isWritable: true }), new TransactionInstruction({ keys: d19, programId: e36, data: f20 });
  }
};
m2.schema = { struct: { tag: "u8", staleness: "bool" } };
var w2 = class _w {
  constructor(e36) {
    this.tag = 2, this.record = e36.record, this.content = e36.content;
  }
  serialize() {
    return b(_w.schema, this);
  }
  getInstruction(e36, t26, n27, s24, o25, a25, u17, c21) {
    const h16 = r.Buffer.from(this.serialize());
    let f20 = [];
    return f20.push({ pubkey: t26, isSigner: false, isWritable: false }), f20.push({ pubkey: n27, isSigner: false, isWritable: false }), f20.push({ pubkey: s24, isSigner: true, isWritable: true }), f20.push({ pubkey: o25, isSigner: false, isWritable: true }), f20.push({ pubkey: a25, isSigner: false, isWritable: true }), f20.push({ pubkey: u17, isSigner: true, isWritable: true }), f20.push({ pubkey: c21, isSigner: false, isWritable: false }), new TransactionInstruction({ keys: f20, programId: e36, data: h16 });
  }
};
w2.schema = { struct: { tag: "u8", record: "string", content: { array: { type: "u8" } } } };
var k = class _k {
  constructor() {
    this.tag = 5;
  }
  serialize() {
    return b(_k.schema, this);
  }
  getInstruction(e36, t26, n27, s24, o25, a25, u17, c21) {
    const h16 = r.Buffer.from(this.serialize());
    let f20 = [];
    return f20.push({ pubkey: t26, isSigner: false, isWritable: false }), f20.push({ pubkey: n27, isSigner: false, isWritable: false }), f20.push({ pubkey: s24, isSigner: true, isWritable: true }), f20.push({ pubkey: o25, isSigner: false, isWritable: true }), f20.push({ pubkey: a25, isSigner: false, isWritable: true }), f20.push({ pubkey: u17, isSigner: true, isWritable: true }), f20.push({ pubkey: c21, isSigner: false, isWritable: false }), new TransactionInstruction({ keys: f20, programId: e36, data: h16 });
  }
};
k.schema = { struct: { tag: "u8" } };
var S2 = class _S {
  constructor(e36) {
    this.tag = 6, this.roaId = e36.roaId;
  }
  serialize() {
    return b(_S.schema, this);
  }
  getInstruction(e36, t26, n27, s24, o25, a25, u17, c21) {
    const h16 = r.Buffer.from(this.serialize());
    let f20 = [];
    return f20.push({ pubkey: t26, isSigner: false, isWritable: false }), f20.push({ pubkey: n27, isSigner: false, isWritable: false }), f20.push({ pubkey: s24, isSigner: true, isWritable: true }), f20.push({ pubkey: o25, isSigner: false, isWritable: true }), f20.push({ pubkey: a25, isSigner: false, isWritable: true }), f20.push({ pubkey: u17, isSigner: true, isWritable: true }), f20.push({ pubkey: c21, isSigner: false, isWritable: false }), new TransactionInstruction({ keys: f20, programId: e36, data: h16 });
  }
};
S2.schema = { struct: { tag: "u8", roaId: { array: { type: "u8" } } } };
var I = new PublicKey("HP3D4D1ZCmohQGFVms2SS4LCANgJyksBf5s1F77FuFjZ");
var [A] = PublicKey.findProgramAddressSync([I.toBuffer()], I);
var W = (e36, r35, i33, n27, s24, o25, a25, u17) => new _({ record: o25, content: Array.from(a25) }).getInstruction(u17, SystemProgram.programId, s24, e36, r35, i33, n27, A);
var j = (e36, r35, i33, n27, s24, o25) => new k().getInstruction(o25, SystemProgram.programId, s24, e36, n27, r35, i33, A);
var E2 = (e36, r35, i33, n27, s24, o25, a25, u17) => new w2({ record: o25, content: Array.from(a25) }).getInstruction(u17, SystemProgram.programId, s24, e36, r35, i33, n27, A);
var z2 = (e36, r35, i33, n27, s24, o25, a25, u17, c21) => new v2({ validation: o25, signature: Array.from(a25), expectedPubkey: Array.from(u17) }).getInstruction(c21, SystemProgram.programId, s24, e36, r35, i33, n27, A);
var P2 = (e36, r35, i33, n27, s24, o25, a25, u17) => new m2({ staleness: a25 }).getInstruction(u17, SystemProgram.programId, o25, e36, r35, i33, n27, A, s24);
var O = (e36, r35, i33, n27, s24, o25, a25) => new S2({ roaId: Array.from(o25.toBuffer()) }).getInstruction(a25, SystemProgram.programId, r35, e36, i33, n27, s24, A);
var B2;
var R2;
(R2 = B2 || (B2 = {}))[R2.None = 0] = "None", R2[R2.Solana = 1] = "Solana", R2[R2.Ethereum = 2] = "Ethereum", R2[R2.UnverifiedSolana = 3] = "UnverifiedSolana";
var x2 = (e36) => {
  switch (e36) {
    case B2.None:
      return 0;
    case B2.Ethereum:
      return 20;
    case B2.Solana:
    case B2.UnverifiedSolana:
      return 32;
    default:
      throw new Error("Invalid validation enum");
  }
};
var U = class _U {
  constructor(e36) {
    this.stalenessValidation = e36.stalenessValidation, this.rightOfAssociationValidation = e36.rightOfAssociationValidation, this.contentLength = e36.contentLength;
  }
  static deserialize(e36) {
    return new _U((t26 = this.schema, r35 = e36, void 0 === (i33 = true) && (i33 = true), i33 && p3(t26), new g(r35).decode(t26)));
    var t26, r35, i33;
  }
  static async retrieve(e36, t26) {
    const r35 = await e36.getAccountInfo(t26);
    if (!r35 || !r35.data) throw new Error("Record header account not found");
    return this.deserialize(r35.data.slice(96, 96 + this.LEN));
  }
};
U.LEN = 8, U.schema = { struct: { stalenessValidation: "u16", rightOfAssociationValidation: "u16", contentLength: "u32" } };
var V = class _V {
  constructor(e36, t26) {
    this.data = t26, this.header = e36;
  }
  static deserialize(e36) {
    const t26 = U.deserialize(e36.slice(96, 96 + U.LEN)), r35 = e36.slice(96 + U.LEN);
    return new _V(t26, r35);
  }
  static async retrieve(e36, t26) {
    const r35 = await e36.getAccountInfo(t26);
    if (!r35 || !r35.data) throw new Error("Record header account not found");
    return this.deserialize(r35.data);
  }
  static async retrieveBatch(e36, t26) {
    return (await e36.getMultipleAccountsInfo(t26)).map((e37) => {
      if (null == e37 ? void 0 : e37.data) return this.deserialize(e37.data);
    });
  }
  getContent() {
    let e36 = x2(this.header.stalenessValidation) + x2(this.header.rightOfAssociationValidation);
    return this.data.slice(e36);
  }
  getStalenessId() {
    let e36 = x2(this.header.stalenessValidation);
    return this.data.slice(0, e36);
  }
  getRoAId() {
    let e36 = x2(this.header.stalenessValidation), t26 = e36 + x2(this.header.rightOfAssociationValidation);
    return this.data.slice(e36, t26);
  }
};

// node_modules/@bonfida/spl-name-service/dist/esm/types/record.mjs
var A2;
!function(A7) {
  A7.IPFS = "IPFS", A7.ARWV = "ARWV", A7.SOL = "SOL", A7.ETH = "ETH", A7.BTC = "BTC", A7.LTC = "LTC", A7.DOGE = "DOGE", A7.Email = "email", A7.Url = "url", A7.Discord = "discord", A7.Github = "github", A7.Reddit = "reddit", A7.Twitter = "twitter", A7.Telegram = "telegram", A7.Pic = "pic", A7.SHDW = "SHDW", A7.POINT = "POINT", A7.BSC = "BSC", A7.Injective = "INJ", A7.Backpack = "backpack", A7.A = "A", A7.AAAA = "AAAA", A7.CNAME = "CNAME", A7.TXT = "TXT", A7.Background = "background", A7.BASE = "BASE", A7.IPNS = "IPNS";
}(A2 || (A2 = {}));
var c4 = /* @__PURE__ */ new Map([[A2.SOL, 96], [A2.ETH, 20], [A2.BSC, 20], [A2.Injective, 20], [A2.A, 4], [A2.AAAA, 16], [A2.Background, 32]]);
var i5;
!function(A7) {
  A7[A7.V1 = 1] = "V1", A7[A7.V2 = 2] = "V2";
}(i5 || (i5 = {}));

// node_modules/@bonfida/spl-name-service/dist/esm/error.mjs
var e3;
!function(e36) {
  e36.SymbolNotFound = "SymbolNotFound", e36.InvalidSubdomain = "InvalidSubdomain", e36.FavouriteDomainNotFound = "FavouriteDomainNotFound", e36.MissingParentOwner = "MissingParentOwner", e36.U32Overflow = "U32Overflow", e36.InvalidBufferLength = "InvalidBufferLength", e36.U64Overflow = "U64Overflow", e36.NoRecordData = "NoRecordData", e36.InvalidRecordData = "InvalidRecordData", e36.UnsupportedRecord = "UnsupportedRecord", e36.InvalidEvmAddress = "InvalidEvmAddress", e36.InvalidInjectiveAddress = "InvalidInjectiveAddress", e36.InvalidARecord = "InvalidARecord", e36.InvalidAAAARecord = "InvalidAAAARecord", e36.InvalidRecordInput = "InvalidRecordInput", e36.InvalidSignature = "InvalidSignature", e36.AccountDoesNotExist = "AccountDoesNotExist", e36.MultipleRegistries = "MultipleRegistries", e36.InvalidReverseTwitter = "InvalidReverseTwitter", e36.NoAccountData = "NoAccountData", e36.InvalidInput = "InvalidInput", e36.InvalidDomain = "InvalidDomain", e36.InvalidCustomBg = "InvalidCustomBackground", e36.UnsupportedSignature = "UnsupportedSignature", e36.RecordDoestNotSupportGuardianSig = "RecordDoestNotSupportGuardianSig", e36.RecordIsNotSigned = "RecordIsNotSigned", e36.UnsupportedSignatureType = "UnsupportedSignatureType", e36.InvalidSolRecordV2 = "InvalidSolRecordV2", e36.MissingVerifier = "MissingVerifier", e36.PythFeedNotFound = "PythFeedNotFound", e36.InvalidRoA = "InvalidRoA", e36.InvalidPda = "InvalidPda", e36.InvalidParrent = "InvalidParrent", e36.NftRecordNotFound = "NftRecordNotFound", e36.PdaOwnerNotAllowed = "PdaOwnerNotAllowed", e36.DomainDoesNotExist = "DomainDoesNotExist", e36.RecordMalformed = "RecordMalformed", e36.CouldNotFindNftOwner = "CouldNotFindNftOwner", e36.WrongValidation = "WrongValidation";
}(e3 || (e3 = {}));
var s2 = class _s extends Error {
  constructor(e36, r35) {
    super(r35), this.name = "SNSError", this.type = e36, Error.captureStackTrace && Error.captureStackTrace(this, _s);
  }
};
var r8 = class extends s2 {
  constructor(s24) {
    super(e3.SymbolNotFound, s24);
  }
};
var t3 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidSubdomain, s24);
  }
};
var o4 = class extends s2 {
  constructor(s24) {
    super(e3.FavouriteDomainNotFound, s24);
  }
};
var n4 = class extends s2 {
  constructor(s24) {
    super(e3.MissingParentOwner, s24);
  }
};
var d2 = class extends s2 {
  constructor(s24) {
    super(e3.U32Overflow, s24);
  }
};
var c5 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidBufferLength, s24);
  }
};
var a3 = class extends s2 {
  constructor(s24) {
    super(e3.U64Overflow, s24);
  }
};
var u4 = class extends s2 {
  constructor(s24) {
    super(e3.NoRecordData, s24);
  }
};
var i6 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidRecordData, s24);
  }
};
var l2 = class extends s2 {
  constructor(s24) {
    super(e3.UnsupportedRecord, s24);
  }
};
var p4 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidEvmAddress, s24);
  }
};
var v3 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidInjectiveAddress, s24);
  }
};
var I2 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidARecord, s24);
  }
};
var x3 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidAAAARecord, s24);
  }
};
var N = class extends s2 {
  constructor(s24) {
    super(e3.InvalidRecordInput, s24);
  }
};
var R3 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidSignature, s24);
  }
};
var g2 = class extends s2 {
  constructor(s24) {
    super(e3.AccountDoesNotExist, s24);
  }
};
var A3 = class extends s2 {
  constructor(s24) {
    super(e3.MultipleRegistries, s24);
  }
};
var S3 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidReverseTwitter, s24);
  }
};
var D = class extends s2 {
  constructor(s24) {
    super(e3.NoAccountData, s24);
  }
};
var f3 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidInput, s24);
  }
};
var m3 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidDomain, s24);
  }
};
var w3 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidCustomBg, s24);
  }
};
var F = class extends s2 {
  constructor(s24) {
    super(e3.UnsupportedSignature, s24);
  }
};
var O2 = class extends s2 {
  constructor(s24) {
    super(e3.RecordDoestNotSupportGuardianSig, s24);
  }
};
var P3 = class extends s2 {
  constructor(s24) {
    super(e3.RecordIsNotSigned, s24);
  }
};
var U2 = class extends s2 {
  constructor(s24) {
    super(e3.UnsupportedSignatureType, s24);
  }
};
var E3 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidSolRecordV2, s24);
  }
};
var M = class extends s2 {
  constructor(s24) {
    super(e3.MissingVerifier, s24);
  }
};
var y4 = class extends s2 {
  constructor(s24) {
    super(e3.PythFeedNotFound, s24);
  }
};
var h3 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidRoA, s24);
  }
};
var V2 = class extends s2 {
  constructor(s24) {
    super(e3.InvalidPda, s24);
  }
};
var T = class extends s2 {
  constructor(s24) {
    super(e3.InvalidParrent, s24);
  }
};
var b2 = class extends s2 {
  constructor(s24) {
    super(e3.NftRecordNotFound, s24);
  }
};
var B3 = class extends s2 {
  constructor(s24) {
    super(e3.PdaOwnerNotAllowed, s24);
  }
};
var C2 = class extends s2 {
  constructor(s24) {
    super(e3.DomainDoesNotExist, s24);
  }
};
var j2 = class extends s2 {
  constructor(s24) {
    super(e3.RecordMalformed, s24);
  }
};
var k2 = class extends s2 {
  constructor(s24) {
    super(e3.CouldNotFindNftOwner, s24);
  }
};
var G2 = class extends s2 {
  constructor(s24) {
    super(e3.WrongValidation, s24);
  }
};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/hashes/esm/_assert.mjs
function e4(e36) {
  return e36 instanceof Uint8Array || null != e36 && "object" == typeof e36 && "Uint8Array" === e36.constructor.name;
}
function t4(t26, ...n27) {
  if (!e4(t26)) throw new Error("Uint8Array expected");
  if (n27.length > 0 && !n27.includes(t26.length)) throw new Error(`Uint8Array expected of length ${n27}, not of length=${t26.length}`);
}
function n5(e36, t26 = true) {
  if (e36.destroyed) throw new Error("Hash instance has been destroyed");
  if (t26 && e36.finished) throw new Error("Hash#digest() has already been called");
}
function r9(e36, n27) {
  t4(e36);
  const r35 = n27.outputLen;
  if (e36.length < r35) throw new Error(`digestInto() expects output buffer of length at least ${r35}`);
}

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/hashes/esm/crypto.mjs
var o5 = "object" == typeof globalThis && "crypto" in globalThis ? globalThis.crypto : void 0;

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/hashes/esm/utils.mjs
var n6 = (t26) => new DataView(t26.buffer, t26.byteOffset, t26.byteLength);
var o6 = (t26, e36) => t26 << 32 - e36 | t26 >>> e36;
function r10(t26) {
  if ("string" != typeof t26) throw new Error("utf8ToBytes expected string, got " + typeof t26);
  return new Uint8Array(new TextEncoder().encode(t26));
}
function u5(t26) {
  return "string" == typeof t26 && (t26 = r10(t26)), t4(t26), t26;
}
var f4 = class {
  clone() {
    return this._cloneInto();
  }
};
function s3(t26) {
  const e36 = (e37) => t26().update(u5(e37)).digest(), n27 = t26();
  return e36.outputLen = n27.outputLen, e36.blockLen = n27.blockLen, e36.create = () => t26(), e36;
}
function c6(e36 = 32) {
  if (o5 && "function" == typeof o5.getRandomValues) return o5.getRandomValues(new Uint8Array(e36));
  throw new Error("crypto.getRandomValues must be defined");
}

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/hashes/esm/_md.mjs
var o7 = (t26, s24, e36) => t26 & s24 ^ ~t26 & e36;
var h4 = (t26, s24, e36) => t26 & s24 ^ t26 & e36 ^ s24 & e36;
var r11 = class extends f4 {
  constructor(t26, s24, e36, n27) {
    super(), this.blockLen = t26, this.outputLen = s24, this.padOffset = e36, this.isLE = n27, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(t26), this.view = n6(this.buffer);
  }
  update(s24) {
    n5(this);
    const { view: e36, buffer: o25, blockLen: h16 } = this, r35 = (s24 = u5(s24)).length;
    for (let t26 = 0; t26 < r35; ) {
      const n27 = Math.min(h16 - this.pos, r35 - t26);
      if (n27 !== h16) o25.set(s24.subarray(t26, t26 + n27), this.pos), this.pos += n27, t26 += n27, this.pos === h16 && (this.process(e36, 0), this.pos = 0);
      else {
        const e37 = n6(s24);
        for (; h16 <= r35 - t26; t26 += h16) this.process(e37, t26);
      }
    }
    return this.length += s24.length, this.roundClean(), this;
  }
  digestInto(e36) {
    n5(this), r9(e36, this), this.finished = true;
    const { buffer: n27, view: o25, blockLen: h16, isLE: r35 } = this;
    let { pos: f20 } = this;
    n27[f20++] = 128, this.buffer.subarray(f20).fill(0), this.padOffset > h16 - f20 && (this.process(o25, 0), f20 = 0);
    for (let t26 = f20; t26 < h16; t26++) n27[t26] = 0;
    !function(t26, s24, e37, i33) {
      if ("function" == typeof t26.setBigUint64) return t26.setBigUint64(s24, e37, i33);
      const n28 = BigInt(32), o26 = BigInt(4294967295), h17 = Number(e37 >> n28 & o26), r36 = Number(e37 & o26), f21 = i33 ? 4 : 0, u18 = i33 ? 0 : 4;
      t26.setUint32(s24 + f21, h17, i33), t26.setUint32(s24 + u18, r36, i33);
    }(o25, h16 - 8, BigInt(8 * this.length), r35), this.process(o25, 0);
    const u17 = n6(e36), c21 = this.outputLen;
    if (c21 % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
    const l17 = c21 / 4, p16 = this.get();
    if (l17 > p16.length) throw new Error("_sha2: outputLen bigger than state");
    for (let t26 = 0; t26 < l17; t26++) u17.setUint32(4 * t26, p16[t26], r35);
  }
  digest() {
    const { buffer: t26, outputLen: s24 } = this;
    this.digestInto(t26);
    const e36 = t26.slice(0, s24);
    return this.destroy(), e36;
  }
  _cloneInto(t26) {
    t26 || (t26 = new this.constructor()), t26.set(...this.get());
    const { blockLen: s24, buffer: e36, length: i33, finished: n27, destroyed: o25, pos: h16 } = this;
    return t26.length = i33, t26.pos = h16, t26.finished = n27, t26.destroyed = o25, i33 % s24 && t26.buffer.set(e36), t26;
  }
};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/hashes/esm/sha256.mjs
var e5 = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);
var n7 = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]);
var o8 = new Uint32Array(64);
var l3 = class extends r11 {
  constructor() {
    super(64, 32, 8, false), this.A = 0 | n7[0], this.B = 0 | n7[1], this.C = 0 | n7[2], this.D = 0 | n7[3], this.E = 0 | n7[4], this.F = 0 | n7[5], this.G = 0 | n7[6], this.H = 0 | n7[7];
  }
  get() {
    const { A: t26, B: s24, C: i33, D: h16, E: r35, F: e36, G: n27, H: o25 } = this;
    return [t26, s24, i33, h16, r35, e36, n27, o25];
  }
  set(t26, s24, i33, h16, r35, e36, n27, o25) {
    this.A = 0 | t26, this.B = 0 | s24, this.C = 0 | i33, this.D = 0 | h16, this.E = 0 | r35, this.F = 0 | e36, this.G = 0 | n27, this.H = 0 | o25;
  }
  process(t26, h16) {
    for (let s24 = 0; s24 < 16; s24++, h16 += 4) o8[s24] = t26.getUint32(h16, false);
    for (let t27 = 16; t27 < 64; t27++) {
      const s24 = o8[t27 - 15], i33 = o8[t27 - 2], h17 = o6(s24, 7) ^ o6(s24, 18) ^ s24 >>> 3, e36 = o6(i33, 17) ^ o6(i33, 19) ^ i33 >>> 10;
      o8[t27] = e36 + o8[t27 - 7] + h17 + o8[t27 - 16] | 0;
    }
    let { A: n27, B: l17, C: c21, D: f20, E: A7, F: m30, G: u17, H: C5 } = this;
    for (let t27 = 0; t27 < 64; t27++) {
      const h17 = C5 + (o6(A7, 6) ^ o6(A7, 11) ^ o6(A7, 25)) + o7(A7, m30, u17) + e5[t27] + o8[t27] | 0, a25 = (o6(n27, 2) ^ o6(n27, 13) ^ o6(n27, 22)) + h4(n27, l17, c21) | 0;
      C5 = u17, u17 = m30, m30 = A7, A7 = f20 + h17 | 0, f20 = c21, c21 = l17, l17 = n27, n27 = h17 + a25 | 0;
    }
    n27 = n27 + this.A | 0, l17 = l17 + this.B | 0, c21 = c21 + this.C | 0, f20 = f20 + this.D | 0, A7 = A7 + this.E | 0, m30 = m30 + this.F | 0, u17 = u17 + this.G | 0, C5 = C5 + this.H | 0, this.set(n27, l17, c21, f20, A7, m30, u17, C5);
  }
  roundClean() {
    o8.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
  }
};
var c7 = s3(() => new l3());

// node_modules/@bonfida/spl-name-service/dist/esm/utils/getHashedNameSync.mjs
var s4 = (s24) => {
  const e36 = n2 + s24, t26 = c7(r.Buffer.from(e36, "utf8"));
  return r.Buffer.from(t26);
};

// node_modules/@bonfida/spl-name-service/dist/esm/utils/getNameAccountKeySync.mjs
var t5 = (t26, e36, f20) => {
  const m30 = [t26];
  e36 ? m30.push(e36.toBuffer()) : m30.push(r.Buffer.alloc(32)), f20 ? m30.push(f20.toBuffer()) : m30.push(r.Buffer.alloc(32));
  const [n27] = PublicKey.findProgramAddressSync(m30, w);
  return n27;
};

// node_modules/@bonfida/spl-name-service/dist/esm/utils/getDomainKeySync.mjs
var i7 = (o25, r35 = r7, t26) => {
  let m30 = s4(o25);
  return { pubkey: t5(m30, t26, r35), hashed: m30 };
};
var c8 = (s24, n27) => {
  s24.endsWith(".sol") && (s24 = s24.slice(0, -4));
  const c21 = n27 === i5.V2 ? A : void 0, d19 = s24.split(".");
  if (2 === d19.length) {
    const e36 = r.Buffer.from([n27 || 0]).toString().concat(d19[0]), { pubkey: o25 } = i7(d19[1]);
    return { ...i7(e36, o25, c21), isSub: true, parent: o25 };
  }
  if (3 === d19.length && n27) {
    const { pubkey: e36 } = i7(d19[2]), { pubkey: o25 } = i7("\0".concat(d19[1]), e36), t26 = n27 === i5.V2 ? "" : "";
    return { ...i7(t26.concat(d19[0]), o25, c21), isSub: true, parent: e36, isSubRecord: true };
  }
  if (d19.length >= 3) throw new f3("The domain is malformed");
  return { ...i7(s24, r7), isSub: false, parent: void 0 };
};

// node_modules/@bonfida/spl-name-service/dist/esm/utils/getReverseKeySync.mjs
var r12 = (r35, n27) => {
  const { pubkey: s24, parent: c21 } = c8(r35), a25 = s4(s24.toBase58());
  return t5(a25, E, n27 ? c21 : void 0);
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/burnDomain.mjs
var f5 = (f20, c21, u17) => {
  const { pubkey: a25 } = c8(f20), [p16] = PublicKey.findProgramAddressSync([a25.toBuffer()], o2), [y10] = PublicKey.findProgramAddressSync([a25.toBuffer(), Uint8Array.from([1, 1])], o2);
  return new r6().getInstruction(o2, w, SystemProgram.programId, a25, r12(f20), y10, p16, E, c21, u17);
};

// node_modules/@bonfida/spl-name-service/dist/esm/int.mjs
var n8 = class _n {
  constructor(t26) {
    this.value = BigInt(t26);
  }
  toBuffer() {
    const t26 = r.Buffer.alloc(4);
    return t26.writeUInt32LE(Number(this.value)), t26;
  }
  static fromBuffer(r35) {
    if (4 !== r35.length) throw new c5(`Invalid buffer length: ${r35.length}`);
    const e36 = BigInt(r35.readUInt32LE(0));
    return new _n(e36);
  }
  toNumber() {
    return Number(this.value);
  }
  toString() {
    return String(this.value);
  }
};
var u6 = class _u {
  constructor(t26) {
    this.value = BigInt(t26);
  }
  toBuffer() {
    const t26 = r.Buffer.alloc(8);
    return t26.writeBigUInt64LE(this.value), t26;
  }
  static fromBuffer(t26) {
    8 !== t26.length && new a3(`Invalid buffer length: ${t26.length}`);
    const e36 = t26.readBigUInt64LE(0);
    return new _u(e36);
  }
  toNumber() {
    return Number(this.value);
  }
  toString() {
    return String(this.value);
  }
};

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/createInstruction.mjs
function t6(t26, u17, n27, o25, f20, p16, a25, b10, l17, m30, g12) {
  const y10 = [r.Buffer.from(Int8Array.from([0])), new n8(p16.length).toBuffer(), p16, a25.toBuffer(), b10.toBuffer()], k4 = r.Buffer.concat(y10), S7 = [{ pubkey: u17, isSigner: false, isWritable: false }, { pubkey: f20, isSigner: true, isWritable: true }, { pubkey: n27, isSigner: false, isWritable: true }, { pubkey: o25, isSigner: false, isWritable: false }];
  return l17 ? S7.push({ pubkey: l17, isSigner: true, isWritable: false }) : S7.push({ pubkey: new PublicKey(r.Buffer.alloc(32)), isSigner: false, isWritable: false }), m30 ? S7.push({ pubkey: m30, isSigner: false, isWritable: false }) : S7.push({ pubkey: new PublicKey(r.Buffer.alloc(32)), isSigner: false, isWritable: false }), g12 && S7.push({ pubkey: g12, isSigner: true, isWritable: false }), new TransactionInstruction({ keys: S7, programId: t26, data: k4 });
}

// node_modules/@bonfida/spl-name-service/dist/esm/nft/const.mjs
var r13 = new PublicKey("nftD3vbNkNqfj2Sd3HZwbpw4BxxKWr4AjGb9X38JeZk");
var m4 = r.Buffer.from("tokenized_name");

// node_modules/@bonfida/spl-name-service/dist/esm/nft/getDomainMint.mjs
var t7 = (t26) => {
  const [n27] = PublicKey.findProgramAddressSync([m4, t26.toBuffer()], r13);
  return n27;
};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@solana/spl-token/lib/esm/state/account.mjs
var import_buffer_layout4 = __toESM(require_Layout(), 1);

// node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs
var encodeDecode = (layout) => {
  const decode = layout.decode.bind(layout);
  const encode = layout.encode.bind(layout);
  return { decode, encode };
};

// node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs
var import_buffer_layout = __toESM(require_Layout(), 1);
var import_bigint_buffer = __toESM(require_browser(), 1);
var bigInt = (length) => (property) => {
  const layout = (0, import_buffer_layout.blob)(length, property);
  const { encode, decode } = encodeDecode(layout);
  const bigIntLayout = layout;
  bigIntLayout.decode = (buffer, offset) => {
    const src = decode(buffer, offset);
    return (0, import_bigint_buffer.toBigIntLE)(Buffer.from(src));
  };
  bigIntLayout.encode = (bigInt2, buffer, offset) => {
    const src = (0, import_bigint_buffer.toBufferLE)(bigInt2, length);
    return encode(src, buffer, offset);
  };
  return bigIntLayout;
};
var bigIntBE = (length) => (property) => {
  const layout = (0, import_buffer_layout.blob)(length, property);
  const { encode, decode } = encodeDecode(layout);
  const bigIntLayout = layout;
  bigIntLayout.decode = (buffer, offset) => {
    const src = decode(buffer, offset);
    return (0, import_bigint_buffer.toBigIntBE)(Buffer.from(src));
  };
  bigIntLayout.encode = (bigInt2, buffer, offset) => {
    const src = (0, import_bigint_buffer.toBufferBE)(bigInt2, length);
    return encode(src, buffer, offset);
  };
  return bigIntLayout;
};
var u64 = bigInt(8);
var u64be = bigIntBE(8);
var u128 = bigInt(16);
var u128be = bigIntBE(16);
var u192 = bigInt(24);
var u192be = bigIntBE(24);
var u256 = bigInt(32);
var u256be = bigIntBE(32);

// node_modules/bignumber.js/bignumber.mjs
var isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i;
var mathceil = Math.ceil;
var mathfloor = Math.floor;
var bignumberError = "[BigNumber Error] ";
var tooManyDigits = bignumberError + "Number primitive has more than 15 significant digits: ";
var BASE = 1e14;
var LOG_BASE = 14;
var MAX_SAFE_INTEGER = 9007199254740991;
var POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13];
var SQRT_BASE = 1e7;
var MAX = 1e9;
function clone(configObject) {
  var div, convertBase, parseNumeric, P5 = BigNumber2.prototype = { constructor: BigNumber2, toString: null, valueOf: null }, ONE = new BigNumber2(1), DECIMAL_PLACES = 20, ROUNDING_MODE = 4, TO_EXP_NEG = -7, TO_EXP_POS = 21, MIN_EXP = -1e7, MAX_EXP = 1e7, CRYPTO = false, MODULO_MODE = 1, POW_PRECISION = 0, FORMAT = {
    prefix: "",
    groupSize: 3,
    secondaryGroupSize: 0,
    groupSeparator: ",",
    decimalSeparator: ".",
    fractionGroupSize: 0,
    fractionGroupSeparator: " ",
    // non-breaking space
    suffix: ""
  }, ALPHABET = "0123456789abcdefghijklmnopqrstuvwxyz", alphabetHasNormalDecimalDigits = true;
  function BigNumber2(v10, b10) {
    var alphabet, c21, caseChanged, e36, i33, isNum, len, str, x9 = this;
    if (!(x9 instanceof BigNumber2)) return new BigNumber2(v10, b10);
    if (b10 == null) {
      if (v10 && v10._isBigNumber === true) {
        x9.s = v10.s;
        if (!v10.c || v10.e > MAX_EXP) {
          x9.c = x9.e = null;
        } else if (v10.e < MIN_EXP) {
          x9.c = [x9.e = 0];
        } else {
          x9.e = v10.e;
          x9.c = v10.c.slice();
        }
        return;
      }
      if ((isNum = typeof v10 == "number") && v10 * 0 == 0) {
        x9.s = 1 / v10 < 0 ? (v10 = -v10, -1) : 1;
        if (v10 === ~~v10) {
          for (e36 = 0, i33 = v10; i33 >= 10; i33 /= 10, e36++) ;
          if (e36 > MAX_EXP) {
            x9.c = x9.e = null;
          } else {
            x9.e = e36;
            x9.c = [v10];
          }
          return;
        }
        str = String(v10);
      } else {
        if (!isNumeric.test(str = String(v10))) return parseNumeric(x9, str, isNum);
        x9.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
      }
      if ((e36 = str.indexOf(".")) > -1) str = str.replace(".", "");
      if ((i33 = str.search(/e/i)) > 0) {
        if (e36 < 0) e36 = i33;
        e36 += +str.slice(i33 + 1);
        str = str.substring(0, i33);
      } else if (e36 < 0) {
        e36 = str.length;
      }
    } else {
      intCheck(b10, 2, ALPHABET.length, "Base");
      if (b10 == 10 && alphabetHasNormalDecimalDigits) {
        x9 = new BigNumber2(v10);
        return round(x9, DECIMAL_PLACES + x9.e + 1, ROUNDING_MODE);
      }
      str = String(v10);
      if (isNum = typeof v10 == "number") {
        if (v10 * 0 != 0) return parseNumeric(x9, str, isNum, b10);
        x9.s = 1 / v10 < 0 ? (str = str.slice(1), -1) : 1;
        if (BigNumber2.DEBUG && str.replace(/^0\.0*|\./, "").length > 15) {
          throw Error(tooManyDigits + v10);
        }
      } else {
        x9.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
      }
      alphabet = ALPHABET.slice(0, b10);
      e36 = i33 = 0;
      for (len = str.length; i33 < len; i33++) {
        if (alphabet.indexOf(c21 = str.charAt(i33)) < 0) {
          if (c21 == ".") {
            if (i33 > e36) {
              e36 = len;
              continue;
            }
          } else if (!caseChanged) {
            if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {
              caseChanged = true;
              i33 = -1;
              e36 = 0;
              continue;
            }
          }
          return parseNumeric(x9, String(v10), isNum, b10);
        }
      }
      isNum = false;
      str = convertBase(str, b10, 10, x9.s);
      if ((e36 = str.indexOf(".")) > -1) str = str.replace(".", "");
      else e36 = str.length;
    }
    for (i33 = 0; str.charCodeAt(i33) === 48; i33++) ;
    for (len = str.length; str.charCodeAt(--len) === 48; ) ;
    if (str = str.slice(i33, ++len)) {
      len -= i33;
      if (isNum && BigNumber2.DEBUG && len > 15 && (v10 > MAX_SAFE_INTEGER || v10 !== mathfloor(v10))) {
        throw Error(tooManyDigits + x9.s * v10);
      }
      if ((e36 = e36 - i33 - 1) > MAX_EXP) {
        x9.c = x9.e = null;
      } else if (e36 < MIN_EXP) {
        x9.c = [x9.e = 0];
      } else {
        x9.e = e36;
        x9.c = [];
        i33 = (e36 + 1) % LOG_BASE;
        if (e36 < 0) i33 += LOG_BASE;
        if (i33 < len) {
          if (i33) x9.c.push(+str.slice(0, i33));
          for (len -= LOG_BASE; i33 < len; ) {
            x9.c.push(+str.slice(i33, i33 += LOG_BASE));
          }
          i33 = LOG_BASE - (str = str.slice(i33)).length;
        } else {
          i33 -= len;
        }
        for (; i33--; str += "0") ;
        x9.c.push(+str);
      }
    } else {
      x9.c = [x9.e = 0];
    }
  }
  BigNumber2.clone = clone;
  BigNumber2.ROUND_UP = 0;
  BigNumber2.ROUND_DOWN = 1;
  BigNumber2.ROUND_CEIL = 2;
  BigNumber2.ROUND_FLOOR = 3;
  BigNumber2.ROUND_HALF_UP = 4;
  BigNumber2.ROUND_HALF_DOWN = 5;
  BigNumber2.ROUND_HALF_EVEN = 6;
  BigNumber2.ROUND_HALF_CEIL = 7;
  BigNumber2.ROUND_HALF_FLOOR = 8;
  BigNumber2.EUCLID = 9;
  BigNumber2.config = BigNumber2.set = function(obj) {
    var p16, v10;
    if (obj != null) {
      if (typeof obj == "object") {
        if (obj.hasOwnProperty(p16 = "DECIMAL_PLACES")) {
          v10 = obj[p16];
          intCheck(v10, 0, MAX, p16);
          DECIMAL_PLACES = v10;
        }
        if (obj.hasOwnProperty(p16 = "ROUNDING_MODE")) {
          v10 = obj[p16];
          intCheck(v10, 0, 8, p16);
          ROUNDING_MODE = v10;
        }
        if (obj.hasOwnProperty(p16 = "EXPONENTIAL_AT")) {
          v10 = obj[p16];
          if (v10 && v10.pop) {
            intCheck(v10[0], -MAX, 0, p16);
            intCheck(v10[1], 0, MAX, p16);
            TO_EXP_NEG = v10[0];
            TO_EXP_POS = v10[1];
          } else {
            intCheck(v10, -MAX, MAX, p16);
            TO_EXP_NEG = -(TO_EXP_POS = v10 < 0 ? -v10 : v10);
          }
        }
        if (obj.hasOwnProperty(p16 = "RANGE")) {
          v10 = obj[p16];
          if (v10 && v10.pop) {
            intCheck(v10[0], -MAX, -1, p16);
            intCheck(v10[1], 1, MAX, p16);
            MIN_EXP = v10[0];
            MAX_EXP = v10[1];
          } else {
            intCheck(v10, -MAX, MAX, p16);
            if (v10) {
              MIN_EXP = -(MAX_EXP = v10 < 0 ? -v10 : v10);
            } else {
              throw Error(bignumberError + p16 + " cannot be zero: " + v10);
            }
          }
        }
        if (obj.hasOwnProperty(p16 = "CRYPTO")) {
          v10 = obj[p16];
          if (v10 === !!v10) {
            if (v10) {
              if (typeof crypto != "undefined" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                CRYPTO = v10;
              } else {
                CRYPTO = !v10;
                throw Error(bignumberError + "crypto unavailable");
              }
            } else {
              CRYPTO = v10;
            }
          } else {
            throw Error(bignumberError + p16 + " not true or false: " + v10);
          }
        }
        if (obj.hasOwnProperty(p16 = "MODULO_MODE")) {
          v10 = obj[p16];
          intCheck(v10, 0, 9, p16);
          MODULO_MODE = v10;
        }
        if (obj.hasOwnProperty(p16 = "POW_PRECISION")) {
          v10 = obj[p16];
          intCheck(v10, 0, MAX, p16);
          POW_PRECISION = v10;
        }
        if (obj.hasOwnProperty(p16 = "FORMAT")) {
          v10 = obj[p16];
          if (typeof v10 == "object") FORMAT = v10;
          else throw Error(bignumberError + p16 + " not an object: " + v10);
        }
        if (obj.hasOwnProperty(p16 = "ALPHABET")) {
          v10 = obj[p16];
          if (typeof v10 == "string" && !/^.?$|[+\-.\s]|(.).*\1/.test(v10)) {
            alphabetHasNormalDecimalDigits = v10.slice(0, 10) == "0123456789";
            ALPHABET = v10;
          } else {
            throw Error(bignumberError + p16 + " invalid: " + v10);
          }
        }
      } else {
        throw Error(bignumberError + "Object expected: " + obj);
      }
    }
    return {
      DECIMAL_PLACES,
      ROUNDING_MODE,
      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
      RANGE: [MIN_EXP, MAX_EXP],
      CRYPTO,
      MODULO_MODE,
      POW_PRECISION,
      FORMAT,
      ALPHABET
    };
  };
  BigNumber2.isBigNumber = function(v10) {
    if (!v10 || v10._isBigNumber !== true) return false;
    if (!BigNumber2.DEBUG) return true;
    var i33, n27, c21 = v10.c, e36 = v10.e, s24 = v10.s;
    out: if ({}.toString.call(c21) == "[object Array]") {
      if ((s24 === 1 || s24 === -1) && e36 >= -MAX && e36 <= MAX && e36 === mathfloor(e36)) {
        if (c21[0] === 0) {
          if (e36 === 0 && c21.length === 1) return true;
          break out;
        }
        i33 = (e36 + 1) % LOG_BASE;
        if (i33 < 1) i33 += LOG_BASE;
        if (String(c21[0]).length == i33) {
          for (i33 = 0; i33 < c21.length; i33++) {
            n27 = c21[i33];
            if (n27 < 0 || n27 >= BASE || n27 !== mathfloor(n27)) break out;
          }
          if (n27 !== 0) return true;
        }
      }
    } else if (c21 === null && e36 === null && (s24 === null || s24 === 1 || s24 === -1)) {
      return true;
    }
    throw Error(bignumberError + "Invalid BigNumber: " + v10);
  };
  BigNumber2.maximum = BigNumber2.max = function() {
    return maxOrMin(arguments, -1);
  };
  BigNumber2.minimum = BigNumber2.min = function() {
    return maxOrMin(arguments, 1);
  };
  BigNumber2.random = function() {
    var pow2_53 = 9007199254740992;
    var random53bitInt = Math.random() * pow2_53 & 2097151 ? function() {
      return mathfloor(Math.random() * pow2_53);
    } : function() {
      return (Math.random() * 1073741824 | 0) * 8388608 + (Math.random() * 8388608 | 0);
    };
    return function(dp) {
      var a25, b10, e36, k4, v10, i33 = 0, c21 = [], rand = new BigNumber2(ONE);
      if (dp == null) dp = DECIMAL_PLACES;
      else intCheck(dp, 0, MAX);
      k4 = mathceil(dp / LOG_BASE);
      if (CRYPTO) {
        if (crypto.getRandomValues) {
          a25 = crypto.getRandomValues(new Uint32Array(k4 *= 2));
          for (; i33 < k4; ) {
            v10 = a25[i33] * 131072 + (a25[i33 + 1] >>> 11);
            if (v10 >= 9e15) {
              b10 = crypto.getRandomValues(new Uint32Array(2));
              a25[i33] = b10[0];
              a25[i33 + 1] = b10[1];
            } else {
              c21.push(v10 % 1e14);
              i33 += 2;
            }
          }
          i33 = k4 / 2;
        } else if (crypto.randomBytes) {
          a25 = crypto.randomBytes(k4 *= 7);
          for (; i33 < k4; ) {
            v10 = (a25[i33] & 31) * 281474976710656 + a25[i33 + 1] * 1099511627776 + a25[i33 + 2] * 4294967296 + a25[i33 + 3] * 16777216 + (a25[i33 + 4] << 16) + (a25[i33 + 5] << 8) + a25[i33 + 6];
            if (v10 >= 9e15) {
              crypto.randomBytes(7).copy(a25, i33);
            } else {
              c21.push(v10 % 1e14);
              i33 += 7;
            }
          }
          i33 = k4 / 7;
        } else {
          CRYPTO = false;
          throw Error(bignumberError + "crypto unavailable");
        }
      }
      if (!CRYPTO) {
        for (; i33 < k4; ) {
          v10 = random53bitInt();
          if (v10 < 9e15) c21[i33++] = v10 % 1e14;
        }
      }
      k4 = c21[--i33];
      dp %= LOG_BASE;
      if (k4 && dp) {
        v10 = POWS_TEN[LOG_BASE - dp];
        c21[i33] = mathfloor(k4 / v10) * v10;
      }
      for (; c21[i33] === 0; c21.pop(), i33--) ;
      if (i33 < 0) {
        c21 = [e36 = 0];
      } else {
        for (e36 = -1; c21[0] === 0; c21.splice(0, 1), e36 -= LOG_BASE) ;
        for (i33 = 1, v10 = c21[0]; v10 >= 10; v10 /= 10, i33++) ;
        if (i33 < LOG_BASE) e36 -= LOG_BASE - i33;
      }
      rand.e = e36;
      rand.c = c21;
      return rand;
    };
  }();
  BigNumber2.sum = function() {
    var i33 = 1, args = arguments, sum = new BigNumber2(args[0]);
    for (; i33 < args.length; ) sum = sum.plus(args[i33++]);
    return sum;
  };
  convertBase = /* @__PURE__ */ function() {
    var decimal = "0123456789";
    function toBaseOut(str, baseIn, baseOut, alphabet) {
      var j7, arr = [0], arrL, i33 = 0, len = str.length;
      for (; i33 < len; ) {
        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn) ;
        arr[0] += alphabet.indexOf(str.charAt(i33++));
        for (j7 = 0; j7 < arr.length; j7++) {
          if (arr[j7] > baseOut - 1) {
            if (arr[j7 + 1] == null) arr[j7 + 1] = 0;
            arr[j7 + 1] += arr[j7] / baseOut | 0;
            arr[j7] %= baseOut;
          }
        }
      }
      return arr.reverse();
    }
    return function(str, baseIn, baseOut, sign, callerIsToString) {
      var alphabet, d19, e36, k4, r35, x9, xc, y10, i33 = str.indexOf("."), dp = DECIMAL_PLACES, rm = ROUNDING_MODE;
      if (i33 >= 0) {
        k4 = POW_PRECISION;
        POW_PRECISION = 0;
        str = str.replace(".", "");
        y10 = new BigNumber2(baseIn);
        x9 = y10.pow(str.length - i33);
        POW_PRECISION = k4;
        y10.c = toBaseOut(
          toFixedPoint(coeffToString(x9.c), x9.e, "0"),
          10,
          baseOut,
          decimal
        );
        y10.e = y10.c.length;
      }
      xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET));
      e36 = k4 = xc.length;
      for (; xc[--k4] == 0; xc.pop()) ;
      if (!xc[0]) return alphabet.charAt(0);
      if (i33 < 0) {
        --e36;
      } else {
        x9.c = xc;
        x9.e = e36;
        x9.s = sign;
        x9 = div(x9, y10, dp, rm, baseOut);
        xc = x9.c;
        r35 = x9.r;
        e36 = x9.e;
      }
      d19 = e36 + dp + 1;
      i33 = xc[d19];
      k4 = baseOut / 2;
      r35 = r35 || d19 < 0 || xc[d19 + 1] != null;
      r35 = rm < 4 ? (i33 != null || r35) && (rm == 0 || rm == (x9.s < 0 ? 3 : 2)) : i33 > k4 || i33 == k4 && (rm == 4 || r35 || rm == 6 && xc[d19 - 1] & 1 || rm == (x9.s < 0 ? 8 : 7));
      if (d19 < 1 || !xc[0]) {
        str = r35 ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
      } else {
        xc.length = d19;
        if (r35) {
          for (--baseOut; ++xc[--d19] > baseOut; ) {
            xc[d19] = 0;
            if (!d19) {
              ++e36;
              xc = [1].concat(xc);
            }
          }
        }
        for (k4 = xc.length; !xc[--k4]; ) ;
        for (i33 = 0, str = ""; i33 <= k4; str += alphabet.charAt(xc[i33++])) ;
        str = toFixedPoint(str, e36, alphabet.charAt(0));
      }
      return str;
    };
  }();
  div = /* @__PURE__ */ function() {
    function multiply(x9, k4, base) {
      var m30, temp, xlo, xhi, carry = 0, i33 = x9.length, klo = k4 % SQRT_BASE, khi = k4 / SQRT_BASE | 0;
      for (x9 = x9.slice(); i33--; ) {
        xlo = x9[i33] % SQRT_BASE;
        xhi = x9[i33] / SQRT_BASE | 0;
        m30 = khi * xlo + xhi * klo;
        temp = klo * xlo + m30 % SQRT_BASE * SQRT_BASE + carry;
        carry = (temp / base | 0) + (m30 / SQRT_BASE | 0) + khi * xhi;
        x9[i33] = temp % base;
      }
      if (carry) x9 = [carry].concat(x9);
      return x9;
    }
    function compare2(a25, b10, aL, bL) {
      var i33, cmp;
      if (aL != bL) {
        cmp = aL > bL ? 1 : -1;
      } else {
        for (i33 = cmp = 0; i33 < aL; i33++) {
          if (a25[i33] != b10[i33]) {
            cmp = a25[i33] > b10[i33] ? 1 : -1;
            break;
          }
        }
      }
      return cmp;
    }
    function subtract(a25, b10, aL, base) {
      var i33 = 0;
      for (; aL--; ) {
        a25[aL] -= i33;
        i33 = a25[aL] < b10[aL] ? 1 : 0;
        a25[aL] = i33 * base + a25[aL] - b10[aL];
      }
      for (; !a25[0] && a25.length > 1; a25.splice(0, 1)) ;
    }
    return function(x9, y10, dp, rm, base) {
      var cmp, e36, i33, more, n27, prod, prodL, q2, qc, rem, remL, rem0, xi, xL, yc0, yL, yz, s24 = x9.s == y10.s ? 1 : -1, xc = x9.c, yc = y10.c;
      if (!xc || !xc[0] || !yc || !yc[0]) {
        return new BigNumber2(
          // Return NaN if either NaN, or both Infinity or 0.
          !x9.s || !y10.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : (
            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.
            xc && xc[0] == 0 || !yc ? s24 * 0 : s24 / 0
          )
        );
      }
      q2 = new BigNumber2(s24);
      qc = q2.c = [];
      e36 = x9.e - y10.e;
      s24 = dp + e36 + 1;
      if (!base) {
        base = BASE;
        e36 = bitFloor(x9.e / LOG_BASE) - bitFloor(y10.e / LOG_BASE);
        s24 = s24 / LOG_BASE | 0;
      }
      for (i33 = 0; yc[i33] == (xc[i33] || 0); i33++) ;
      if (yc[i33] > (xc[i33] || 0)) e36--;
      if (s24 < 0) {
        qc.push(1);
        more = true;
      } else {
        xL = xc.length;
        yL = yc.length;
        i33 = 0;
        s24 += 2;
        n27 = mathfloor(base / (yc[0] + 1));
        if (n27 > 1) {
          yc = multiply(yc, n27, base);
          xc = multiply(xc, n27, base);
          yL = yc.length;
          xL = xc.length;
        }
        xi = yL;
        rem = xc.slice(0, yL);
        remL = rem.length;
        for (; remL < yL; rem[remL++] = 0) ;
        yz = yc.slice();
        yz = [0].concat(yz);
        yc0 = yc[0];
        if (yc[1] >= base / 2) yc0++;
        do {
          n27 = 0;
          cmp = compare2(yc, rem, yL, remL);
          if (cmp < 0) {
            rem0 = rem[0];
            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);
            n27 = mathfloor(rem0 / yc0);
            if (n27 > 1) {
              if (n27 >= base) n27 = base - 1;
              prod = multiply(yc, n27, base);
              prodL = prod.length;
              remL = rem.length;
              while (compare2(prod, rem, prodL, remL) == 1) {
                n27--;
                subtract(prod, yL < prodL ? yz : yc, prodL, base);
                prodL = prod.length;
                cmp = 1;
              }
            } else {
              if (n27 == 0) {
                cmp = n27 = 1;
              }
              prod = yc.slice();
              prodL = prod.length;
            }
            if (prodL < remL) prod = [0].concat(prod);
            subtract(rem, prod, remL, base);
            remL = rem.length;
            if (cmp == -1) {
              while (compare2(yc, rem, yL, remL) < 1) {
                n27++;
                subtract(rem, yL < remL ? yz : yc, remL, base);
                remL = rem.length;
              }
            }
          } else if (cmp === 0) {
            n27++;
            rem = [0];
          }
          qc[i33++] = n27;
          if (rem[0]) {
            rem[remL++] = xc[xi] || 0;
          } else {
            rem = [xc[xi]];
            remL = 1;
          }
        } while ((xi++ < xL || rem[0] != null) && s24--);
        more = rem[0] != null;
        if (!qc[0]) qc.splice(0, 1);
      }
      if (base == BASE) {
        for (i33 = 1, s24 = qc[0]; s24 >= 10; s24 /= 10, i33++) ;
        round(q2, dp + (q2.e = i33 + e36 * LOG_BASE - 1) + 1, rm, more);
      } else {
        q2.e = e36;
        q2.r = +more;
      }
      return q2;
    };
  }();
  function format(n27, i33, rm, id) {
    var c0, e36, ne, len, str;
    if (rm == null) rm = ROUNDING_MODE;
    else intCheck(rm, 0, 8);
    if (!n27.c) return n27.toString();
    c0 = n27.c[0];
    ne = n27.e;
    if (i33 == null) {
      str = coeffToString(n27.c);
      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS) ? toExponential(str, ne) : toFixedPoint(str, ne, "0");
    } else {
      n27 = round(new BigNumber2(n27), i33, rm);
      e36 = n27.e;
      str = coeffToString(n27.c);
      len = str.length;
      if (id == 1 || id == 2 && (i33 <= e36 || e36 <= TO_EXP_NEG)) {
        for (; len < i33; str += "0", len++) ;
        str = toExponential(str, e36);
      } else {
        i33 -= ne;
        str = toFixedPoint(str, e36, "0");
        if (e36 + 1 > len) {
          if (--i33 > 0) for (str += "."; i33--; str += "0") ;
        } else {
          i33 += e36 - len;
          if (i33 > 0) {
            if (e36 + 1 == len) str += ".";
            for (; i33--; str += "0") ;
          }
        }
      }
    }
    return n27.s < 0 && c0 ? "-" + str : str;
  }
  function maxOrMin(args, n27) {
    var k4, y10, i33 = 1, x9 = new BigNumber2(args[0]);
    for (; i33 < args.length; i33++) {
      y10 = new BigNumber2(args[i33]);
      if (!y10.s || (k4 = compare(x9, y10)) === n27 || k4 === 0 && x9.s === n27) {
        x9 = y10;
      }
    }
    return x9;
  }
  function normalise(n27, c21, e36) {
    var i33 = 1, j7 = c21.length;
    for (; !c21[--j7]; c21.pop()) ;
    for (j7 = c21[0]; j7 >= 10; j7 /= 10, i33++) ;
    if ((e36 = i33 + e36 * LOG_BASE - 1) > MAX_EXP) {
      n27.c = n27.e = null;
    } else if (e36 < MIN_EXP) {
      n27.c = [n27.e = 0];
    } else {
      n27.e = e36;
      n27.c = c21;
    }
    return n27;
  }
  parseNumeric = /* @__PURE__ */ function() {
    var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i, dotAfter = /^([^.]+)\.$/, dotBefore = /^\.([^.]+)$/, isInfinityOrNaN = /^-?(Infinity|NaN)$/, whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
    return function(x9, str, isNum, b10) {
      var base, s24 = isNum ? str : str.replace(whitespaceOrPlus, "");
      if (isInfinityOrNaN.test(s24)) {
        x9.s = isNaN(s24) ? null : s24 < 0 ? -1 : 1;
      } else {
        if (!isNum) {
          s24 = s24.replace(basePrefix, function(m30, p1, p22) {
            base = (p22 = p22.toLowerCase()) == "x" ? 16 : p22 == "b" ? 2 : 8;
            return !b10 || b10 == base ? p1 : m30;
          });
          if (b10) {
            base = b10;
            s24 = s24.replace(dotAfter, "$1").replace(dotBefore, "0.$1");
          }
          if (str != s24) return new BigNumber2(s24, base);
        }
        if (BigNumber2.DEBUG) {
          throw Error(bignumberError + "Not a" + (b10 ? " base " + b10 : "") + " number: " + str);
        }
        x9.s = null;
      }
      x9.c = x9.e = null;
    };
  }();
  function round(x9, sd, rm, r35) {
    var d19, i33, j7, k4, n27, ni, rd, xc = x9.c, pows10 = POWS_TEN;
    if (xc) {
      out: {
        for (d19 = 1, k4 = xc[0]; k4 >= 10; k4 /= 10, d19++) ;
        i33 = sd - d19;
        if (i33 < 0) {
          i33 += LOG_BASE;
          j7 = sd;
          n27 = xc[ni = 0];
          rd = mathfloor(n27 / pows10[d19 - j7 - 1] % 10);
        } else {
          ni = mathceil((i33 + 1) / LOG_BASE);
          if (ni >= xc.length) {
            if (r35) {
              for (; xc.length <= ni; xc.push(0)) ;
              n27 = rd = 0;
              d19 = 1;
              i33 %= LOG_BASE;
              j7 = i33 - LOG_BASE + 1;
            } else {
              break out;
            }
          } else {
            n27 = k4 = xc[ni];
            for (d19 = 1; k4 >= 10; k4 /= 10, d19++) ;
            i33 %= LOG_BASE;
            j7 = i33 - LOG_BASE + d19;
            rd = j7 < 0 ? 0 : mathfloor(n27 / pows10[d19 - j7 - 1] % 10);
          }
        }
        r35 = r35 || sd < 0 || // Are there any non-zero digits after the rounding digit?
        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right
        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
        xc[ni + 1] != null || (j7 < 0 ? n27 : n27 % pows10[d19 - j7 - 1]);
        r35 = rm < 4 ? (rd || r35) && (rm == 0 || rm == (x9.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r35 || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.
        (i33 > 0 ? j7 > 0 ? n27 / pows10[d19 - j7] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x9.s < 0 ? 8 : 7));
        if (sd < 1 || !xc[0]) {
          xc.length = 0;
          if (r35) {
            sd -= x9.e + 1;
            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
            x9.e = -sd || 0;
          } else {
            xc[0] = x9.e = 0;
          }
          return x9;
        }
        if (i33 == 0) {
          xc.length = ni;
          k4 = 1;
          ni--;
        } else {
          xc.length = ni + 1;
          k4 = pows10[LOG_BASE - i33];
          xc[ni] = j7 > 0 ? mathfloor(n27 / pows10[d19 - j7] % pows10[j7]) * k4 : 0;
        }
        if (r35) {
          for (; ; ) {
            if (ni == 0) {
              for (i33 = 1, j7 = xc[0]; j7 >= 10; j7 /= 10, i33++) ;
              j7 = xc[0] += k4;
              for (k4 = 1; j7 >= 10; j7 /= 10, k4++) ;
              if (i33 != k4) {
                x9.e++;
                if (xc[0] == BASE) xc[0] = 1;
              }
              break;
            } else {
              xc[ni] += k4;
              if (xc[ni] != BASE) break;
              xc[ni--] = 0;
              k4 = 1;
            }
          }
        }
        for (i33 = xc.length; xc[--i33] === 0; xc.pop()) ;
      }
      if (x9.e > MAX_EXP) {
        x9.c = x9.e = null;
      } else if (x9.e < MIN_EXP) {
        x9.c = [x9.e = 0];
      }
    }
    return x9;
  }
  function valueOf(n27) {
    var str, e36 = n27.e;
    if (e36 === null) return n27.toString();
    str = coeffToString(n27.c);
    str = e36 <= TO_EXP_NEG || e36 >= TO_EXP_POS ? toExponential(str, e36) : toFixedPoint(str, e36, "0");
    return n27.s < 0 ? "-" + str : str;
  }
  P5.absoluteValue = P5.abs = function() {
    var x9 = new BigNumber2(this);
    if (x9.s < 0) x9.s = 1;
    return x9;
  };
  P5.comparedTo = function(y10, b10) {
    return compare(this, new BigNumber2(y10, b10));
  };
  P5.decimalPlaces = P5.dp = function(dp, rm) {
    var c21, n27, v10, x9 = this;
    if (dp != null) {
      intCheck(dp, 0, MAX);
      if (rm == null) rm = ROUNDING_MODE;
      else intCheck(rm, 0, 8);
      return round(new BigNumber2(x9), dp + x9.e + 1, rm);
    }
    if (!(c21 = x9.c)) return null;
    n27 = ((v10 = c21.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;
    if (v10 = c21[v10]) for (; v10 % 10 == 0; v10 /= 10, n27--) ;
    if (n27 < 0) n27 = 0;
    return n27;
  };
  P5.dividedBy = P5.div = function(y10, b10) {
    return div(this, new BigNumber2(y10, b10), DECIMAL_PLACES, ROUNDING_MODE);
  };
  P5.dividedToIntegerBy = P5.idiv = function(y10, b10) {
    return div(this, new BigNumber2(y10, b10), 0, 1);
  };
  P5.exponentiatedBy = P5.pow = function(n27, m30) {
    var half, isModExp, i33, k4, more, nIsBig, nIsNeg, nIsOdd, y10, x9 = this;
    n27 = new BigNumber2(n27);
    if (n27.c && !n27.isInteger()) {
      throw Error(bignumberError + "Exponent not an integer: " + valueOf(n27));
    }
    if (m30 != null) m30 = new BigNumber2(m30);
    nIsBig = n27.e > 14;
    if (!x9.c || !x9.c[0] || x9.c[0] == 1 && !x9.e && x9.c.length == 1 || !n27.c || !n27.c[0]) {
      y10 = new BigNumber2(Math.pow(+valueOf(x9), nIsBig ? n27.s * (2 - isOdd(n27)) : +valueOf(n27)));
      return m30 ? y10.mod(m30) : y10;
    }
    nIsNeg = n27.s < 0;
    if (m30) {
      if (m30.c ? !m30.c[0] : !m30.s) return new BigNumber2(NaN);
      isModExp = !nIsNeg && x9.isInteger() && m30.isInteger();
      if (isModExp) x9 = x9.mod(m30);
    } else if (n27.e > 9 && (x9.e > 0 || x9.e < -1 || (x9.e == 0 ? x9.c[0] > 1 || nIsBig && x9.c[1] >= 24e7 : x9.c[0] < 8e13 || nIsBig && x9.c[0] <= 9999975e7))) {
      k4 = x9.s < 0 && isOdd(n27) ? -0 : 0;
      if (x9.e > -1) k4 = 1 / k4;
      return new BigNumber2(nIsNeg ? 1 / k4 : k4);
    } else if (POW_PRECISION) {
      k4 = mathceil(POW_PRECISION / LOG_BASE + 2);
    }
    if (nIsBig) {
      half = new BigNumber2(0.5);
      if (nIsNeg) n27.s = 1;
      nIsOdd = isOdd(n27);
    } else {
      i33 = Math.abs(+valueOf(n27));
      nIsOdd = i33 % 2;
    }
    y10 = new BigNumber2(ONE);
    for (; ; ) {
      if (nIsOdd) {
        y10 = y10.times(x9);
        if (!y10.c) break;
        if (k4) {
          if (y10.c.length > k4) y10.c.length = k4;
        } else if (isModExp) {
          y10 = y10.mod(m30);
        }
      }
      if (i33) {
        i33 = mathfloor(i33 / 2);
        if (i33 === 0) break;
        nIsOdd = i33 % 2;
      } else {
        n27 = n27.times(half);
        round(n27, n27.e + 1, 1);
        if (n27.e > 14) {
          nIsOdd = isOdd(n27);
        } else {
          i33 = +valueOf(n27);
          if (i33 === 0) break;
          nIsOdd = i33 % 2;
        }
      }
      x9 = x9.times(x9);
      if (k4) {
        if (x9.c && x9.c.length > k4) x9.c.length = k4;
      } else if (isModExp) {
        x9 = x9.mod(m30);
      }
    }
    if (isModExp) return y10;
    if (nIsNeg) y10 = ONE.div(y10);
    return m30 ? y10.mod(m30) : k4 ? round(y10, POW_PRECISION, ROUNDING_MODE, more) : y10;
  };
  P5.integerValue = function(rm) {
    var n27 = new BigNumber2(this);
    if (rm == null) rm = ROUNDING_MODE;
    else intCheck(rm, 0, 8);
    return round(n27, n27.e + 1, rm);
  };
  P5.isEqualTo = P5.eq = function(y10, b10) {
    return compare(this, new BigNumber2(y10, b10)) === 0;
  };
  P5.isFinite = function() {
    return !!this.c;
  };
  P5.isGreaterThan = P5.gt = function(y10, b10) {
    return compare(this, new BigNumber2(y10, b10)) > 0;
  };
  P5.isGreaterThanOrEqualTo = P5.gte = function(y10, b10) {
    return (b10 = compare(this, new BigNumber2(y10, b10))) === 1 || b10 === 0;
  };
  P5.isInteger = function() {
    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
  };
  P5.isLessThan = P5.lt = function(y10, b10) {
    return compare(this, new BigNumber2(y10, b10)) < 0;
  };
  P5.isLessThanOrEqualTo = P5.lte = function(y10, b10) {
    return (b10 = compare(this, new BigNumber2(y10, b10))) === -1 || b10 === 0;
  };
  P5.isNaN = function() {
    return !this.s;
  };
  P5.isNegative = function() {
    return this.s < 0;
  };
  P5.isPositive = function() {
    return this.s > 0;
  };
  P5.isZero = function() {
    return !!this.c && this.c[0] == 0;
  };
  P5.minus = function(y10, b10) {
    var i33, j7, t26, xLTy, x9 = this, a25 = x9.s;
    y10 = new BigNumber2(y10, b10);
    b10 = y10.s;
    if (!a25 || !b10) return new BigNumber2(NaN);
    if (a25 != b10) {
      y10.s = -b10;
      return x9.plus(y10);
    }
    var xe = x9.e / LOG_BASE, ye = y10.e / LOG_BASE, xc = x9.c, yc = y10.c;
    if (!xe || !ye) {
      if (!xc || !yc) return xc ? (y10.s = -b10, y10) : new BigNumber2(yc ? x9 : NaN);
      if (!xc[0] || !yc[0]) {
        return yc[0] ? (y10.s = -b10, y10) : new BigNumber2(xc[0] ? x9 : (
          // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
          ROUNDING_MODE == 3 ? -0 : 0
        ));
      }
    }
    xe = bitFloor(xe);
    ye = bitFloor(ye);
    xc = xc.slice();
    if (a25 = xe - ye) {
      if (xLTy = a25 < 0) {
        a25 = -a25;
        t26 = xc;
      } else {
        ye = xe;
        t26 = yc;
      }
      t26.reverse();
      for (b10 = a25; b10--; t26.push(0)) ;
      t26.reverse();
    } else {
      j7 = (xLTy = (a25 = xc.length) < (b10 = yc.length)) ? a25 : b10;
      for (a25 = b10 = 0; b10 < j7; b10++) {
        if (xc[b10] != yc[b10]) {
          xLTy = xc[b10] < yc[b10];
          break;
        }
      }
    }
    if (xLTy) {
      t26 = xc;
      xc = yc;
      yc = t26;
      y10.s = -y10.s;
    }
    b10 = (j7 = yc.length) - (i33 = xc.length);
    if (b10 > 0) for (; b10--; xc[i33++] = 0) ;
    b10 = BASE - 1;
    for (; j7 > a25; ) {
      if (xc[--j7] < yc[j7]) {
        for (i33 = j7; i33 && !xc[--i33]; xc[i33] = b10) ;
        --xc[i33];
        xc[j7] += BASE;
      }
      xc[j7] -= yc[j7];
    }
    for (; xc[0] == 0; xc.splice(0, 1), --ye) ;
    if (!xc[0]) {
      y10.s = ROUNDING_MODE == 3 ? -1 : 1;
      y10.c = [y10.e = 0];
      return y10;
    }
    return normalise(y10, xc, ye);
  };
  P5.modulo = P5.mod = function(y10, b10) {
    var q2, s24, x9 = this;
    y10 = new BigNumber2(y10, b10);
    if (!x9.c || !y10.s || y10.c && !y10.c[0]) {
      return new BigNumber2(NaN);
    } else if (!y10.c || x9.c && !x9.c[0]) {
      return new BigNumber2(x9);
    }
    if (MODULO_MODE == 9) {
      s24 = y10.s;
      y10.s = 1;
      q2 = div(x9, y10, 0, 3);
      y10.s = s24;
      q2.s *= s24;
    } else {
      q2 = div(x9, y10, 0, MODULO_MODE);
    }
    y10 = x9.minus(q2.times(y10));
    if (!y10.c[0] && MODULO_MODE == 1) y10.s = x9.s;
    return y10;
  };
  P5.multipliedBy = P5.times = function(y10, b10) {
    var c21, e36, i33, j7, k4, m30, xcL, xlo, xhi, ycL, ylo, yhi, zc, base, sqrtBase, x9 = this, xc = x9.c, yc = (y10 = new BigNumber2(y10, b10)).c;
    if (!xc || !yc || !xc[0] || !yc[0]) {
      if (!x9.s || !y10.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
        y10.c = y10.e = y10.s = null;
      } else {
        y10.s *= x9.s;
        if (!xc || !yc) {
          y10.c = y10.e = null;
        } else {
          y10.c = [0];
          y10.e = 0;
        }
      }
      return y10;
    }
    e36 = bitFloor(x9.e / LOG_BASE) + bitFloor(y10.e / LOG_BASE);
    y10.s *= x9.s;
    xcL = xc.length;
    ycL = yc.length;
    if (xcL < ycL) {
      zc = xc;
      xc = yc;
      yc = zc;
      i33 = xcL;
      xcL = ycL;
      ycL = i33;
    }
    for (i33 = xcL + ycL, zc = []; i33--; zc.push(0)) ;
    base = BASE;
    sqrtBase = SQRT_BASE;
    for (i33 = ycL; --i33 >= 0; ) {
      c21 = 0;
      ylo = yc[i33] % sqrtBase;
      yhi = yc[i33] / sqrtBase | 0;
      for (k4 = xcL, j7 = i33 + k4; j7 > i33; ) {
        xlo = xc[--k4] % sqrtBase;
        xhi = xc[k4] / sqrtBase | 0;
        m30 = yhi * xlo + xhi * ylo;
        xlo = ylo * xlo + m30 % sqrtBase * sqrtBase + zc[j7] + c21;
        c21 = (xlo / base | 0) + (m30 / sqrtBase | 0) + yhi * xhi;
        zc[j7--] = xlo % base;
      }
      zc[j7] = c21;
    }
    if (c21) {
      ++e36;
    } else {
      zc.splice(0, 1);
    }
    return normalise(y10, zc, e36);
  };
  P5.negated = function() {
    var x9 = new BigNumber2(this);
    x9.s = -x9.s || null;
    return x9;
  };
  P5.plus = function(y10, b10) {
    var t26, x9 = this, a25 = x9.s;
    y10 = new BigNumber2(y10, b10);
    b10 = y10.s;
    if (!a25 || !b10) return new BigNumber2(NaN);
    if (a25 != b10) {
      y10.s = -b10;
      return x9.minus(y10);
    }
    var xe = x9.e / LOG_BASE, ye = y10.e / LOG_BASE, xc = x9.c, yc = y10.c;
    if (!xe || !ye) {
      if (!xc || !yc) return new BigNumber2(a25 / 0);
      if (!xc[0] || !yc[0]) return yc[0] ? y10 : new BigNumber2(xc[0] ? x9 : a25 * 0);
    }
    xe = bitFloor(xe);
    ye = bitFloor(ye);
    xc = xc.slice();
    if (a25 = xe - ye) {
      if (a25 > 0) {
        ye = xe;
        t26 = yc;
      } else {
        a25 = -a25;
        t26 = xc;
      }
      t26.reverse();
      for (; a25--; t26.push(0)) ;
      t26.reverse();
    }
    a25 = xc.length;
    b10 = yc.length;
    if (a25 - b10 < 0) {
      t26 = yc;
      yc = xc;
      xc = t26;
      b10 = a25;
    }
    for (a25 = 0; b10; ) {
      a25 = (xc[--b10] = xc[b10] + yc[b10] + a25) / BASE | 0;
      xc[b10] = BASE === xc[b10] ? 0 : xc[b10] % BASE;
    }
    if (a25) {
      xc = [a25].concat(xc);
      ++ye;
    }
    return normalise(y10, xc, ye);
  };
  P5.precision = P5.sd = function(sd, rm) {
    var c21, n27, v10, x9 = this;
    if (sd != null && sd !== !!sd) {
      intCheck(sd, 1, MAX);
      if (rm == null) rm = ROUNDING_MODE;
      else intCheck(rm, 0, 8);
      return round(new BigNumber2(x9), sd, rm);
    }
    if (!(c21 = x9.c)) return null;
    v10 = c21.length - 1;
    n27 = v10 * LOG_BASE + 1;
    if (v10 = c21[v10]) {
      for (; v10 % 10 == 0; v10 /= 10, n27--) ;
      for (v10 = c21[0]; v10 >= 10; v10 /= 10, n27++) ;
    }
    if (sd && x9.e + 1 > n27) n27 = x9.e + 1;
    return n27;
  };
  P5.shiftedBy = function(k4) {
    intCheck(k4, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
    return this.times("1e" + k4);
  };
  P5.squareRoot = P5.sqrt = function() {
    var m30, n27, r35, rep, t26, x9 = this, c21 = x9.c, s24 = x9.s, e36 = x9.e, dp = DECIMAL_PLACES + 4, half = new BigNumber2("0.5");
    if (s24 !== 1 || !c21 || !c21[0]) {
      return new BigNumber2(!s24 || s24 < 0 && (!c21 || c21[0]) ? NaN : c21 ? x9 : 1 / 0);
    }
    s24 = Math.sqrt(+valueOf(x9));
    if (s24 == 0 || s24 == 1 / 0) {
      n27 = coeffToString(c21);
      if ((n27.length + e36) % 2 == 0) n27 += "0";
      s24 = Math.sqrt(+n27);
      e36 = bitFloor((e36 + 1) / 2) - (e36 < 0 || e36 % 2);
      if (s24 == 1 / 0) {
        n27 = "5e" + e36;
      } else {
        n27 = s24.toExponential();
        n27 = n27.slice(0, n27.indexOf("e") + 1) + e36;
      }
      r35 = new BigNumber2(n27);
    } else {
      r35 = new BigNumber2(s24 + "");
    }
    if (r35.c[0]) {
      e36 = r35.e;
      s24 = e36 + dp;
      if (s24 < 3) s24 = 0;
      for (; ; ) {
        t26 = r35;
        r35 = half.times(t26.plus(div(x9, t26, dp, 1)));
        if (coeffToString(t26.c).slice(0, s24) === (n27 = coeffToString(r35.c)).slice(0, s24)) {
          if (r35.e < e36) --s24;
          n27 = n27.slice(s24 - 3, s24 + 1);
          if (n27 == "9999" || !rep && n27 == "4999") {
            if (!rep) {
              round(t26, t26.e + DECIMAL_PLACES + 2, 0);
              if (t26.times(t26).eq(x9)) {
                r35 = t26;
                break;
              }
            }
            dp += 4;
            s24 += 4;
            rep = 1;
          } else {
            if (!+n27 || !+n27.slice(1) && n27.charAt(0) == "5") {
              round(r35, r35.e + DECIMAL_PLACES + 2, 1);
              m30 = !r35.times(r35).eq(x9);
            }
            break;
          }
        }
      }
    }
    return round(r35, r35.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m30);
  };
  P5.toExponential = function(dp, rm) {
    if (dp != null) {
      intCheck(dp, 0, MAX);
      dp++;
    }
    return format(this, dp, rm, 1);
  };
  P5.toFixed = function(dp, rm) {
    if (dp != null) {
      intCheck(dp, 0, MAX);
      dp = dp + this.e + 1;
    }
    return format(this, dp, rm);
  };
  P5.toFormat = function(dp, rm, format2) {
    var str, x9 = this;
    if (format2 == null) {
      if (dp != null && rm && typeof rm == "object") {
        format2 = rm;
        rm = null;
      } else if (dp && typeof dp == "object") {
        format2 = dp;
        dp = rm = null;
      } else {
        format2 = FORMAT;
      }
    } else if (typeof format2 != "object") {
      throw Error(bignumberError + "Argument not an object: " + format2);
    }
    str = x9.toFixed(dp, rm);
    if (x9.c) {
      var i33, arr = str.split("."), g1 = +format2.groupSize, g22 = +format2.secondaryGroupSize, groupSeparator = format2.groupSeparator || "", intPart = arr[0], fractionPart = arr[1], isNeg = x9.s < 0, intDigits = isNeg ? intPart.slice(1) : intPart, len = intDigits.length;
      if (g22) {
        i33 = g1;
        g1 = g22;
        g22 = i33;
        len -= i33;
      }
      if (g1 > 0 && len > 0) {
        i33 = len % g1 || g1;
        intPart = intDigits.substr(0, i33);
        for (; i33 < len; i33 += g1) intPart += groupSeparator + intDigits.substr(i33, g1);
        if (g22 > 0) intPart += groupSeparator + intDigits.slice(i33);
        if (isNeg) intPart = "-" + intPart;
      }
      str = fractionPart ? intPart + (format2.decimalSeparator || "") + ((g22 = +format2.fractionGroupSize) ? fractionPart.replace(
        new RegExp("\\d{" + g22 + "}\\B", "g"),
        "$&" + (format2.fractionGroupSeparator || "")
      ) : fractionPart) : intPart;
    }
    return (format2.prefix || "") + str + (format2.suffix || "");
  };
  P5.toFraction = function(md) {
    var d19, d0, d1, d22, e36, exp, n27, n0, n1, q2, r35, s24, x9 = this, xc = x9.c;
    if (md != null) {
      n27 = new BigNumber2(md);
      if (!n27.isInteger() && (n27.c || n27.s !== 1) || n27.lt(ONE)) {
        throw Error(bignumberError + "Argument " + (n27.isInteger() ? "out of range: " : "not an integer: ") + valueOf(n27));
      }
    }
    if (!xc) return new BigNumber2(x9);
    d19 = new BigNumber2(ONE);
    n1 = d0 = new BigNumber2(ONE);
    d1 = n0 = new BigNumber2(ONE);
    s24 = coeffToString(xc);
    e36 = d19.e = s24.length - x9.e - 1;
    d19.c[0] = POWS_TEN[(exp = e36 % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
    md = !md || n27.comparedTo(d19) > 0 ? e36 > 0 ? d19 : n1 : n27;
    exp = MAX_EXP;
    MAX_EXP = 1 / 0;
    n27 = new BigNumber2(s24);
    n0.c[0] = 0;
    for (; ; ) {
      q2 = div(n27, d19, 0, 1);
      d22 = d0.plus(q2.times(d1));
      if (d22.comparedTo(md) == 1) break;
      d0 = d1;
      d1 = d22;
      n1 = n0.plus(q2.times(d22 = n1));
      n0 = d22;
      d19 = n27.minus(q2.times(d22 = d19));
      n27 = d22;
    }
    d22 = div(md.minus(d0), d1, 0, 1);
    n0 = n0.plus(d22.times(n1));
    d0 = d0.plus(d22.times(d1));
    n0.s = n1.s = x9.s;
    e36 = e36 * 2;
    r35 = div(n1, d1, e36, ROUNDING_MODE).minus(x9).abs().comparedTo(
      div(n0, d0, e36, ROUNDING_MODE).minus(x9).abs()
    ) < 1 ? [n1, d1] : [n0, d0];
    MAX_EXP = exp;
    return r35;
  };
  P5.toNumber = function() {
    return +valueOf(this);
  };
  P5.toPrecision = function(sd, rm) {
    if (sd != null) intCheck(sd, 1, MAX);
    return format(this, sd, rm, 2);
  };
  P5.toString = function(b10) {
    var str, n27 = this, s24 = n27.s, e36 = n27.e;
    if (e36 === null) {
      if (s24) {
        str = "Infinity";
        if (s24 < 0) str = "-" + str;
      } else {
        str = "NaN";
      }
    } else {
      if (b10 == null) {
        str = e36 <= TO_EXP_NEG || e36 >= TO_EXP_POS ? toExponential(coeffToString(n27.c), e36) : toFixedPoint(coeffToString(n27.c), e36, "0");
      } else if (b10 === 10 && alphabetHasNormalDecimalDigits) {
        n27 = round(new BigNumber2(n27), DECIMAL_PLACES + e36 + 1, ROUNDING_MODE);
        str = toFixedPoint(coeffToString(n27.c), n27.e, "0");
      } else {
        intCheck(b10, 2, ALPHABET.length, "Base");
        str = convertBase(toFixedPoint(coeffToString(n27.c), e36, "0"), 10, b10, s24, true);
      }
      if (s24 < 0 && n27.c[0]) str = "-" + str;
    }
    return str;
  };
  P5.valueOf = P5.toJSON = function() {
    return valueOf(this);
  };
  P5._isBigNumber = true;
  P5[Symbol.toStringTag] = "BigNumber";
  P5[Symbol.for("nodejs.util.inspect.custom")] = P5.valueOf;
  if (configObject != null) BigNumber2.set(configObject);
  return BigNumber2;
}
function bitFloor(n27) {
  var i33 = n27 | 0;
  return n27 > 0 || n27 === i33 ? i33 : i33 - 1;
}
function coeffToString(a25) {
  var s24, z5, i33 = 1, j7 = a25.length, r35 = a25[0] + "";
  for (; i33 < j7; ) {
    s24 = a25[i33++] + "";
    z5 = LOG_BASE - s24.length;
    for (; z5--; s24 = "0" + s24) ;
    r35 += s24;
  }
  for (j7 = r35.length; r35.charCodeAt(--j7) === 48; ) ;
  return r35.slice(0, j7 + 1 || 1);
}
function compare(x9, y10) {
  var a25, b10, xc = x9.c, yc = y10.c, i33 = x9.s, j7 = y10.s, k4 = x9.e, l17 = y10.e;
  if (!i33 || !j7) return null;
  a25 = xc && !xc[0];
  b10 = yc && !yc[0];
  if (a25 || b10) return a25 ? b10 ? 0 : -j7 : i33;
  if (i33 != j7) return i33;
  a25 = i33 < 0;
  b10 = k4 == l17;
  if (!xc || !yc) return b10 ? 0 : !xc ^ a25 ? 1 : -1;
  if (!b10) return k4 > l17 ^ a25 ? 1 : -1;
  j7 = (k4 = xc.length) < (l17 = yc.length) ? k4 : l17;
  for (i33 = 0; i33 < j7; i33++) if (xc[i33] != yc[i33]) return xc[i33] > yc[i33] ^ a25 ? 1 : -1;
  return k4 == l17 ? 0 : k4 > l17 ^ a25 ? 1 : -1;
}
function intCheck(n27, min, max, name) {
  if (n27 < min || n27 > max || n27 !== mathfloor(n27)) {
    throw Error(bignumberError + (name || "Argument") + (typeof n27 == "number" ? n27 < min || n27 > max ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(n27));
  }
}
function isOdd(n27) {
  var k4 = n27.c.length - 1;
  return bitFloor(n27.e / LOG_BASE) == k4 && n27.c[k4] % 2 != 0;
}
function toExponential(str, e36) {
  return (str.length > 1 ? str.charAt(0) + "." + str.slice(1) : str) + (e36 < 0 ? "e" : "e+") + e36;
}
function toFixedPoint(str, e36, z5) {
  var len, zs;
  if (e36 < 0) {
    for (zs = z5 + "."; ++e36; zs += z5) ;
    str = zs + str;
  } else {
    len = str.length;
    if (++e36 > len) {
      for (zs = z5, e36 -= len; --e36; zs += z5) ;
      str += zs;
    } else if (e36 < len) {
      str = str.slice(0, e36) + "." + str.slice(e36);
    }
  }
  return str;
}
var BigNumber = clone();
var bignumber_default = BigNumber;

// node_modules/@solana/buffer-layout-utils/lib/esm/decimal.mjs
var WAD = new bignumber_default("1e+18");

// node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs
var import_buffer_layout2 = __toESM(require_Layout(), 1);
var bool = (property) => {
  const layout = (0, import_buffer_layout2.u8)(property);
  const { encode, decode } = encodeDecode(layout);
  const boolLayout = layout;
  boolLayout.decode = (buffer, offset) => {
    const src = decode(buffer, offset);
    return !!src;
  };
  boolLayout.encode = (bool2, buffer, offset) => {
    const src = Number(bool2);
    return encode(src, buffer, offset);
  };
  return boolLayout;
};

// node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs
var import_buffer_layout3 = __toESM(require_Layout(), 1);
var publicKey = (property) => {
  const layout = (0, import_buffer_layout3.blob)(32, property);
  const { encode, decode } = encodeDecode(layout);
  const publicKeyLayout = layout;
  publicKeyLayout.decode = (buffer, offset) => {
    const src = decode(buffer, offset);
    return new PublicKey(src);
  };
  publicKeyLayout.encode = (publicKey2, buffer, offset) => {
    const src = publicKey2.toBuffer();
    return encode(src, buffer, offset);
  };
  return publicKeyLayout;
};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@solana/spl-token/lib/esm/state/account.mjs
var a4;
!function(t26) {
  t26[t26.Uninitialized = 0] = "Uninitialized", t26[t26.Initialized = 1] = "Initialized", t26[t26.Frozen = 2] = "Frozen";
}(a4 || (a4 = {}));
var l4 = (0, import_buffer_layout4.struct)([publicKey("mint"), publicKey("owner"), u64("amount"), (0, import_buffer_layout4.u32)("delegateOption"), publicKey("delegate"), (0, import_buffer_layout4.u8)("state"), (0, import_buffer_layout4.u32)("isNativeOption"), u64("isNative"), u64("delegatedAmount"), (0, import_buffer_layout4.u32)("closeAuthorityOption"), publicKey("closeAuthority")]);
var r14 = l4.span;

// node_modules/@bonfida/spl-name-service/dist/esm/nft/retrieveNftOwnerV2.mjs
var e7 = async (e36, a25) => {
  try {
    const t26 = t7(a25), r35 = await e36.getTokenLargestAccounts(t26);
    if (0 === r35.value.length) return null;
    const s24 = await e36.getAccountInfo(r35.value[0].address);
    if (!s24) return null;
    const c21 = l4.decode(s24.data);
    return "1" === c21.amount.toString() ? c21.owner : null;
  } catch (n27) {
    if (n27 instanceof SolanaJSONRPCError && -32602 === n27.code) return null;
    throw n27;
  }
};

// node_modules/@bonfida/spl-name-service/dist/esm/state.mjs
var s5 = class _s {
  constructor(e36) {
    this.parentName = new PublicKey(e36.parentName), this.owner = new PublicKey(e36.owner), this.class = new PublicKey(e36.class);
  }
  static deserialize(t26) {
    const e36 = new _s(m(this.schema, t26));
    return e36.data = null == t26 ? void 0 : t26.slice(this.HEADER_LEN), e36;
  }
  static async retrieve(t26, n27) {
    var i33;
    const o25 = await t26.getAccountInfo(n27);
    if (!o25) throw new g2("The name account does not exist");
    const c21 = new _s(m(this.schema, o25.data));
    c21.data = null === (i33 = o25.data) || void 0 === i33 ? void 0 : i33.slice(this.HEADER_LEN);
    return { registry: c21, nftOwner: await e7(t26, n27) };
  }
  static async _retrieveBatch(t26, e36) {
    const a25 = await t26.getMultipleAccountsInfo(e36), n27 = (t27) => {
      if (!t27) return;
      const e37 = new _s(m(this.schema, t27));
      return e37.data = null == t27 ? void 0 : t27.slice(this.HEADER_LEN), e37;
    };
    return a25.map((t27) => n27(null == t27 ? void 0 : t27.data));
  }
  static async retrieveBatch(t26, e36) {
    let r35 = [];
    const a25 = [...e36];
    for (; a25.length > 0; ) r35.push(...await this._retrieveBatch(t26, a25.splice(0, 100)));
    return r35;
  }
};
s5.HEADER_LEN = 96, s5.schema = { struct: { parentName: { array: { type: "u8", len: 32 } }, owner: { array: { type: "u8", len: 32 } }, class: { array: { type: "u8", len: 32 } } } };

// node_modules/@bonfida/spl-name-service/dist/esm/deprecated/utils.mjs
async function m5(t26, a25) {
  if (!await t26.getAccountInfo(a25)) throw new g2("The name account does exist");
  return s5.retrieve(t26, a25);
}
async function d3(t26) {
  const e36 = n2 + t26, r35 = c7(r.Buffer.from(e36, "utf8"));
  return r.Buffer.from(r35);
}
async function p5(a25, r35, o25) {
  const n27 = [a25];
  r35 ? n27.push(r35.toBuffer()) : n27.push(r.Buffer.alloc(32)), o25 ? n27.push(o25.toBuffer()) : n27.push(r.Buffer.alloc(32));
  const [i33] = await PublicKey.findProgramAddress(n27, w);
  return i33;
}
async function w4(t26, a25) {
  const e36 = await d3(a25.toBase58()), o25 = await p5(e36, E), { registry: n27 } = await s5.retrieve(t26, o25);
  if (!n27.data) throw new D("The registry data is empty");
  const s24 = n27.data.slice(0, 4).readUInt32LE(0);
  return n27.data.slice(4, 4 + s24).toString();
}
async function l5(t26, a25) {
  let e36 = [];
  for (let t27 of a25) {
    const a26 = await d3(t27.toBase58()), o25 = await p5(a26, E);
    e36.push(o25);
  }
  return (await s5.retrieveBatch(t26, e36)).map((t27) => {
    if (void 0 === t27 || void 0 === t27.data) return;
    const a26 = t27.data.slice(0, 4).readUInt32LE(0);
    return t27.data.slice(4, 4 + a26).toString();
  });
}
var h5 = async (t26, a25 = r7) => {
  let e36 = await d3(t26);
  return { pubkey: await p5(e36, void 0, a25), hashed: e36 };
};
var y5 = async (t26, a25 = false) => {
  t26.endsWith(".sol") && (t26 = t26.slice(0, -4));
  const e36 = t26.split(".");
  if (2 === e36.length) {
    const t27 = r.Buffer.from([a25 ? 1 : 0]).toString().concat(e36[0]), { pubkey: r35 } = await h5(e36[1]);
    return { ...await h5(t27, r35), isSub: true, parent: r35 };
  }
  if (3 === e36.length && a25) {
    const { pubkey: t27 } = await h5(e36[2]), { pubkey: a26 } = await h5("\0".concat(e36[1]), t27), r35 = r.Buffer.from([1]).toString();
    return { ...await h5(r35.concat(e36[0]), a26), isSub: true, parent: t27, isSubRecord: true };
  }
  if (e36.length >= 3) throw new f3("The domain is malformed");
  return { ...await h5(t26, r7), isSub: false, parent: void 0 };
};
var b3 = async (t26, a25) => {
  const { pubkey: e36, parent: o25 } = await y5(t26), n27 = await d3(e36.toBase58());
  return await p5(n27, E, a25 ? o25 : void 0);
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/createNameRegistry.mjs
async function a5(a25, c21, p16, f20, u17, j7, l17, w11) {
  const g12 = s4(c21), y10 = t5(g12, l17, w11), d19 = j7 || await a25.getMinimumBalanceForRentExemption(p16);
  let x9;
  if (w11) {
    const { registry: t26 } = await m5(a25, w11);
    x9 = t26.owner;
  }
  return t6(w, SystemProgram.programId, y10, u17, f20, g12, new u6(d19), new n8(p16), l17, w11, x9);
}

// node_modules/@bonfida/spl-name-service/dist/esm/utils/check.mjs
var o9 = (o25, t26) => {
  if (!o25) throw t26;
};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@scure/base/lib/esm/index.mjs
function r15(...r35) {
  const e36 = (r36) => r36, o25 = (r36, e37) => (o26) => r36(e37(o26));
  return { encode: r35.map((r36) => r36.encode).reduceRight(o25, e36), decode: r35.map((r36) => r36.decode).reduce(o25, e36) };
}
var e8 = (r35, o25) => o25 ? e8(o25, r35 % o25) : r35;
var o10 = (r35, o25) => r35 + (o25 - e8(r35, o25));
function n9(r35, e36, n27, t26) {
  if (!Array.isArray(r35)) throw new Error("convertRadix2: data should be array");
  if (e36 <= 0 || e36 > 32) throw new Error(`convertRadix2: wrong from=${e36}`);
  if (n27 <= 0 || n27 > 32) throw new Error(`convertRadix2: wrong to=${n27}`);
  if (o10(e36, n27) > 32) throw new Error(`convertRadix2: carry overflow from=${e36} to=${n27} carryBits=${o10(e36, n27)}`);
  let i33 = 0, f20 = 0;
  const c21 = 2 ** n27 - 1, d19 = [];
  for (const o25 of r35) {
    if (o25 >= 2 ** e36) throw new Error(`convertRadix2: invalid data word=${o25} from=${e36}`);
    if (i33 = i33 << e36 | o25, f20 + e36 > 32) throw new Error(`convertRadix2: carry overflow pos=${f20} from=${e36}`);
    for (f20 += e36; f20 >= n27; f20 -= n27) d19.push((i33 >> f20 - n27 & c21) >>> 0);
    i33 &= 2 ** f20 - 1;
  }
  if (i33 = i33 << n27 - f20 & c21, !t26 && f20 >= e36) throw new Error("Excess padding");
  if (!t26 && i33) throw new Error(`Non-zero padding: ${i33}`);
  return t26 && f20 > 0 && d19.push(i33 >>> 0), d19;
}
function t9(r35, e36 = false) {
  if (r35 <= 0 || r35 > 32) throw new Error("radix2: bits should be in (0..32]");
  if (o10(8, r35) > 32 || o10(r35, 8) > 32) throw new Error("radix2: carry overflow");
  return { encode: (o25) => {
    if (!((t26 = o25) instanceof Uint8Array || null != t26 && "object" == typeof t26 && "Uint8Array" === t26.constructor.name)) throw new Error("radix2.encode input should be Uint8Array");
    var t26;
    return n9(Array.from(o25), 8, r35, !e36);
  }, decode: (o25) => {
    if (!Array.isArray(o25) || o25.length && "number" != typeof o25[0]) throw new Error("radix2.decode input should be array of numbers");
    return Uint8Array.from(n9(o25, r35, 8, e36));
  } };
}
function i9(r35) {
  if ("function" != typeof r35) throw new Error("unsafeWrapper fn should be function");
  return function(...e36) {
    try {
      return r35.apply(null, e36);
    } catch (r36) {
    }
  };
}
var f6 = r15(/* @__PURE__ */ function(r35) {
  return { encode: (e36) => {
    if (!Array.isArray(e36) || e36.length && "number" != typeof e36[0]) throw new Error("alphabet.encode input should be an array of numbers");
    return e36.map((e37) => {
      if (e37 < 0 || e37 >= r35.length) throw new Error(`Digit index outside alphabet: ${e37} (alphabet: ${r35.length})`);
      return r35[e37];
    });
  }, decode: (e36) => {
    if (!Array.isArray(e36) || e36.length && "string" != typeof e36[0]) throw new Error("alphabet.decode input should be array of strings");
    return e36.map((e37) => {
      if ("string" != typeof e37) throw new Error(`alphabet.decode: not string element=${e37}`);
      const o25 = r35.indexOf(e37);
      if (-1 === o25) throw new Error(`Unknown letter: "${e37}". Allowed: ${r35}`);
      return o25;
    });
  } };
}("qpzry9x8gf2tvdw0s3jn54khce6mua7l"), function(r35 = "") {
  if ("string" != typeof r35) throw new Error("join separator should be string");
  return { encode: (e36) => {
    if (!Array.isArray(e36) || e36.length && "string" != typeof e36[0]) throw new Error("join.encode input should be array of strings");
    for (let r36 of e36) if ("string" != typeof r36) throw new Error(`join.encode: non-string input=${r36}`);
    return e36.join(r35);
  }, decode: (e36) => {
    if ("string" != typeof e36) throw new Error("join.decode input should be string");
    return e36.split(r35);
  } };
}(""));
var c9 = [996825010, 642813549, 513874426, 1027748829, 705979059];
function d4(r35) {
  const e36 = r35 >> 25;
  let o25 = (33554431 & r35) << 5;
  for (let r36 = 0; r36 < c9.length; r36++) 1 == (e36 >> r36 & 1) && (o25 ^= c9[r36]);
  return o25;
}
function s6(r35, e36, o25 = 1) {
  const t26 = r35.length;
  let i33 = 1;
  for (let e37 = 0; e37 < t26; e37++) {
    const o26 = r35.charCodeAt(e37);
    if (o26 < 33 || o26 > 126) throw new Error(`Invalid prefix (${r35})`);
    i33 = d4(i33) ^ o26 >> 5;
  }
  i33 = d4(i33);
  for (let e37 = 0; e37 < t26; e37++) i33 = d4(i33) ^ 31 & r35.charCodeAt(e37);
  for (let r36 of e36) i33 = d4(i33) ^ r36;
  for (let r36 = 0; r36 < 6; r36++) i33 = d4(i33);
  return i33 ^= o25, f6.encode(n9([i33 % 2 ** 30], 30, 5, false));
}
function a6(r35) {
  const e36 = "bech32" === r35 ? 1 : 734539939, o25 = t9(5), n27 = o25.decode, c21 = o25.encode, d19 = i9(n27);
  function a25(r36, o26 = 90) {
    if ("string" != typeof r36) throw new Error("bech32.decode input should be string, not " + typeof r36);
    if (r36.length < 8 || false !== o26 && r36.length > o26) throw new TypeError(`Wrong string length: ${r36.length} (${r36}). Expected (8..${o26})`);
    const n28 = r36.toLowerCase();
    if (r36 !== n28 && r36 !== r36.toUpperCase()) throw new Error("String must be lowercase or uppercase");
    const t26 = n28.lastIndexOf("1");
    if (0 === t26 || -1 === t26) throw new Error('Letter "1" must be present between prefix and data only');
    const i33 = n28.slice(0, t26), c22 = n28.slice(t26 + 1);
    if (c22.length < 6) throw new Error("Data must be at least 6 characters long");
    const d20 = f6.decode(c22).slice(0, -6), a26 = s6(i33, d20, e36);
    if (!c22.endsWith(a26)) throw new Error(`Invalid checksum in ${r36}: expected "${a26}"`);
    return { prefix: i33, words: d20 };
  }
  return { encode: function(r36, o26, n28 = 90) {
    if ("string" != typeof r36) throw new Error("bech32.encode prefix should be string, not " + typeof r36);
    if (!Array.isArray(o26) || o26.length && "number" != typeof o26[0]) throw new Error("bech32.encode words should be array of numbers, not " + typeof o26);
    if (0 === r36.length) throw new TypeError(`Invalid prefix length ${r36.length}`);
    const t26 = r36.length + 7 + o26.length;
    if (false !== n28 && t26 > n28) throw new TypeError(`Length ${t26} exceeds limit ${n28}`);
    const i33 = r36.toLowerCase(), c22 = s6(i33, o26, e36);
    return `${i33}1${f6.encode(o26)}${c22}`;
  }, decode: a25, decodeToBytes: function(r36) {
    const { prefix: e37, words: o26 } = a25(r36, false);
    return { prefix: e37, words: o26, bytes: n27(o26) };
  }, decodeUnsafe: i9(a25), fromWords: n27, fromWordsUnsafe: d19, toWords: c21 };
}
var h6 = a6("bech32");

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/punycode/punycode.es6.mjs
var o11 = 2147483647;
var t10 = 36;
var n10 = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" };
var e9 = Math.floor;
var r16 = String.fromCharCode;
function s7(o25) {
  throw new RangeError(n10[o25]);
}
function c10(o25) {
  const t26 = [];
  let n27 = 0;
  const e36 = o25.length;
  for (; n27 < e36; ) {
    const r35 = o25.charCodeAt(n27++);
    if (r35 >= 55296 && r35 <= 56319 && n27 < e36) {
      const e37 = o25.charCodeAt(n27++);
      56320 == (64512 & e37) ? t26.push(((1023 & r35) << 10) + (1023 & e37) + 65536) : (t26.push(r35), n27--);
    } else t26.push(r35);
  }
  return t26;
}
var f7 = function(o25, t26) {
  return o25 + 22 + 75 * (o25 < 26) - ((0 != t26) << 5);
};
var i10 = function(o25, n27, r35) {
  let s24 = 0;
  for (o25 = r35 ? e9(o25 / 700) : o25 >> 1, o25 += e9(o25 / n27); o25 > 455; s24 += t10) o25 = e9(o25 / 35);
  return e9(s24 + 36 * o25 / (o25 + 38));
};
var l6 = function(n27) {
  const r35 = [], c21 = n27.length;
  let f20 = 0, l17 = 128, u17 = 72, a25 = n27.lastIndexOf("-");
  a25 < 0 && (a25 = 0);
  for (let o25 = 0; o25 < a25; ++o25) n27.charCodeAt(o25) >= 128 && s7("not-basic"), r35.push(n27.charCodeAt(o25));
  for (let p16 = a25 > 0 ? a25 + 1 : 0; p16 < c21; ) {
    const a26 = f20;
    for (let r36 = 1, i33 = t10; ; i33 += t10) {
      p16 >= c21 && s7("invalid-input");
      const l18 = (h16 = n27.charCodeAt(p16++)) >= 48 && h16 < 58 ? h16 - 48 + 26 : h16 >= 65 && h16 < 91 ? h16 - 65 : h16 >= 97 && h16 < 123 ? h16 - 97 : t10;
      l18 >= t10 && s7("invalid-input"), l18 > e9((o11 - f20) / r36) && s7("overflow"), f20 += l18 * r36;
      const a27 = i33 <= u17 ? 1 : i33 >= u17 + 26 ? 26 : i33 - u17;
      if (l18 < a27) break;
      const d20 = t10 - a27;
      r36 > e9(o11 / d20) && s7("overflow"), r36 *= d20;
    }
    const d19 = r35.length + 1;
    u17 = i10(f20 - a26, d19, 0 == a26), e9(f20 / d19) > o11 - l17 && s7("overflow"), l17 += e9(f20 / d19), f20 %= d19, r35.splice(f20++, 0, l17);
  }
  var h16;
  return String.fromCodePoint(...r35);
};
var u7 = function(n27) {
  const l17 = [], u17 = (n27 = c10(n27)).length;
  let a25 = 128, h16 = 0, p16 = 72;
  for (const o25 of n27) o25 < 128 && l17.push(r16(o25));
  const d19 = l17.length;
  let v10 = d19;
  for (d19 && l17.push("-"); v10 < u17; ) {
    let c21 = o11;
    for (const o25 of n27) o25 >= a25 && o25 < c21 && (c21 = o25);
    const u18 = v10 + 1;
    c21 - a25 > e9((o11 - h16) / u18) && s7("overflow"), h16 += (c21 - a25) * u18, a25 = c21;
    for (const c22 of n27) if (c22 < a25 && ++h16 > o11 && s7("overflow"), c22 === a25) {
      let o25 = h16;
      for (let n28 = t10; ; n28 += t10) {
        const s24 = n28 <= p16 ? 1 : n28 >= p16 + 26 ? 26 : n28 - p16;
        if (o25 < s24) break;
        const c23 = o25 - s24, i33 = t10 - s24;
        l17.push(r16(f7(s24 + c23 % i33, 0))), o25 = e9(c23 / i33);
      }
      l17.push(r16(f7(o25, 0))), p16 = i10(h16, u18, v10 === d19), h16 = 0, ++v10;
    }
    ++h16, ++a25;
  }
  return l17.join("");
};

// node_modules/@bonfida/spl-name-service/dist/esm/_virtual/_commonjsHelpers.mjs
var e10 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
function o12(e36) {
  return e36 && e36.__esModule && Object.prototype.hasOwnProperty.call(e36, "default") ? e36.default : e36;
}

// node_modules/@bonfida/spl-name-service/dist/esm/_virtual/ipaddr.mjs
var e11 = { exports: {} };

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/ipaddr.js/lib/ipaddr.mjs
var e12;
e12 = e11, function(t26) {
  const r35 = "(0?\\d+|0x[a-f0-9]+)", n27 = { fourOctet: new RegExp(`^${r35}\\.${r35}\\.${r35}\\.${r35}$`, "i"), threeOctet: new RegExp(`^${r35}\\.${r35}\\.${r35}$`, "i"), twoOctet: new RegExp(`^${r35}\\.${r35}$`, "i"), longValue: new RegExp(`^${r35}$`, "i") }, i33 = new RegExp("^0[0-7]+$", "i"), o25 = new RegExp("^0x[a-f0-9]+$", "i"), s24 = "%[0-9a-z]{1,}", a25 = "(?:[0-9a-f]+::?)+", p16 = { zoneIndex: new RegExp(s24, "i"), native: new RegExp(`^(::)?(${a25})?([0-9a-f]+)?(::)?(${s24})?$`, "i"), deprecatedTransitional: new RegExp(`^(?:::)(${r35}\\.${r35}\\.${r35}\\.${r35}(${s24})?)$`, "i"), transitional: new RegExp(`^((?:${a25})|(?:::)(?:${a25})?)${r35}\\.${r35}\\.${r35}\\.${r35}(${s24})?$`, "i") };
  function u17(t27, r36) {
    if (t27.indexOf("::") !== t27.lastIndexOf("::")) return null;
    let e36, n28, i34 = 0, o26 = -1, s25 = (t27.match(p16.zoneIndex) || [])[0];
    for (s25 && (s25 = s25.substring(1), t27 = t27.replace(/%.+$/, "")); (o26 = t27.indexOf(":", o26 + 1)) >= 0; ) i34++;
    if ("::" === t27.substr(0, 2) && i34--, "::" === t27.substr(-2, 2) && i34--, i34 > r36) return null;
    for (n28 = r36 - i34, e36 = ":"; n28--; ) e36 += "0:";
    return ":" === (t27 = t27.replace("::", e36))[0] && (t27 = t27.slice(1)), ":" === t27[t27.length - 1] && (t27 = t27.slice(0, -1)), { parts: r36 = function() {
      const r37 = t27.split(":"), e37 = [];
      for (let t28 = 0; t28 < r37.length; t28++) e37.push(parseInt(r37[t28], 16));
      return e37;
    }(), zoneId: s25 };
  }
  function d19(t27, r36, e36, n28) {
    if (t27.length !== r36.length) throw new Error("ipaddr: cannot match CIDR for objects with different lengths");
    let i34, o26 = 0;
    for (; n28 > 0; ) {
      if (i34 = e36 - n28, i34 < 0 && (i34 = 0), t27[o26] >> i34 != r36[o26] >> i34) return false;
      n28 -= e36, o26 += 1;
    }
    return true;
  }
  function h16(t27) {
    if (o25.test(t27)) return parseInt(t27, 16);
    if ("0" === t27[0] && !isNaN(parseInt(t27[1], 10))) {
      if (i33.test(t27)) return parseInt(t27, 8);
      throw new Error(`ipaddr: cannot parse ${t27} as octal`);
    }
    return parseInt(t27, 10);
  }
  function c21(t27, r36) {
    for (; t27.length < r36; ) t27 = `0${t27}`;
    return t27;
  }
  const f20 = {};
  f20.IPv4 = function() {
    function t27(t28) {
      if (4 !== t28.length) throw new Error("ipaddr: ipv4 octet count should be 4");
      let r36, e36;
      for (r36 = 0; r36 < t28.length; r36++) if (e36 = t28[r36], !(0 <= e36 && e36 <= 255)) throw new Error("ipaddr: ipv4 octet should fit in 8 bits");
      this.octets = t28;
    }
    return t27.prototype.SpecialRanges = { unspecified: [[new t27([0, 0, 0, 0]), 8]], broadcast: [[new t27([255, 255, 255, 255]), 32]], multicast: [[new t27([224, 0, 0, 0]), 4]], linkLocal: [[new t27([169, 254, 0, 0]), 16]], loopback: [[new t27([127, 0, 0, 0]), 8]], carrierGradeNat: [[new t27([100, 64, 0, 0]), 10]], private: [[new t27([10, 0, 0, 0]), 8], [new t27([172, 16, 0, 0]), 12], [new t27([192, 168, 0, 0]), 16]], reserved: [[new t27([192, 0, 0, 0]), 24], [new t27([192, 0, 2, 0]), 24], [new t27([192, 88, 99, 0]), 24], [new t27([198, 18, 0, 0]), 15], [new t27([198, 51, 100, 0]), 24], [new t27([203, 0, 113, 0]), 24], [new t27([240, 0, 0, 0]), 4]], as112: [[new t27([192, 175, 48, 0]), 24], [new t27([192, 31, 196, 0]), 24]], amt: [[new t27([192, 52, 193, 0]), 24]] }, t27.prototype.kind = function() {
      return "ipv4";
    }, t27.prototype.match = function(t28, r36) {
      let e36;
      if (void 0 === r36 && (e36 = t28, t28 = e36[0], r36 = e36[1]), "ipv4" !== t28.kind()) throw new Error("ipaddr: cannot match ipv4 address with non-ipv4 one");
      return d19(this.octets, t28.octets, 8, r36);
    }, t27.prototype.prefixLengthFromSubnetMask = function() {
      let t28 = 0, r36 = false;
      const e36 = { 0: 8, 128: 7, 192: 6, 224: 5, 240: 4, 248: 3, 252: 2, 254: 1, 255: 0 };
      let n28, i34, o26;
      for (n28 = 3; n28 >= 0; n28 -= 1) {
        if (i34 = this.octets[n28], !(i34 in e36)) return null;
        if (o26 = e36[i34], r36 && 0 !== o26) return null;
        8 !== o26 && (r36 = true), t28 += o26;
      }
      return 32 - t28;
    }, t27.prototype.range = function() {
      return f20.subnetMatch(this, this.SpecialRanges);
    }, t27.prototype.toByteArray = function() {
      return this.octets.slice(0);
    }, t27.prototype.toIPv4MappedAddress = function() {
      return f20.IPv6.parse(`::ffff:${this.toString()}`);
    }, t27.prototype.toNormalizedString = function() {
      return this.toString();
    }, t27.prototype.toString = function() {
      return this.octets.join(".");
    }, t27;
  }(), f20.IPv4.broadcastAddressFromCIDR = function(t27) {
    try {
      const r36 = this.parseCIDR(t27), e36 = r36[0].toByteArray(), n28 = this.subnetMaskFromPrefixLength(r36[1]).toByteArray(), i34 = [];
      let o26 = 0;
      for (; o26 < 4; ) i34.push(parseInt(e36[o26], 10) | 255 ^ parseInt(n28[o26], 10)), o26++;
      return new this(i34);
    } catch (t28) {
      throw new Error("ipaddr: the address does not have IPv4 CIDR format");
    }
  }, f20.IPv4.isIPv4 = function(t27) {
    return null !== this.parser(t27);
  }, f20.IPv4.isValid = function(t27) {
    try {
      return new this(this.parser(t27)), true;
    } catch (t28) {
      return false;
    }
  }, f20.IPv4.isValidCIDR = function(t27) {
    try {
      return this.parseCIDR(t27), true;
    } catch (t28) {
      return false;
    }
  }, f20.IPv4.isValidFourPartDecimal = function(t27) {
    return !(!f20.IPv4.isValid(t27) || !t27.match(/^(0|[1-9]\d*)(\.(0|[1-9]\d*)){3}$/));
  }, f20.IPv4.networkAddressFromCIDR = function(t27) {
    let r36, e36, n28, i34, o26;
    try {
      for (r36 = this.parseCIDR(t27), n28 = r36[0].toByteArray(), o26 = this.subnetMaskFromPrefixLength(r36[1]).toByteArray(), i34 = [], e36 = 0; e36 < 4; ) i34.push(parseInt(n28[e36], 10) & parseInt(o26[e36], 10)), e36++;
      return new this(i34);
    } catch (t28) {
      throw new Error("ipaddr: the address does not have IPv4 CIDR format");
    }
  }, f20.IPv4.parse = function(t27) {
    const r36 = this.parser(t27);
    if (null === r36) throw new Error("ipaddr: string is not formatted like an IPv4 Address");
    return new this(r36);
  }, f20.IPv4.parseCIDR = function(t27) {
    let r36;
    if (r36 = t27.match(/^(.+)\/(\d+)$/)) {
      const t28 = parseInt(r36[2]);
      if (t28 >= 0 && t28 <= 32) {
        const e36 = [this.parse(r36[1]), t28];
        return Object.defineProperty(e36, "toString", { value: function() {
          return this.join("/");
        } }), e36;
      }
    }
    throw new Error("ipaddr: string is not formatted like an IPv4 CIDR range");
  }, f20.IPv4.parser = function(t27) {
    let r36, e36, i34;
    if (r36 = t27.match(n27.fourOctet)) return function() {
      const t28 = r36.slice(1, 6), n28 = [];
      for (let r37 = 0; r37 < t28.length; r37++) e36 = t28[r37], n28.push(h16(e36));
      return n28;
    }();
    if (r36 = t27.match(n27.longValue)) {
      if (i34 = h16(r36[1]), i34 > 4294967295 || i34 < 0) throw new Error("ipaddr: address outside defined range");
      return function() {
        const t28 = [];
        let r37;
        for (r37 = 0; r37 <= 24; r37 += 8) t28.push(i34 >> r37 & 255);
        return t28;
      }().reverse();
    }
    return (r36 = t27.match(n27.twoOctet)) ? function() {
      const t28 = r36.slice(1, 4), e37 = [];
      if (i34 = h16(t28[1]), i34 > 16777215 || i34 < 0) throw new Error("ipaddr: address outside defined range");
      return e37.push(h16(t28[0])), e37.push(i34 >> 16 & 255), e37.push(i34 >> 8 & 255), e37.push(255 & i34), e37;
    }() : (r36 = t27.match(n27.threeOctet)) ? function() {
      const t28 = r36.slice(1, 5), e37 = [];
      if (i34 = h16(t28[2]), i34 > 65535 || i34 < 0) throw new Error("ipaddr: address outside defined range");
      return e37.push(h16(t28[0])), e37.push(h16(t28[1])), e37.push(i34 >> 8 & 255), e37.push(255 & i34), e37;
    }() : null;
  }, f20.IPv4.subnetMaskFromPrefixLength = function(t27) {
    if ((t27 = parseInt(t27)) < 0 || t27 > 32) throw new Error("ipaddr: invalid IPv4 prefix length");
    const r36 = [0, 0, 0, 0];
    let e36 = 0;
    const n28 = Math.floor(t27 / 8);
    for (; e36 < n28; ) r36[e36] = 255, e36++;
    return n28 < 4 && (r36[n28] = Math.pow(2, t27 % 8) - 1 << 8 - t27 % 8), new this(r36);
  }, f20.IPv6 = function() {
    function t27(t28, r36) {
      let e36, n28;
      if (16 === t28.length) for (this.parts = [], e36 = 0; e36 <= 14; e36 += 2) this.parts.push(t28[e36] << 8 | t28[e36 + 1]);
      else {
        if (8 !== t28.length) throw new Error("ipaddr: ipv6 part count should be 8 or 16");
        this.parts = t28;
      }
      for (e36 = 0; e36 < this.parts.length; e36++) if (n28 = this.parts[e36], !(0 <= n28 && n28 <= 65535)) throw new Error("ipaddr: ipv6 part should fit in 16 bits");
      r36 && (this.zoneId = r36);
    }
    return t27.prototype.SpecialRanges = { unspecified: [new t27([0, 0, 0, 0, 0, 0, 0, 0]), 128], linkLocal: [new t27([65152, 0, 0, 0, 0, 0, 0, 0]), 10], multicast: [new t27([65280, 0, 0, 0, 0, 0, 0, 0]), 8], loopback: [new t27([0, 0, 0, 0, 0, 0, 0, 1]), 128], uniqueLocal: [new t27([64512, 0, 0, 0, 0, 0, 0, 0]), 7], ipv4Mapped: [new t27([0, 0, 0, 0, 0, 65535, 0, 0]), 96], discard: [new t27([256, 0, 0, 0, 0, 0, 0, 0]), 64], rfc6145: [new t27([0, 0, 0, 0, 65535, 0, 0, 0]), 96], rfc6052: [new t27([100, 65435, 0, 0, 0, 0, 0, 0]), 96], "6to4": [new t27([8194, 0, 0, 0, 0, 0, 0, 0]), 16], teredo: [new t27([8193, 0, 0, 0, 0, 0, 0, 0]), 32], benchmarking: [new t27([8193, 2, 0, 0, 0, 0, 0, 0]), 48], amt: [new t27([8193, 3, 0, 0, 0, 0, 0, 0]), 32], as112v6: [[new t27([8193, 4, 274, 0, 0, 0, 0, 0]), 48], [new t27([9760, 79, 32768, 0, 0, 0, 0, 0]), 48]], deprecated: [new t27([8193, 16, 0, 0, 0, 0, 0, 0]), 28], orchid2: [new t27([8193, 32, 0, 0, 0, 0, 0, 0]), 28], droneRemoteIdProtocolEntityTags: [new t27([8193, 48, 0, 0, 0, 0, 0, 0]), 28], reserved: [[new t27([8193, 0, 0, 0, 0, 0, 0, 0]), 23], [new t27([8193, 3512, 0, 0, 0, 0, 0, 0]), 32]] }, t27.prototype.isIPv4MappedAddress = function() {
      return "ipv4Mapped" === this.range();
    }, t27.prototype.kind = function() {
      return "ipv6";
    }, t27.prototype.match = function(t28, r36) {
      let e36;
      if (void 0 === r36 && (e36 = t28, t28 = e36[0], r36 = e36[1]), "ipv6" !== t28.kind()) throw new Error("ipaddr: cannot match ipv6 address with non-ipv6 one");
      return d19(this.parts, t28.parts, 16, r36);
    }, t27.prototype.prefixLengthFromSubnetMask = function() {
      let t28 = 0, r36 = false;
      const e36 = { 0: 16, 32768: 15, 49152: 14, 57344: 13, 61440: 12, 63488: 11, 64512: 10, 65024: 9, 65280: 8, 65408: 7, 65472: 6, 65504: 5, 65520: 4, 65528: 3, 65532: 2, 65534: 1, 65535: 0 };
      let n28, i34;
      for (let o26 = 7; o26 >= 0; o26 -= 1) {
        if (n28 = this.parts[o26], !(n28 in e36)) return null;
        if (i34 = e36[n28], r36 && 0 !== i34) return null;
        16 !== i34 && (r36 = true), t28 += i34;
      }
      return 128 - t28;
    }, t27.prototype.range = function() {
      return f20.subnetMatch(this, this.SpecialRanges);
    }, t27.prototype.toByteArray = function() {
      let t28;
      const r36 = [], e36 = this.parts;
      for (let n28 = 0; n28 < e36.length; n28++) t28 = e36[n28], r36.push(t28 >> 8), r36.push(255 & t28);
      return r36;
    }, t27.prototype.toFixedLengthString = function() {
      const t28 = (function() {
        const t29 = [];
        for (let r37 = 0; r37 < this.parts.length; r37++) t29.push(c21(this.parts[r37].toString(16), 4));
        return t29;
      }).call(this).join(":");
      let r36 = "";
      return this.zoneId && (r36 = `%${this.zoneId}`), t28 + r36;
    }, t27.prototype.toIPv4Address = function() {
      if (!this.isIPv4MappedAddress()) throw new Error("ipaddr: trying to convert a generic ipv6 address to ipv4");
      const t28 = this.parts.slice(-2), r36 = t28[0], e36 = t28[1];
      return new f20.IPv4([r36 >> 8, 255 & r36, e36 >> 8, 255 & e36]);
    }, t27.prototype.toNormalizedString = function() {
      const t28 = (function() {
        const t29 = [];
        for (let r37 = 0; r37 < this.parts.length; r37++) t29.push(this.parts[r37].toString(16));
        return t29;
      }).call(this).join(":");
      let r36 = "";
      return this.zoneId && (r36 = `%${this.zoneId}`), t28 + r36;
    }, t27.prototype.toRFC5952String = function() {
      const t28 = /((^|:)(0(:|$)){2,})/g, r36 = this.toNormalizedString();
      let e36, n28 = 0, i34 = -1;
      for (; e36 = t28.exec(r36); ) e36[0].length > i34 && (n28 = e36.index, i34 = e36[0].length);
      return i34 < 0 ? r36 : `${r36.substring(0, n28)}::${r36.substring(n28 + i34)}`;
    }, t27.prototype.toString = function() {
      return this.toRFC5952String();
    }, t27;
  }(), f20.IPv6.broadcastAddressFromCIDR = function(t27) {
    try {
      const r36 = this.parseCIDR(t27), e36 = r36[0].toByteArray(), n28 = this.subnetMaskFromPrefixLength(r36[1]).toByteArray(), i34 = [];
      let o26 = 0;
      for (; o26 < 16; ) i34.push(parseInt(e36[o26], 10) | 255 ^ parseInt(n28[o26], 10)), o26++;
      return new this(i34);
    } catch (t28) {
      throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${t28})`);
    }
  }, f20.IPv6.isIPv6 = function(t27) {
    return null !== this.parser(t27);
  }, f20.IPv6.isValid = function(t27) {
    if ("string" == typeof t27 && -1 === t27.indexOf(":")) return false;
    try {
      const r36 = this.parser(t27);
      return new this(r36.parts, r36.zoneId), true;
    } catch (t28) {
      return false;
    }
  }, f20.IPv6.isValidCIDR = function(t27) {
    if ("string" == typeof t27 && -1 === t27.indexOf(":")) return false;
    try {
      return this.parseCIDR(t27), true;
    } catch (t28) {
      return false;
    }
  }, f20.IPv6.networkAddressFromCIDR = function(t27) {
    let r36, e36, n28, i34, o26;
    try {
      for (r36 = this.parseCIDR(t27), n28 = r36[0].toByteArray(), o26 = this.subnetMaskFromPrefixLength(r36[1]).toByteArray(), i34 = [], e36 = 0; e36 < 16; ) i34.push(parseInt(n28[e36], 10) & parseInt(o26[e36], 10)), e36++;
      return new this(i34);
    } catch (t28) {
      throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${t28})`);
    }
  }, f20.IPv6.parse = function(t27) {
    const r36 = this.parser(t27);
    if (null === r36.parts) throw new Error("ipaddr: string is not formatted like an IPv6 Address");
    return new this(r36.parts, r36.zoneId);
  }, f20.IPv6.parseCIDR = function(t27) {
    let r36, e36, n28;
    if ((e36 = t27.match(/^(.+)\/(\d+)$/)) && (r36 = parseInt(e36[2]), r36 >= 0 && r36 <= 128)) return n28 = [this.parse(e36[1]), r36], Object.defineProperty(n28, "toString", { value: function() {
      return this.join("/");
    } }), n28;
    throw new Error("ipaddr: string is not formatted like an IPv6 CIDR range");
  }, f20.IPv6.parser = function(t27) {
    let r36, e36, n28, i34, o26, s25;
    if (n28 = t27.match(p16.deprecatedTransitional)) return this.parser(`::ffff:${n28[1]}`);
    if (p16.native.test(t27)) return u17(t27, 8);
    if ((n28 = t27.match(p16.transitional)) && (s25 = n28[6] || "", r36 = n28[1], n28[1].endsWith("::") || (r36 = r36.slice(0, -1)), r36 = u17(r36 + s25, 6), r36.parts)) {
      for (o26 = [parseInt(n28[2]), parseInt(n28[3]), parseInt(n28[4]), parseInt(n28[5])], e36 = 0; e36 < o26.length; e36++) if (i34 = o26[e36], !(0 <= i34 && i34 <= 255)) return null;
      return r36.parts.push(o26[0] << 8 | o26[1]), r36.parts.push(o26[2] << 8 | o26[3]), { parts: r36.parts, zoneId: r36.zoneId };
    }
    return null;
  }, f20.IPv6.subnetMaskFromPrefixLength = function(t27) {
    if ((t27 = parseInt(t27)) < 0 || t27 > 128) throw new Error("ipaddr: invalid IPv6 prefix length");
    const r36 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    let e36 = 0;
    const n28 = Math.floor(t27 / 8);
    for (; e36 < n28; ) r36[e36] = 255, e36++;
    return n28 < 16 && (r36[n28] = Math.pow(2, t27 % 8) - 1 << 8 - t27 % 8), new this(r36);
  }, f20.fromByteArray = function(t27) {
    const r36 = t27.length;
    if (4 === r36) return new f20.IPv4(t27);
    if (16 === r36) return new f20.IPv6(t27);
    throw new Error("ipaddr: the binary input is neither an IPv6 nor IPv4 address");
  }, f20.isValid = function(t27) {
    return f20.IPv6.isValid(t27) || f20.IPv4.isValid(t27);
  }, f20.isValidCIDR = function(t27) {
    return f20.IPv6.isValidCIDR(t27) || f20.IPv4.isValidCIDR(t27);
  }, f20.parse = function(t27) {
    if (f20.IPv6.isValid(t27)) return f20.IPv6.parse(t27);
    if (f20.IPv4.isValid(t27)) return f20.IPv4.parse(t27);
    throw new Error("ipaddr: the address has neither IPv6 nor IPv4 format");
  }, f20.parseCIDR = function(t27) {
    try {
      return f20.IPv6.parseCIDR(t27);
    } catch (r36) {
      try {
        return f20.IPv4.parseCIDR(t27);
      } catch (t28) {
        throw new Error("ipaddr: the address has neither IPv6 nor IPv4 CIDR format");
      }
    }
  }, f20.process = function(t27) {
    const r36 = this.parse(t27);
    return "ipv6" === r36.kind() && r36.isIPv4MappedAddress() ? r36.toIPv4Address() : r36;
  }, f20.subnetMatch = function(t27, r36, e36) {
    let n28, i34, o26, s25;
    for (i34 in null == e36 && (e36 = "unicast"), r36) if (Object.prototype.hasOwnProperty.call(r36, i34)) {
      for (o26 = r36[i34], !o26[0] || o26[0] instanceof Array || (o26 = [o26]), n28 = 0; n28 < o26.length; n28++) if (s25 = o26[n28], t27.kind() === s25[0].kind() && t27.match.apply(t27, s25)) return i34;
    }
    return e36;
  }, e12.exports ? e12.exports = f20 : t26.ipaddr = f20;
}(e10);
var n11 = e11.exports;

// node_modules/@bonfida/spl-name-service/dist/esm/record/serializeRecord.mjs
var p6 = (p16, h16) => {
  if (!c4.get(h16)) return h16 !== A2.CNAME && h16 !== A2.TXT || (p16 = u7(p16)), r.Buffer.from(p16, "utf-8");
  if (h16 === A2.SOL) throw new l2("Use `serializeSolRecord` for SOL record");
  if (h16 === A2.ETH || h16 === A2.BSC) return o9("0x" === p16.slice(0, 2), new p4("The record content must start with `0x`")), r.Buffer.from(p16.slice(2), "hex");
  if (h16 === A2.Injective) {
    const e36 = h6.decodeToBytes(p16);
    return o9("inj" === e36.prefix, new v3("The record content must start with `inj")), o9(20 === e36.bytes.length, new v3("The record data must be 20 bytes long")), r.Buffer.from(e36.bytes);
  }
  if (h16 === A2.A) {
    const e36 = n11.parse(p16).toByteArray();
    return o9(4 === e36.length, new I2("The record content must be 4 bytes long")), r.Buffer.from(e36);
  }
  if (h16 === A2.AAAA) {
    const e36 = n11.parse(p16).toByteArray();
    return o9(16 === e36.length, new x3("The record content must be 16 bytes logn")), r.Buffer.from(e36);
  }
  if (h16 === A2.Background) return new PublicKey(p16).toBuffer();
  throw new N("The provided record data is invalid");
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/createRecordInstruction.mjs
var j3 = async (j7, u17, d19, l17, h16, w11) => {
  o9(d19 !== A2.SOL, new l2("SOL record is not supported for this instruction"));
  const { pubkey: y10, hashed: g12, parent: E6 } = c8(`${d19}.${u17}`, i5.V1), L5 = p6(l17, d19).length, R7 = await j7.getMinimumBalanceForRentExemption(L5 + s5.HEADER_LEN);
  return t6(w, SystemProgram.programId, y10, h16, w11, g12, new u6(R7), new n8(L5), void 0, E6, h16);
};

// node_modules/@bonfida/spl-name-service/dist/esm/record_v2/const.mjs
var T2 = /* @__PURE__ */ new Map([[A2.Url, new PublicKey("ExXjtfdQe8JacoqP9Z535WzQKjF4CzW1TTRKRgpxvya3")], [A2.CNAME, new PublicKey("ExXjtfdQe8JacoqP9Z535WzQKjF4CzW1TTRKRgpxvya3")]]);
var r17 = /* @__PURE__ */ new Set([A2.ETH, A2.Injective, A2.BSC, A2.BASE]);
var S4 = /* @__PURE__ */ new Set([A2.ETH, A2.BSC, A2.BASE]);
var a7 = /* @__PURE__ */ new Set([A2.IPFS, A2.ARWV, A2.LTC, A2.DOGE, A2.Email, A2.Url, A2.Discord, A2.Github, A2.Reddit, A2.Twitter, A2.Telegram, A2.Pic, A2.SHDW, A2.POINT, A2.Backpack, A2.TXT, A2.CNAME, A2.BTC, A2.IPNS]);
var n12 = /* @__PURE__ */ new Set([A2.ETH, A2.Injective, A2.SOL]);

// node_modules/@bonfida/spl-name-service/dist/esm/record_v2/serializeRecordV2Content.mjs
var l7 = (l17, h16) => {
  if (a7.has(h16)) return h16 !== A2.CNAME && h16 !== A2.TXT || (l17 = u7(l17)), r.Buffer.from(l17, "utf-8");
  if (h16 === A2.SOL) return new PublicKey(l17).toBuffer();
  if (S4.has(h16)) return o9("0x" === l17.slice(0, 2), new p4("The record content must start with `0x`")), r.Buffer.from(l17.slice(2), "hex");
  if (h16 === A2.Injective) {
    const e36 = h6.decodeToBytes(l17);
    return o9("inj" === e36.prefix, new v3("The record content must start with `inj")), o9(20 === e36.bytes.length, new v3("The record data must be 20 bytes long")), r.Buffer.from(e36.bytes);
  }
  if (h16 === A2.A) {
    const e36 = n11.parse(l17).toByteArray();
    return o9(4 === e36.length, new I2("The record content must be 4 bytes long")), r.Buffer.from(e36);
  }
  if (h16 === A2.AAAA) {
    const e36 = n11.parse(l17).toByteArray();
    return o9(16 === e36.length, new x3("The record content must be 16 bytes long")), r.Buffer.from(e36);
  }
  throw new N("The record content is malformed");
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/createRecordV2Instruction.mjs
var i11 = (i33, d19, c21, a25, p16) => {
  let { pubkey: f20, parent: u17, isSub: l17 } = c8(`${d19}.${i33}`, i5.V2);
  if (l17 && (u17 = c8(i33).pubkey), !u17) throw new T("Parent could not be found");
  return W(p16, f20, u17, a25, w, "".concat(d19), l7(c21, d19), I);
};

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/createReverseInstruction.mjs
var r18 = class _r {
  constructor(e36) {
    this.tag = 12, this.name = e36.name;
  }
  serialize() {
    return i3(_r.schema, this);
  }
  getInstruction(i33, r35, t26, u17, a25, n27, p16, b10, o25, m30) {
    const l17 = r.Buffer.from(this.serialize());
    let h16 = [];
    return h16.push({ pubkey: r35, isSigner: false, isWritable: false }), h16.push({ pubkey: t26, isSigner: false, isWritable: false }), h16.push({ pubkey: u17, isSigner: false, isWritable: true }), h16.push({ pubkey: a25, isSigner: false, isWritable: false }), h16.push({ pubkey: n27, isSigner: false, isWritable: false }), h16.push({ pubkey: p16, isSigner: true, isWritable: true }), h16.push({ pubkey: b10, isSigner: false, isWritable: false }), o25 && h16.push({ pubkey: o25, isSigner: false, isWritable: true }), m30 && h16.push({ pubkey: m30, isSigner: true, isWritable: true }), new TransactionInstruction({ keys: h16, programId: i33, data: l17 });
  }
};
r18.schema = { struct: { tag: "u8", name: "string" } };

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/createReverseName.mjs
var i12 = async (i33, p16, u17, f20, j7) => {
  let g12 = s4(i33.toBase58()), l17 = t5(g12, p2, f20);
  return [new r18({ name: p16 }).getInstruction(o2, w, r7, l17, SystemProgram.programId, p2, u17, SYSVAR_RENT_PUBKEY, f20, j7)];
};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/hashes/esm/_u64.mjs
var r19 = BigInt(2 ** 32 - 1);
var t11 = BigInt(32);
function n13(n27, o25 = false) {
  return o25 ? { h: Number(n27 & r19), l: Number(n27 >> t11 & r19) } : { h: 0 | Number(n27 >> t11 & r19), l: 0 | Number(n27 & r19) };
}
function o13(r35, t26 = false) {
  let o25 = new Uint32Array(r35.length), e36 = new Uint32Array(r35.length);
  for (let d19 = 0; d19 < r35.length; d19++) {
    const { h: l17, l: a25 } = n13(r35[d19], t26);
    [o25[d19], e36[d19]] = [l17, a25];
  }
  return [o25, e36];
}
var e13 = (r35, n27) => BigInt(r35 >>> 0) << t11 | BigInt(n27 >>> 0);
var d5 = (r35, t26, n27) => r35 >>> n27;
var l8 = (r35, t26, n27) => r35 << 32 - n27 | t26 >>> n27;
var a8 = (r35, t26, n27) => r35 >>> n27 | t26 << 32 - n27;
var i13 = (r35, t26, n27) => r35 << 32 - n27 | t26 >>> n27;
var u9 = (r35, t26, n27) => r35 << 64 - n27 | t26 >>> n27 - 32;
var B4 = (r35, t26, n27) => r35 >>> n27 - 32 | t26 << 64 - n27;
var g3 = (r35, t26) => t26;
var h7 = (r35, t26) => r35;
var s8 = (r35, t26, n27) => r35 << n27 | t26 >>> 32 - n27;
var H = (r35, t26, n27) => t26 << n27 | r35 >>> 32 - n27;
var L2 = (r35, t26, n27) => t26 << n27 - 32 | r35 >>> 64 - n27;
var c11 = (r35, t26, n27) => r35 << n27 - 32 | t26 >>> 64 - n27;
function f8(r35, t26, n27, o25) {
  const e36 = (t26 >>> 0) + (o25 >>> 0);
  return { h: r35 + n27 + (e36 / 2 ** 32 | 0) | 0, l: 0 | e36 };
}
var S5 = (r35, t26, n27) => (r35 >>> 0) + (t26 >>> 0) + (n27 >>> 0);
var m6 = (r35, t26, n27, o25) => t26 + n27 + o25 + (r35 / 2 ** 32 | 0) | 0;
var b4 = (r35, t26, n27, o25) => (r35 >>> 0) + (t26 >>> 0) + (n27 >>> 0) + (o25 >>> 0);
var I3 = (r35, t26, n27, o25, e36) => t26 + n27 + o25 + e36 + (r35 / 2 ** 32 | 0) | 0;
var N2 = (r35, t26, n27, o25, e36) => (r35 >>> 0) + (t26 >>> 0) + (n27 >>> 0) + (o25 >>> 0) + (e36 >>> 0);
var p7 = (r35, t26, n27, o25, e36, d19) => t26 + n27 + o25 + e36 + d19 + (r35 / 2 ** 32 | 0) | 0;
var w5 = { fromBig: n13, split: o13, toBig: e13, shrSH: d5, shrSL: l8, rotrSH: a8, rotrSL: i13, rotrBH: u9, rotrBL: B4, rotr32H: g3, rotr32L: h7, rotlSH: s8, rotlSL: H, rotlBH: L2, rotlBL: c11, add: f8, add3L: S5, add3H: m6, add4L: b4, add4H: I3, add5H: p7, add5L: N2 };

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/hashes/esm/sha512.mjs
var [e14, a9] = (() => w5.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((h16) => BigInt(h16))))();
var d6 = new Uint32Array(80);
var b5 = new Uint32Array(80);
var f9 = class extends r11 {
  constructor() {
    super(128, 64, 16, false), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
  }
  get() {
    const { Ah: h16, Al: t26, Bh: c21, Bl: e36, Ch: a25, Cl: d19, Dh: b10, Dl: f20, Eh: x9, El: s24, Fh: r35, Fl: i33, Gh: l17, Gl: o25, Hh: H3, Hl: n27 } = this;
    return [h16, t26, c21, e36, a25, d19, b10, f20, x9, s24, r35, i33, l17, o25, H3, n27];
  }
  set(h16, t26, c21, e36, a25, d19, b10, f20, x9, s24, r35, i33, l17, o25, H3, n27) {
    this.Ah = 0 | h16, this.Al = 0 | t26, this.Bh = 0 | c21, this.Bl = 0 | e36, this.Ch = 0 | a25, this.Cl = 0 | d19, this.Dh = 0 | b10, this.Dl = 0 | f20, this.Eh = 0 | x9, this.El = 0 | s24, this.Fh = 0 | r35, this.Fl = 0 | i33, this.Gh = 0 | l17, this.Gl = 0 | o25, this.Hh = 0 | H3, this.Hl = 0 | n27;
  }
  process(h16, c21) {
    for (let t26 = 0; t26 < 16; t26++, c21 += 4) d6[t26] = h16.getUint32(c21), b5[t26] = h16.getUint32(c21 += 4);
    for (let h17 = 16; h17 < 80; h17++) {
      const c22 = 0 | d6[h17 - 15], e36 = 0 | b5[h17 - 15], a25 = w5.rotrSH(c22, e36, 1) ^ w5.rotrSH(c22, e36, 8) ^ w5.shrSH(c22, e36, 7), f21 = w5.rotrSL(c22, e36, 1) ^ w5.rotrSL(c22, e36, 8) ^ w5.shrSL(c22, e36, 7), x10 = 0 | d6[h17 - 2], s25 = 0 | b5[h17 - 2], r36 = w5.rotrSH(x10, s25, 19) ^ w5.rotrBH(x10, s25, 61) ^ w5.shrSH(x10, s25, 6), i34 = w5.rotrSL(x10, s25, 19) ^ w5.rotrBL(x10, s25, 61) ^ w5.shrSL(x10, s25, 6), l18 = w5.add4L(f21, i34, b5[h17 - 7], b5[h17 - 16]), o26 = w5.add4H(l18, a25, r36, d6[h17 - 7], d6[h17 - 16]);
      d6[h17] = 0 | o26, b5[h17] = 0 | l18;
    }
    let { Ah: f20, Al: x9, Bh: s24, Bl: r35, Ch: i33, Cl: l17, Dh: o25, Dl: H3, Eh: n27, El: B9, Fh: S7, Fl: L5, Gh: A7, Gl: m30, Hh: C5, Hl: D3 } = this;
    for (let h17 = 0; h17 < 80; h17++) {
      const c22 = w5.rotrSH(n27, B9, 14) ^ w5.rotrSH(n27, B9, 18) ^ w5.rotrBH(n27, B9, 41), E6 = w5.rotrSL(n27, B9, 14) ^ w5.rotrSL(n27, B9, 18) ^ w5.rotrBL(n27, B9, 41), F3 = n27 & S7 ^ ~n27 & A7, G4 = B9 & L5 ^ ~B9 & m30, p16 = w5.add5L(D3, E6, G4, a9[h17], b5[h17]), u17 = w5.add5H(p16, C5, c22, F3, e14[h17], d6[h17]), g12 = 0 | p16, U6 = w5.rotrSH(f20, x9, 28) ^ w5.rotrBH(f20, x9, 34) ^ w5.rotrBH(f20, x9, 39), j7 = w5.rotrSL(f20, x9, 28) ^ w5.rotrBL(f20, x9, 34) ^ w5.rotrBL(f20, x9, 39), w11 = f20 & s24 ^ f20 & i33 ^ s24 & i33, y10 = x9 & r35 ^ x9 & l17 ^ r35 & l17;
      C5 = 0 | A7, D3 = 0 | m30, A7 = 0 | S7, m30 = 0 | L5, S7 = 0 | n27, L5 = 0 | B9, { h: n27, l: B9 } = w5.add(0 | o25, 0 | H3, 0 | u17, 0 | g12), o25 = 0 | i33, H3 = 0 | l17, i33 = 0 | s24, l17 = 0 | r35, s24 = 0 | f20, r35 = 0 | x9;
      const _4 = w5.add3L(g12, j7, y10);
      f20 = w5.add3H(_4, u17, U6, w11), x9 = 0 | _4;
    }
    ({ h: f20, l: x9 } = w5.add(0 | this.Ah, 0 | this.Al, 0 | f20, 0 | x9)), { h: s24, l: r35 } = w5.add(0 | this.Bh, 0 | this.Bl, 0 | s24, 0 | r35), { h: i33, l: l17 } = w5.add(0 | this.Ch, 0 | this.Cl, 0 | i33, 0 | l17), { h: o25, l: H3 } = w5.add(0 | this.Dh, 0 | this.Dl, 0 | o25, 0 | H3), { h: n27, l: B9 } = w5.add(0 | this.Eh, 0 | this.El, 0 | n27, 0 | B9), { h: S7, l: L5 } = w5.add(0 | this.Fh, 0 | this.Fl, 0 | S7, 0 | L5), { h: A7, l: m30 } = w5.add(0 | this.Gh, 0 | this.Gl, 0 | A7, 0 | m30), { h: C5, l: D3 } = w5.add(0 | this.Hh, 0 | this.Hl, 0 | C5, 0 | D3), this.set(f20, x9, s24, r35, i33, l17, o25, H3, n27, B9, S7, L5, A7, m30, C5, D3);
  }
  roundClean() {
    d6.fill(0), b5.fill(0);
  }
  destroy() {
    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
};
var x4 = s3(() => new f9());

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/curves/esm/abstract/utils.mjs
BigInt(0);
var t12 = BigInt(1);
var r20 = BigInt(2);
function n14(t26) {
  return t26 instanceof Uint8Array || null != t26 && "object" == typeof t26 && "Uint8Array" === t26.constructor.name;
}
function e15(t26) {
  if (!n14(t26)) throw new Error("Uint8Array expected");
}
var o14 = Array.from({ length: 256 }, (t26, r35) => r35.toString(16).padStart(2, "0"));
function i14(t26) {
  e15(t26);
  let r35 = "";
  for (let n27 = 0; n27 < t26.length; n27++) r35 += o14[t26[n27]];
  return r35;
}
function f10(t26) {
  if ("string" != typeof t26) throw new Error("hex string expected, got " + typeof t26);
  return BigInt("" === t26 ? "0" : `0x${t26}`);
}
var c12 = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
function s9(t26) {
  return t26 >= c12._0 && t26 <= c12._9 ? t26 - c12._0 : t26 >= c12._A && t26 <= c12._F ? t26 - (c12._A - 10) : t26 >= c12._a && t26 <= c12._f ? t26 - (c12._a - 10) : void 0;
}
function a10(t26) {
  if ("string" != typeof t26) throw new Error("hex string expected, got " + typeof t26);
  const r35 = t26.length, n27 = r35 / 2;
  if (r35 % 2) throw new Error("padded hex string expected, got unpadded hex of length " + r35);
  const e36 = new Uint8Array(n27);
  for (let r36 = 0, o25 = 0; r36 < n27; r36++, o25 += 2) {
    const n28 = s9(t26.charCodeAt(o25)), i33 = s9(t26.charCodeAt(o25 + 1));
    if (void 0 === n28 || void 0 === i33) {
      const r37 = t26[o25] + t26[o25 + 1];
      throw new Error('hex string expected, got non-hex character "' + r37 + '" at index ' + o25);
    }
    e36[r36] = 16 * n28 + i33;
  }
  return e36;
}
function g4(t26) {
  return f10(i14(t26));
}
function u10(t26) {
  return e15(t26), f10(i14(Uint8Array.from(t26).reverse()));
}
function h8(t26, r35) {
  return a10(t26.toString(16).padStart(2 * r35, "0"));
}
function p8(t26, r35) {
  return h8(t26, r35).reverse();
}
function y6(t26, r35, e36) {
  let o25;
  if ("string" == typeof r35) try {
    o25 = a10(r35);
  } catch (n27) {
    throw new Error(`${t26} must be valid hex string, got "${r35}". Cause: ${n27}`);
  }
  else {
    if (!n14(r35)) throw new Error(`${t26} must be hex string or Uint8Array`);
    o25 = Uint8Array.from(r35);
  }
  const i33 = o25.length;
  if ("number" == typeof e36 && i33 !== e36) throw new Error(`${t26} expected ${e36} bytes, got ${i33}`);
  return o25;
}
function d7(...t26) {
  let r35 = 0;
  for (let n28 = 0; n28 < t26.length; n28++) {
    const o25 = t26[n28];
    e15(o25), r35 += o25.length;
  }
  const n27 = new Uint8Array(r35);
  for (let r36 = 0, e36 = 0; r36 < t26.length; r36++) {
    const o25 = t26[r36];
    n27.set(o25, e36), e36 += o25.length;
  }
  return n27;
}
var l9 = (n27) => (r20 << BigInt(n27 - 1)) - t12;
var w6 = { bigint: (t26) => "bigint" == typeof t26, function: (t26) => "function" == typeof t26, boolean: (t26) => "boolean" == typeof t26, string: (t26) => "string" == typeof t26, stringOrUint8Array: (t26) => "string" == typeof t26 || n14(t26), isSafeInteger: (t26) => Number.isSafeInteger(t26), array: (t26) => Array.isArray(t26), field: (t26, r35) => r35.Fp.isValid(t26), hash: (t26) => "function" == typeof t26 && Number.isSafeInteger(t26.outputLen) };
function x5(t26, r35, n27 = {}) {
  const e36 = (r36, n28, e37) => {
    const o25 = w6[n28];
    if ("function" != typeof o25) throw new Error(`Invalid validator "${n28}", expected function`);
    const i33 = t26[r36];
    if (!(e37 && void 0 === i33 || o25(i33, t26))) throw new Error(`Invalid param ${String(r36)}=${i33} (${typeof i33}), expected ${n28}`);
  };
  for (const [t27, n28] of Object.entries(r35)) e36(t27, n28, false);
  for (const [t27, r36] of Object.entries(n27)) e36(t27, r36, true);
  return t26;
}

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/curves/esm/abstract/modular.mjs
var u11 = BigInt(0);
var s10 = BigInt(1);
var f11 = BigInt(2);
var c13 = BigInt(3);
var l10 = BigInt(4);
var d8 = BigInt(5);
var w7 = BigInt(8);
function g5(t26, r35) {
  const n27 = t26 % r35;
  return n27 >= u11 ? n27 : r35 + n27;
}
function E4(t26, r35, n27) {
  if (n27 <= u11 || r35 < u11) throw new Error("Expected power/modulo > 0");
  if (n27 === s10) return u11;
  let e36 = s10;
  for (; r35 > u11; ) r35 & s10 && (e36 = e36 * t26 % n27), t26 = t26 * t26 % n27, r35 >>= s10;
  return e36;
}
function q(t26, r35, n27) {
  let e36 = t26;
  for (; r35-- > u11; ) e36 *= e36, e36 %= n27;
  return e36;
}
function h9(t26, r35) {
  if (t26 === u11 || r35 <= u11) throw new Error(`invert: expected positive integers, got n=${t26} mod=${r35}`);
  let n27 = g5(t26, r35), e36 = r35, o25 = u11, i33 = s10;
  for (; n27 !== u11; ) {
    const t27 = e36 % n27, r36 = o25 - i33 * (e36 / n27);
    e36 = n27, n27 = t27, o25 = i33, i33 = r36;
  }
  if (e36 !== s10) throw new Error("invert: does not exist");
  return g5(o25, r35);
}
function p9(t26) {
  const r35 = (t26 - s10) / f11;
  let n27, e36, o25;
  for (n27 = t26 - s10, e36 = 0; n27 % f11 === u11; n27 /= f11, e36++) ;
  for (o25 = f11; o25 < t26 && E4(o25, r35, t26) !== t26 - s10; o25++) ;
  if (1 === e36) {
    const r36 = (t26 + s10) / l10;
    return function(t27, n28) {
      const e37 = t27.pow(n28, r36);
      if (!t27.eql(t27.sqr(e37), n28)) throw new Error("Cannot find square root");
      return e37;
    };
  }
  const i33 = (n27 + s10) / f11;
  return function(t27, u17) {
    if (t27.pow(u17, r35) === t27.neg(t27.ONE)) throw new Error("Cannot find square root");
    let f20 = e36, c21 = t27.pow(t27.mul(t27.ONE, o25), n27), l17 = t27.pow(u17, i33), d19 = t27.pow(u17, n27);
    for (; !t27.eql(d19, t27.ONE); ) {
      if (t27.eql(d19, t27.ZERO)) return t27.ZERO;
      let r36 = 1;
      for (let n29 = t27.sqr(d19); r36 < f20 && !t27.eql(n29, t27.ONE); r36++) n29 = t27.sqr(n29);
      const n28 = t27.pow(c21, s10 << BigInt(f20 - r36 - 1));
      c21 = t27.sqr(n28), l17 = t27.mul(l17, n28), d19 = t27.mul(d19, c21), f20 = r36;
    }
    return l17;
  };
}
function m7(t26) {
  if (t26 % l10 === c13) {
    const r35 = (t26 + s10) / l10;
    return function(t27, n27) {
      const e36 = t27.pow(n27, r35);
      if (!t27.eql(t27.sqr(e36), n27)) throw new Error("Cannot find square root");
      return e36;
    };
  }
  if (t26 % w7 === d8) {
    const r35 = (t26 - d8) / w7;
    return function(t27, n27) {
      const e36 = t27.mul(n27, f11), o25 = t27.pow(e36, r35), i33 = t27.mul(n27, o25), u17 = t27.mul(t27.mul(i33, f11), o25), s24 = t27.mul(i33, t27.sub(u17, t27.ONE));
      if (!t27.eql(t27.sqr(s24), n27)) throw new Error("Cannot find square root");
      return s24;
    };
  }
  return p9(t26);
}
BigInt(9), BigInt(16);
var a11 = (t26, r35) => (g5(t26, r35) & s10) === s10;
var B5 = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
function O3(t26) {
  const r35 = B5.reduce((t27, r36) => (t27[r36] = "function", t27), { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" });
  return x5(t26, r35);
}
function N3(t26, r35, n27) {
  if (n27 < u11) throw new Error("Expected power > 0");
  if (n27 === u11) return t26.ONE;
  if (n27 === s10) return r35;
  let e36 = t26.ONE, o25 = r35;
  for (; n27 > u11; ) n27 & s10 && (e36 = t26.mul(e36, o25)), o25 = t26.sqr(o25), n27 >>= s10;
  return e36;
}
function I4(t26, r35) {
  const n27 = new Array(r35.length), e36 = r35.reduce((r36, e37, o26) => t26.is0(e37) ? r36 : (n27[o26] = r36, t26.mul(r36, e37)), t26.ONE), o25 = t26.inv(e36);
  return r35.reduceRight((r36, e37, o26) => t26.is0(e37) ? r36 : (n27[o26] = t26.mul(r36, n27[o26]), t26.mul(r36, e37)), o25), n27;
}
function v4(t26, r35) {
  const n27 = void 0 !== r35 ? r35 : t26.toString(2).length;
  return { nBitLength: n27, nByteLength: Math.ceil(n27 / 8) };
}
function b6(i33, f20, c21 = false, l17 = {}) {
  if (i33 <= u11) throw new Error(`Expected Field ORDER > 0, got ${i33}`);
  const { nBitLength: d19, nByteLength: w11 } = v4(i33, f20);
  if (w11 > 2048) throw new Error("Field lengths over 2048 bytes are not supported");
  const E6 = m7(i33), q2 = Object.freeze({ ORDER: i33, BITS: d19, BYTES: w11, MASK: l9(d19), ZERO: u11, ONE: s10, create: (t26) => g5(t26, i33), isValid: (t26) => {
    if ("bigint" != typeof t26) throw new Error("Invalid field element: expected bigint, got " + typeof t26);
    return u11 <= t26 && t26 < i33;
  }, is0: (t26) => t26 === u11, isOdd: (t26) => (t26 & s10) === s10, neg: (t26) => g5(-t26, i33), eql: (t26, r35) => t26 === r35, sqr: (t26) => g5(t26 * t26, i33), add: (t26, r35) => g5(t26 + r35, i33), sub: (t26, r35) => g5(t26 - r35, i33), mul: (t26, r35) => g5(t26 * r35, i33), pow: (t26, r35) => N3(q2, t26, r35), div: (t26, r35) => g5(t26 * h9(r35, i33), i33), sqrN: (t26) => t26 * t26, addN: (t26, r35) => t26 + r35, subN: (t26, r35) => t26 - r35, mulN: (t26, r35) => t26 * r35, inv: (t26) => h9(t26, i33), sqrt: l17.sqrt || ((t26) => E6(q2, t26)), invertBatch: (t26) => I4(q2, t26), cmov: (t26, r35, n27) => n27 ? r35 : t26, toBytes: (t26) => c21 ? p8(t26, w11) : h8(t26, w11), fromBytes: (t26) => {
    if (t26.length !== w11) throw new Error(`Fp.fromBytes: expected ${w11}, got ${t26.length}`);
    return c21 ? u10(t26) : g4(t26);
  } });
  return Object.freeze(q2);
}
function R4(t26, r35) {
  if (!t26.isOdd) throw new Error("Field doesn't have isOdd");
  const n27 = t26.sqrt(r35);
  return t26.isOdd(n27) ? t26.neg(n27) : n27;
}

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/curves/esm/abstract/curve.mjs
var i15 = BigInt(0);
var o15 = BigInt(1);
function r21(t26, e36) {
  const n27 = (t27, e37) => {
    const n28 = e37.negate();
    return t27 ? n28 : e37;
  }, r35 = (t27) => ({ windows: Math.ceil(e36 / t27) + 1, windowSize: 2 ** (t27 - 1) });
  return { constTimeNegate: n27, unsafeLadder(e37, n28) {
    let r36 = t26.ZERO, s24 = e37;
    for (; n28 > i15; ) n28 & o15 && (r36 = r36.add(s24)), s24 = s24.double(), n28 >>= o15;
    return r36;
  }, precomputeWindow(t27, e37) {
    const { windows: n28, windowSize: i33 } = r35(e37), o25 = [];
    let s24 = t27, d19 = s24;
    for (let t28 = 0; t28 < n28; t28++) {
      d19 = s24, o25.push(d19);
      for (let t29 = 1; t29 < i33; t29++) d19 = d19.add(s24), o25.push(d19);
      s24 = d19.double();
    }
    return o25;
  }, wNAF(e37, i33, s24) {
    const { windows: d19, windowSize: u17 } = r35(e37);
    let c21 = t26.ZERO, w11 = t26.BASE;
    const a25 = BigInt(2 ** e37 - 1), f20 = 2 ** e37, l17 = BigInt(e37);
    for (let t27 = 0; t27 < d19; t27++) {
      const e38 = t27 * u17;
      let r36 = Number(s24 & a25);
      s24 >>= l17, r36 > u17 && (r36 -= f20, s24 += o15);
      const d20 = e38, g12 = e38 + Math.abs(r36) - 1, p16 = t27 % 2 != 0, h16 = r36 < 0;
      0 === r36 ? w11 = w11.add(n27(p16, i33[d20])) : c21 = c21.add(n27(h16, i33[g12]));
    }
    return { p: c21, f: w11 };
  }, wNAFCached(t27, e37, n28, i33) {
    const o25 = t27._WINDOW_SIZE || 1;
    let r36 = e37.get(t27);
    return r36 || (r36 = this.precomputeWindow(t27, o25), 1 !== o25 && e37.set(t27, i33(r36))), this.wNAF(o25, r36, n28);
  } };
}
function s11(i33) {
  return O3(i33.Fp), x5(i33, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...v4(i33.n, i33.nBitLength), ...i33, p: i33.Fp.ORDER });
}

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/curves/esm/abstract/edwards.mjs
var c14 = BigInt(0);
var f12 = BigInt(1);
var l11 = BigInt(2);
var h10 = BigInt(8);
var d9 = { zip215: true };
function y7(y10) {
  const w11 = function(t26) {
    const n27 = s11(t26);
    return x5(t26, { hash: "function", a: "bigint", d: "bigint", randomBytes: "function" }, { adjustScalarBytes: "function", domain: "function", uvRatio: "function", mapToCurve: "function" }), Object.freeze({ ...n27 });
  }(y10), { Fp: p16, n: m30, prehash: x9, hash: E6, randomBytes: B9, nByteLength: g12, h: v10 } = w11, z5 = l11 << BigInt(8 * g12) - f12, A7 = p16.create, R7 = w11.uvRatio || ((t26, e36) => {
    try {
      return { isValid: true, value: p16.sqrt(t26 * p16.inv(e36)) };
    } catch (t27) {
      return { isValid: false, value: c14 };
    }
  }), S7 = w11.adjustScalarBytes || ((t26) => t26), b10 = w11.domain || ((t26, e36, n27) => {
    if (e36.length || n27) throw new Error("Contexts/pre-hash are not supported");
    return t26;
  }), q2 = (t26) => "bigint" == typeof t26 && c14 < t26, O5 = (t26, e36) => q2(t26) && q2(e36) && t26 < e36, Z2 = (t26) => t26 === c14 || O5(t26, z5);
  function I9(t26, e36) {
    if (O5(t26, e36)) return t26;
    throw new Error(`Expected valid scalar < ${e36}, got ${typeof t26} ${t26}`);
  }
  function P5(t26) {
    return t26 === c14 ? t26 : I9(t26, m30);
  }
  const H3 = /* @__PURE__ */ new Map();
  function T4(t26) {
    if (!(t26 instanceof U6)) throw new Error("ExtendedPoint expected");
  }
  class U6 {
    constructor(t26, e36, n27, r35) {
      if (this.ex = t26, this.ey = e36, this.ez = n27, this.et = r35, !Z2(t26)) throw new Error("x required");
      if (!Z2(e36)) throw new Error("y required");
      if (!Z2(n27)) throw new Error("z required");
      if (!Z2(r35)) throw new Error("t required");
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    static fromAffine(t26) {
      if (t26 instanceof U6) throw new Error("extended point not allowed");
      const { x: e36, y: n27 } = t26 || {};
      if (!Z2(e36) || !Z2(n27)) throw new Error("invalid affine point");
      return new U6(e36, n27, f12, A7(e36 * n27));
    }
    static normalizeZ(t26) {
      const e36 = p16.invertBatch(t26.map((t27) => t27.ez));
      return t26.map((t27, n27) => t27.toAffine(e36[n27])).map(U6.fromAffine);
    }
    _setWindowSize(t26) {
      this._WINDOW_SIZE = t26, H3.delete(this);
    }
    assertValidity() {
      const { a: t26, d: e36 } = w11;
      if (this.is0()) throw new Error("bad point: ZERO");
      const { ex: n27, ey: r35, ez: i33, et: o25 } = this, s24 = A7(n27 * n27), a25 = A7(r35 * r35), u17 = A7(i33 * i33), c21 = A7(u17 * u17), f20 = A7(s24 * t26);
      if (A7(u17 * A7(f20 + a25)) !== A7(c21 + A7(e36 * A7(s24 * a25)))) throw new Error("bad point: equation left != right (1)");
      if (A7(n27 * r35) !== A7(i33 * o25)) throw new Error("bad point: equation left != right (2)");
    }
    equals(t26) {
      T4(t26);
      const { ex: e36, ey: n27, ez: r35 } = this, { ex: i33, ey: o25, ez: s24 } = t26, a25 = A7(e36 * s24), u17 = A7(i33 * r35), c21 = A7(n27 * s24), f20 = A7(o25 * r35);
      return a25 === u17 && c21 === f20;
    }
    is0() {
      return this.equals(U6.ZERO);
    }
    negate() {
      return new U6(A7(-this.ex), this.ey, this.ez, A7(-this.et));
    }
    double() {
      const { a: t26 } = w11, { ex: e36, ey: n27, ez: r35 } = this, i33 = A7(e36 * e36), o25 = A7(n27 * n27), s24 = A7(l11 * A7(r35 * r35)), a25 = A7(t26 * i33), u17 = e36 + n27, c21 = A7(A7(u17 * u17) - i33 - o25), f20 = a25 + o25, h16 = f20 - s24, d19 = a25 - o25, y11 = A7(c21 * h16), p17 = A7(f20 * d19), m31 = A7(c21 * d19), x10 = A7(h16 * f20);
      return new U6(y11, p17, x10, m31);
    }
    add(t26) {
      T4(t26);
      const { a: e36, d: n27 } = w11, { ex: r35, ey: i33, ez: o25, et: s24 } = this, { ex: a25, ey: u17, ez: f20, et: h16 } = t26;
      if (e36 === BigInt(-1)) {
        const t27 = A7((i33 - r35) * (u17 + a25)), e37 = A7((i33 + r35) * (u17 - a25)), n28 = A7(e37 - t27);
        if (n28 === c14) return this.double();
        const d20 = A7(o25 * l11 * h16), y12 = A7(s24 * l11 * f20), w12 = y12 + d20, p18 = e37 + t27, m32 = y12 - d20, x11 = A7(w12 * n28), E8 = A7(p18 * m32), B11 = A7(w12 * m32), g14 = A7(n28 * p18);
        return new U6(x11, E8, g14, B11);
      }
      const d19 = A7(r35 * a25), y11 = A7(i33 * u17), p17 = A7(s24 * n27 * h16), m31 = A7(o25 * f20), x10 = A7((r35 + i33) * (a25 + u17) - d19 - y11), E7 = m31 - p17, B10 = m31 + p17, g13 = A7(y11 - e36 * d19), v11 = A7(x10 * E7), z6 = A7(B10 * g13), R8 = A7(x10 * g13), S8 = A7(E7 * B10);
      return new U6(v11, z6, S8, R8);
    }
    subtract(t26) {
      return this.add(t26.negate());
    }
    wNAF(t26) {
      return F3.wNAFCached(this, H3, t26, U6.normalizeZ);
    }
    multiply(t26) {
      const { p: e36, f: n27 } = this.wNAF(I9(t26, m30));
      return U6.normalizeZ([e36, n27])[0];
    }
    multiplyUnsafe(t26) {
      let e36 = P5(t26);
      return e36 === c14 ? C5 : this.equals(C5) || e36 === f12 ? this : this.equals(j7) ? this.wNAF(e36).p : F3.unsafeLadder(this, e36);
    }
    isSmallOrder() {
      return this.multiplyUnsafe(v10).is0();
    }
    isTorsionFree() {
      return F3.unsafeLadder(this, m30).is0();
    }
    toAffine(t26) {
      const { ex: e36, ey: n27, ez: r35 } = this, i33 = this.is0();
      null == t26 && (t26 = i33 ? h10 : p16.inv(r35));
      const o25 = A7(e36 * t26), s24 = A7(n27 * t26), a25 = A7(r35 * t26);
      if (i33) return { x: c14, y: f12 };
      if (a25 !== f12) throw new Error("invZ was invalid");
      return { x: o25, y: s24 };
    }
    clearCofactor() {
      const { h: t26 } = w11;
      return t26 === f12 ? this : this.multiplyUnsafe(t26);
    }
    static fromHex(t26, e36 = false) {
      const { d: i33, a: o25 } = w11, s24 = p16.BYTES, a25 = (t26 = y6("pointHex", t26, s24)).slice(), u17 = t26[s24 - 1];
      a25[s24 - 1] = -129 & u17;
      const l17 = u10(a25);
      l17 === c14 || I9(l17, e36 ? z5 : p16.ORDER);
      const h16 = A7(l17 * l17), d19 = A7(h16 - f12), y11 = A7(i33 * h16 - o25);
      let { isValid: m31, value: x10 } = R7(d19, y11);
      if (!m31) throw new Error("Point.fromHex: invalid y coordinate");
      const E7 = (x10 & f12) === f12, B10 = 0 != (128 & u17);
      if (!e36 && x10 === c14 && B10) throw new Error("Point.fromHex: x=0 and x_0=1");
      return B10 !== E7 && (x10 = A7(-x10)), U6.fromAffine({ x: x10, y: l17 });
    }
    static fromPrivateKey(t26) {
      return V4(t26).point;
    }
    toRawBytes() {
      const { x: t26, y: e36 } = this.toAffine(), n27 = p8(e36, p16.BYTES);
      return n27[n27.length - 1] |= t26 & f12 ? 128 : 0, n27;
    }
    toHex() {
      return i14(this.toRawBytes());
    }
  }
  U6.BASE = new U6(w11.Gx, w11.Gy, f12, A7(w11.Gx * w11.Gy)), U6.ZERO = new U6(c14, f12, f12, c14);
  const { BASE: j7, ZERO: C5 } = U6, F3 = r21(U6, 8 * g12);
  function _4(e36) {
    return g5(e36, m30);
  }
  function N6(t26) {
    return _4(u10(t26));
  }
  function V4(t26) {
    const e36 = g12;
    t26 = y6("private key", t26, e36);
    const r35 = y6("hashed private key", E6(t26), 2 * e36), i33 = S7(r35.slice(0, e36)), o25 = r35.slice(e36, 2 * e36), s24 = N6(i33), a25 = j7.multiply(s24), u17 = a25.toRawBytes();
    return { head: i33, prefix: o25, scalar: s24, point: a25, pointBytes: u17 };
  }
  function W2(t26 = new Uint8Array(), ...e36) {
    const r35 = d7(...e36);
    return N6(E6(b10(r35, y6("context", t26), !!x9)));
  }
  const Y = d9;
  j7._setWindowSize(8);
  return { CURVE: w11, getPublicKey: function(t26) {
    return V4(t26).pointBytes;
  }, sign: function(t26, e36, r35 = {}) {
    t26 = y6("message", t26), x9 && (t26 = x9(t26));
    const { prefix: o25, scalar: a25, pointBytes: u17 } = V4(e36), c21 = W2(r35.context, o25, t26), f20 = j7.multiply(c21).toRawBytes(), l17 = _4(c21 + W2(r35.context, f20, u17, t26) * a25);
    P5(l17);
    const h16 = d7(f20, p8(l17, p16.BYTES));
    return y6("result", h16, 2 * g12);
  }, verify: function(t26, e36, i33, o25 = Y) {
    const { context: s24, zip215: a25 } = o25, u17 = p16.BYTES;
    t26 = y6("signature", t26, 2 * u17), e36 = y6("message", e36), x9 && (e36 = x9(e36));
    const c21 = u10(t26.slice(u17, 2 * u17));
    let f20, l17, h16;
    try {
      f20 = U6.fromHex(i33, a25), l17 = U6.fromHex(t26.slice(0, u17), a25), h16 = j7.multiplyUnsafe(c21);
    } catch (t27) {
      return false;
    }
    if (!a25 && f20.isSmallOrder()) return false;
    const d19 = W2(s24, l17.toRawBytes(), f20.toRawBytes(), e36);
    return l17.add(f20.multiplyUnsafe(d19)).subtract(h16).clearCofactor().equals(U6.ZERO);
  }, ExtendedPoint: U6, utils: { getExtendedPublicKey: V4, randomPrivateKey: () => B9(p16.BYTES), precompute: (t26 = 8, e36 = U6.BASE) => (e36._setWindowSize(t26), e36.multiply(BigInt(3)), e36) } };
}

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@noble/curves/esm/ed25519.mjs
var o16 = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
var r22 = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
BigInt(0);
var a12 = BigInt(1);
var m8 = BigInt(2);
var e16 = BigInt(5);
var c15 = BigInt(10);
var p10 = BigInt(20);
var u12 = BigInt(40);
var d10 = BigInt(80);
var h11 = b6(o16, void 0, true);
var l12 = y7({ a: BigInt(-1), d: BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"), Fp: h11, n: BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"), h: BigInt(8), Gx: BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"), Gy: BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"), hash: x4, randomBytes: c6, adjustScalarBytes: function(f20) {
  return f20[0] &= 248, f20[31] &= 127, f20[31] |= 64, f20;
}, uvRatio: function(f20, t26) {
  const n27 = o16, i33 = g5(t26 * t26 * t26, n27), g12 = function(f21) {
    const t27 = o16, n28 = f21 * f21 % t27 * f21 % t27, i34 = q(n28, m8, t27) * n28 % t27, g13 = q(i34, a12, t27) * f21 % t27, B9 = q(g13, e16, t27) * g13 % t27, s24 = q(B9, c15, t27) * B9 % t27, r35 = q(s24, p10, t27) * s24 % t27, h17 = q(r35, u12, t27) * r35 % t27, l18 = q(h17, d10, t27) * h17 % t27, _5 = q(l18, d10, t27) * h17 % t27, j8 = q(_5, c15, t27) * B9 % t27;
    return { pow_p_5_8: q(j8, m8, t27) * f21 % t27, b2: n28 };
  }(f20 * g5(i33 * i33 * t26, n27)).pow_p_5_8;
  let h16 = g5(f20 * i33 * g12, n27);
  const l17 = g5(t26 * h16 * h16, n27), _4 = h16, j7 = g5(h16 * r22, n27), R7 = l17 === f20, w11 = l17 === g5(-f20, n27), b10 = l17 === g5(-f20 * r22, n27);
  return R7 && (h16 = _4), (w11 || b10) && (h16 = j7), a11(h16, n27) && (h16 = g5(-h16, n27)), { isValid: R7 || w11, value: h16 };
} });
var _2 = (h11.ORDER + BigInt(3)) / BigInt(8);
h11.pow(m8, _2), h11.sqrt(h11.neg(h11.ONE)), h11.ORDER, BigInt(5), BigInt(8), BigInt(486662), R4(h11, h11.neg(BigInt(486664))), BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"), BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"), BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"), BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952"), BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");

// node_modules/@bonfida/spl-name-service/dist/esm/record/checkSolRecord.mjs
var o17 = (o25, s24, m30) => l12.verify(s24, o25, m30.toBytes());

// node_modules/@bonfida/spl-name-service/dist/esm/record/serializeSolRecord.mjs
var f13 = (f20, m30, n27, i33) => {
  const c21 = r.Buffer.concat([f20.toBuffer(), m30.toBuffer()]), s24 = new TextEncoder().encode(c21.toString("hex")), u17 = o17(s24, i33, n27);
  return o9(u17, new R3("The SOL signature is invalid")), r.Buffer.concat([f20.toBuffer(), i33]);
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/createSolRecordInstruction.mjs
var c16 = async (c21, f20, j7, d19, l17, u17) => {
  const { pubkey: y10, hashed: g12, parent: w11 } = c8(`${A2.SOL}.${f20}`, i5.V1), E6 = f13(j7, y10, d19, l17).length, h16 = await c21.getMinimumBalanceForRentExemption(E6 + s5.HEADER_LEN);
  return t6(w, SystemProgram.programId, y10, d19, u17, g12, new u6(h16), new n8(E6), void 0, w11, d19);
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/createSubdomain.mjs
var i16 = async (i33, n27, s24, c21 = 2e3, p16) => {
  const f20 = [], u17 = n27.split(".")[0];
  if (!u17) throw new m3("The subdomain name is malformed");
  const { parent: l17, pubkey: y10 } = c8(n27), j7 = await i33.getMinimumBalanceForRentExemption(c21 + s5.HEADER_LEN), w11 = await a5(i33, "\0".concat(u17), c21, p16 || s24, s24, j7, void 0, l17);
  f20.push(w11);
  const d19 = r12(n27, true), g12 = await i33.getAccountInfo(d19);
  if (!(null == g12 ? void 0 : g12.data)) {
    const t26 = await i12(y10, "\0".concat(u17), p16 || s24, l17, s24);
    f20.push(...t26);
  }
  return f20;
};

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/deleteInstruction.mjs
function i17(i33, o25, s24, t26) {
  const n27 = [r.Buffer.from(Int8Array.from([3]))], a25 = r.Buffer.concat(n27);
  return new TransactionInstruction({ keys: [{ pubkey: o25, isSigner: false, isWritable: true }, { pubkey: t26, isSigner: true, isWritable: false }, { pubkey: s24, isSigner: false, isWritable: true }], programId: i33, data: a25 });
}

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/deleteNameRegistry.mjs
async function s12(s24, n27, i33, c21, a25) {
  const u17 = s4(n27), f20 = t5(u17, c21, a25);
  let p16;
  p16 = c21 || (await s5.retrieve(s24, f20)).registry.owner;
  return i17(w, f20, i33, p16);
}

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/deleteRecordV2.mjs
var n15 = (n27, i33, d19, p16) => {
  let { pubkey: f20, parent: u17, isSub: a25 } = c8(`${i33}.${n27}`, i5.V2);
  if (a25 && (u17 = c8(n27).pubkey), !u17) throw new T("Parent could not be found");
  return j(p16, u17, d19, f20, w, I);
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/ethValidateRecordV2Content.mjs
var i18 = (i33, a25, d19, p16, u17, f20) => {
  let { pubkey: c21, parent: l17, isSub: S7 } = c8(`${a25}.${i33}`, i5.V2);
  if (S7 && (l17 = c8(i33).pubkey), !l17) throw new T("Parent could not be found");
  return z2(p16, c21, l17, d19, w, B2.Ethereum, u17, f20, I);
};

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/createInstructionV3.mjs
var r23 = class _r {
  constructor(e36) {
    this.tag = 13, this.name = e36.name, this.space = e36.space, this.referrerIdxOpt = e36.referrerIdxOpt;
  }
  serialize() {
    return i3(_r.schema, this);
  }
  getInstruction(i33, r35, t26, p16, u17, a25, b10, n27, h16, l17, o25, g12, m30, k4, y10, S7, W2) {
    const d19 = r.Buffer.from(this.serialize());
    let c21 = [];
    return c21.push({ pubkey: r35, isSigner: false, isWritable: false }), c21.push({ pubkey: t26, isSigner: false, isWritable: false }), c21.push({ pubkey: p16, isSigner: false, isWritable: true }), c21.push({ pubkey: u17, isSigner: false, isWritable: true }), c21.push({ pubkey: a25, isSigner: false, isWritable: false }), c21.push({ pubkey: b10, isSigner: false, isWritable: false }), c21.push({ pubkey: n27, isSigner: true, isWritable: true }), c21.push({ pubkey: h16, isSigner: false, isWritable: true }), c21.push({ pubkey: l17, isSigner: false, isWritable: false }), c21.push({ pubkey: o25, isSigner: false, isWritable: false }), c21.push({ pubkey: g12, isSigner: false, isWritable: false }), c21.push({ pubkey: m30, isSigner: false, isWritable: true }), c21.push({ pubkey: k4, isSigner: false, isWritable: false }), c21.push({ pubkey: y10, isSigner: false, isWritable: false }), c21.push({ pubkey: S7, isSigner: false, isWritable: false }), W2 && c21.push({ pubkey: W2, isSigner: false, isWritable: true }), new TransactionInstruction({ keys: c21, programId: i33, data: d19 });
  }
};
r23.schema = { struct: { tag: "u8", name: "string", space: "u32", referrerIdxOpt: { option: "u16" } } };

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@solana/spl-token/lib/esm/state/mint.mjs
var import_buffer_layout6 = __toESM(require_Layout(), 1);

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@solana/spl-token/lib/esm/constants.mjs
var e17 = new PublicKey("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA");
new PublicKey("TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb");
var o18 = new PublicKey("ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL");
new PublicKey("So11111111111111111111111111111111111111112"), new PublicKey("9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP");

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@solana/spl-token/lib/esm/errors.mjs
var r24 = class extends Error {
  constructor(r35) {
    super(r35);
  }
};
var s13 = class extends r24 {
  constructor() {
    super(...arguments), this.name = "TokenAccountNotFoundError";
  }
};
var e18 = class extends r24 {
  constructor() {
    super(...arguments), this.name = "TokenInvalidAccountOwnerError";
  }
};
var n16 = class extends r24 {
  constructor() {
    super(...arguments), this.name = "TokenInvalidAccountSizeError";
  }
};
var o19 = class extends r24 {
  constructor() {
    super(...arguments), this.name = "TokenInvalidMintError";
  }
};
var t13 = class extends r24 {
  constructor() {
    super(...arguments), this.name = "TokenOwnerOffCurveError";
  }
};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@solana/spl-token/lib/esm/extensions/accountType.mjs
var i19;
!function(i33) {
  i33[i33.Uninitialized = 0] = "Uninitialized", i33[i33.Mint = 1] = "Mint", i33[i33.Account = 2] = "Account";
}(i19 || (i19 = {}));
var n17 = 1;

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@solana/spl-token/lib/esm/state/multisig.mjs
var import_buffer_layout5 = __toESM(require_Layout(), 1);
var e19 = (0, import_buffer_layout5.struct)([(0, import_buffer_layout5.u8)("m"), (0, import_buffer_layout5.u8)("n"), bool("isInitialized"), publicKey("signer1"), publicKey("signer2"), publicKey("signer3"), publicKey("signer4"), publicKey("signer5"), publicKey("signer6"), publicKey("signer7"), publicKey("signer8"), publicKey("signer9"), publicKey("signer10"), publicKey("signer11")]);
var g6 = e19.span;

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@solana/spl-token/lib/esm/state/mint.mjs
var j4 = (0, import_buffer_layout6.struct)([(0, import_buffer_layout6.u32)("mintAuthorityOption"), publicKey("mintAuthority"), u64("supply"), (0, import_buffer_layout6.u8)("decimals"), bool("isInitialized"), (0, import_buffer_layout6.u32)("freezeAuthorityOption"), publicKey("freezeAuthority")]);
var z3 = j4.span;
async function g7(t26, i33, o25, r35 = e17) {
  return x6(i33, await t26.getAccountInfo(i33, o25), r35);
}
function x6(t26, i33, o25 = e17) {
  if (!i33) throw new s13();
  if (!i33.owner.equals(o25)) throw new e18();
  if (i33.data.length < z3) throw new n16();
  const r35 = j4.decode(i33.data.slice(0, z3));
  let e36 = r.Buffer.alloc(0);
  if (i33.data.length > z3) {
    if (i33.data.length <= r14) throw new n16();
    if (i33.data.length === g6) throw new n16();
    if (i33.data[r14] != i19.Mint) throw new o19();
    e36 = i33.data.slice(r14 + n17);
  }
  return { address: t26, mintAuthority: r35.mintAuthorityOption ? r35.mintAuthority : null, supply: r35.supply, decimals: r35.decimals, isInitialized: r35.isInitialized, freezeAuthority: r35.freezeAuthorityOption ? r35.freezeAuthority : null, tlvData: e36 };
}
function B6(t26, i33, o25 = false, r35 = e17, e36 = o18) {
  if (!o25 && !PublicKey.isOnCurve(i33.toBuffer())) throw new t13();
  const [n27] = PublicKey.findProgramAddressSync([i33.toBuffer(), r35.toBuffer(), t26.toBuffer()], e36);
  return n27;
}

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.mjs
function n18(n27, o25, a25, b10, p16 = e17, m30 = o18) {
  return function(t26, n28, o26, a26, b11, p17 = e17, m31 = o18) {
    const u17 = [{ pubkey: t26, isSigner: true, isWritable: true }, { pubkey: n28, isSigner: false, isWritable: true }, { pubkey: o26, isSigner: false, isWritable: false }, { pubkey: a26, isSigner: false, isWritable: false }, { pubkey: SystemProgram.programId, isSigner: false, isWritable: false }, { pubkey: p17, isSigner: false, isWritable: false }];
    return new TransactionInstruction({ keys: u17, programId: m31, data: b11 });
  }(n27, o25, a25, b10, r.Buffer.from([1]), p16, m30);
}

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/registerDomainName.mjs
var I5 = async (I9, b10, k4, v10, A7, x9 = z, B9) => {
  if (b10.includes(".") || b10.trim().toLowerCase() !== b10) throw new m3("The domain name is malformed");
  const S7 = s4(b10), T4 = t5(S7, void 0, r7), _4 = s4(T4.toBase58()), N6 = t5(_4, p2), [P5] = PublicKey.findProgramAddressSync([T4.toBuffer()], o2), q2 = B.findIndex((o25) => null == B9 ? void 0 : B9.equals(o25));
  let C5;
  const H3 = [];
  if (-1 !== q2 && B9) {
    C5 = B6(x9, B9, true);
    const o25 = await I9.getAccountInfo(C5);
    if (!(null == o25 ? void 0 : o25.data)) {
      const o26 = n18(v10, C5, B9, x9);
      H3.push(o26);
    }
  }
  const K = B6(x9, P, true), L5 = y2.get(x9.toBase58());
  if (!L5) throw new y4("The Pyth account for the provided mint was not found");
  const O5 = new r23({ name: b10, space: k4, referrerIdxOpt: -1 != q2 ? q2 : null }).getInstruction(o2, w, r7, T4, N6, SystemProgram.programId, p2, v10, A7, C, new PublicKey(L5.product), new PublicKey(L5.price), K, e17, SYSVAR_RENT_PUBKEY, P5, C5);
  return H3.push(O5), H3;
};

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/createSplitV2Instruction.mjs
var r26 = class _r {
  constructor(e36) {
    this.tag = 20, this.name = e36.name, this.space = e36.space, this.referrerIdxOpt = e36.referrerIdxOpt;
  }
  serialize() {
    return i3(_r.schema, this);
  }
  getInstruction(i33, r35, t26, p16, u17, a25, b10, n27, h16, l17, o25, g12, m30, k4, y10, S7, W2) {
    const d19 = r.Buffer.from(this.serialize());
    let c21 = [];
    return c21.push({ pubkey: r35, isSigner: false, isWritable: false }), c21.push({ pubkey: t26, isSigner: false, isWritable: false }), c21.push({ pubkey: p16, isSigner: false, isWritable: true }), c21.push({ pubkey: u17, isSigner: false, isWritable: true }), c21.push({ pubkey: a25, isSigner: false, isWritable: false }), c21.push({ pubkey: b10, isSigner: false, isWritable: false }), c21.push({ pubkey: n27, isSigner: true, isWritable: true }), c21.push({ pubkey: h16, isSigner: false, isWritable: false }), c21.push({ pubkey: l17, isSigner: true, isWritable: true }), c21.push({ pubkey: o25, isSigner: false, isWritable: true }), c21.push({ pubkey: g12, isSigner: false, isWritable: false }), c21.push({ pubkey: m30, isSigner: false, isWritable: true }), c21.push({ pubkey: k4, isSigner: false, isWritable: false }), c21.push({ pubkey: y10, isSigner: false, isWritable: false }), c21.push({ pubkey: S7, isSigner: false, isWritable: false }), W2 && c21.push({ pubkey: W2, isSigner: false, isWritable: true }), new TransactionInstruction({ keys: c21, programId: i33, data: d19 });
  }
};
r26.schema = { struct: { tag: "u8", name: "string", space: "u32", referrerIdxOpt: { option: "u16" } } };

// node_modules/@bonfida/spl-name-service/dist/esm/utils/getPythFeedAccountKey.mjs
var t15 = (t26, e36) => {
  const m30 = r.Buffer.alloc(2);
  return m30.writeUint16LE(t26), PublicKey.findProgramAddressSync([m30, r.Buffer.from(e36)], R);
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/registerDomainNameV2.mjs
var I6 = async (I9, A7, b10, k4, v10, S7 = z, x9) => {
  if (A7.includes(".") || A7.trim().toLowerCase() !== A7) throw new m3("The domain name is malformed");
  const B9 = s4(A7), P5 = t5(B9, void 0, r7), T4 = s4(P5.toBase58()), _4 = t5(T4, p2), [K] = PublicKey.findProgramAddressSync([P5.toBuffer()], o2), N6 = B.findIndex((o25) => null == x9 ? void 0 : x9.equals(o25));
  let q2;
  const C5 = [];
  if (-1 !== N6 && x9) {
    q2 = B6(S7, x9, true);
    const o25 = await I9.getAccountInfo(q2);
    if (!(null == o25 ? void 0 : o25.data)) {
      const o26 = n18(k4, q2, x9, S7);
      C5.push(o26);
    }
  }
  const F3 = B6(S7, P, true), H3 = X.get(S7.toBase58());
  if (!H3) throw new y4("The Pyth account for the provided mint was not found");
  const [L5] = t15(0, H3), O5 = new r26({ name: A7, space: b10, referrerIdxOpt: -1 != N6 ? N6 : null }).getInstruction(o2, w, r7, P5, _4, SystemProgram.programId, p2, k4, k4, k4, v10, L5, F3, e17, SYSVAR_RENT_PUBKEY, K, q2);
  return C5.push(O5), C5;
};

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/registerFavoriteInstruction.mjs
var r27 = class _r {
  constructor() {
    this.tag = 6;
  }
  serialize() {
    return i3(_r.schema, this);
  }
  getInstruction(s24, r35, t26, o25, u17, a25) {
    const n27 = r.Buffer.from(this.serialize());
    let m30 = [];
    return m30.push({ pubkey: r35, isSigner: false, isWritable: false }), m30.push({ pubkey: t26, isSigner: false, isWritable: true }), m30.push({ pubkey: o25, isSigner: true, isWritable: true }), m30.push({ pubkey: u17, isSigner: false, isWritable: false }), a25 && m30.push({ pubkey: a25, isSigner: false, isWritable: false }), new TransactionInstruction({ keys: m30, programId: s24, data: n27 });
  }
};
r27.schema = { struct: { tag: "u8" } };

// node_modules/@bonfida/spl-name-service/dist/esm/utils/deserializeReverse.mjs
function e20(e36, r35 = false) {
  if (!e36) return;
  const t26 = e36.slice(0, 4).readUInt32LE(0);
  return e36.slice(4, 4 + t26).toString().replace(/^\0/, r35 ? "" : "\0");
}

// node_modules/@bonfida/spl-name-service/dist/esm/utils/getReverseKeyFromDomainKey.mjs
var e21 = (e36, r35) => {
  const s24 = s4(e36.toBase58());
  return t5(s24, E, r35);
};

// node_modules/@bonfida/spl-name-service/dist/esm/utils/reverseLookup.mjs
async function o21(o25, i33, s24) {
  const a25 = e21(i33, s24), { registry: n27 } = await s5.retrieve(o25, a25);
  if (!n27.data) throw new D("The registry data is empty");
  return e20(n27.data, !!s24);
}

// node_modules/@bonfida/spl-name-service/dist/esm/favorite-domain.mjs
var f14 = new PublicKey("85iDfUvr3HJyLM2zcq5BXSiDvUWfw6cSE1FfNBo8Ap29");
var p11 = class _p {
  constructor(e36) {
    this.tag = e36.tag, this.nameAccount = new PublicKey(e36.nameAccount);
  }
  static deserialize(t26) {
    return new _p(m(this.schema, t26));
  }
  static async retrieve(e36, t26) {
    const a25 = await e36.getAccountInfo(t26);
    if (!a25 || !a25.data) throw new o4("The favourite account does not exist");
    return this.deserialize(a25.data);
  }
  static async getKey(e36, a25) {
    return await PublicKey.findProgramAddress([r.Buffer.from("favourite_domain"), a25.toBuffer()], e36);
  }
  static getKeySync(e36, a25) {
    return PublicKey.findProgramAddressSync([r.Buffer.from("favourite_domain"), a25.toBuffer()], e36);
  }
};
p11.schema = { struct: { tag: "u8", nameAccount: { array: { type: "u8", len: 32 } } } };
var v5 = async (e36, a25) => {
  const [o25] = p11.getKeySync(f14, new PublicKey(a25)), r35 = await p11.retrieve(e36, o25), { registry: i33, nftOwner: u17 } = await s5.retrieve(e36, r35.nameAccount), l17 = u17 || i33.owner;
  let c21 = await o21(e36, r35.nameAccount, i33.parentName.equals(r7) ? void 0 : i33.parentName);
  if (!i33.parentName.equals(r7)) {
    c21 += `.${await o21(e36, i33.parentName)}`;
  }
  return { domain: r35.nameAccount, reverse: c21, stale: !a25.equals(l17) };
};
var w8 = async (e36, n27) => {
  const r35 = [], s24 = n27.map((e37) => p11.getKeySync(f14, e37)[0]), v10 = (await e36.getMultipleAccountsInfo(s24)).map((e37) => (null == e37 ? void 0 : e37.data) ? p11.deserialize(null == e37 ? void 0 : e37.data).nameAccount : PublicKey.default), w11 = await e36.getMultipleAccountsInfo(v10), g12 = [], y10 = w11.map((e37, a25) => {
    var n28;
    const r36 = new PublicKey(null !== (n28 = null == e37 ? void 0 : e37.data.slice(0, 32)) && void 0 !== n28 ? n28 : r.Buffer.alloc(32)), i33 = (null == e37 ? void 0 : e37.owner.equals(w)) && !r36.equals(r7);
    return g12.push(i33 ? e21(r36) : PublicKey.default), e21(v10[a25], i33 ? r36 : void 0);
  }), h16 = v10.map((e37, t26) => {
    const a25 = t7(e37);
    return B6(a25, n27[t26], true);
  }), [A7, j7, _4] = await Promise.all([e36.getMultipleAccountsInfo(y10), e36.getMultipleAccountsInfo(h16), e36.getMultipleAccountsInfo(g12)]);
  for (let e37 = 0; e37 < n27.length; e37++) {
    let o25 = "";
    const i33 = w11[e37], s25 = A7[e37], m30 = _4[e37], l17 = j7[e37];
    if (!i33 || !s25) {
      r35.push(void 0);
      continue;
    }
    if (m30 && m30.owner.equals(w)) {
      o25 += `.${e20(m30.data.slice(96))}`;
    }
    if (new PublicKey(null == i33 ? void 0 : i33.data.slice(32, 64)).equals(n27[e37])) {
      r35.push(e20(null == s25 ? void 0 : s25.data.slice(96), true) + o25);
      continue;
    }
    if (!l17) {
      r35.push(void 0);
      continue;
    }
    const c21 = l4.decode(l17.data);
    1 !== Number(c21.amount) ? r35.push(void 0) : r35.push(e20(null == s25 ? void 0 : s25.data.slice(96)) + o25);
  }
  return r35;
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/registerFavorite.mjs
var m9 = async (m30, i33, n27) => {
  let p16;
  const { registry: c21 } = await s5.retrieve(m30, i33);
  c21.parentName.equals(r7) || (p16 = c21.parentName);
  const [f20] = await p11.getKey(f14, n27);
  return new r27().getInstruction(f14, i33, f20, n27, SystemProgram.programId, p16);
};

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/createWithNftInstruction.mjs
var r28 = class _r {
  constructor(i33) {
    this.tag = 17, this.name = i33.name, this.space = i33.space;
  }
  serialize() {
    return i3(_r.schema, this);
  }
  getInstruction(e36, r35, u17, t26, p16, a25, b10, n27, l17, h16, g12, o25, m30, k4, y10, S7, W2) {
    const c21 = r.Buffer.from(this.serialize());
    let d19 = [];
    return d19.push({ pubkey: r35, isSigner: false, isWritable: false }), d19.push({ pubkey: u17, isSigner: false, isWritable: false }), d19.push({ pubkey: t26, isSigner: false, isWritable: true }), d19.push({ pubkey: p16, isSigner: false, isWritable: true }), d19.push({ pubkey: a25, isSigner: false, isWritable: false }), d19.push({ pubkey: b10, isSigner: false, isWritable: false }), d19.push({ pubkey: n27, isSigner: true, isWritable: true }), d19.push({ pubkey: l17, isSigner: false, isWritable: true }), d19.push({ pubkey: h16, isSigner: false, isWritable: true }), d19.push({ pubkey: g12, isSigner: false, isWritable: true }), d19.push({ pubkey: o25, isSigner: false, isWritable: true }), d19.push({ pubkey: m30, isSigner: false, isWritable: true }), d19.push({ pubkey: k4, isSigner: false, isWritable: false }), d19.push({ pubkey: y10, isSigner: false, isWritable: false }), d19.push({ pubkey: S7, isSigner: false, isWritable: false }), d19.push({ pubkey: W2, isSigner: false, isWritable: false }), new TransactionInstruction({ keys: d19, programId: e36, data: c21 });
  }
};
r28.schema = { struct: { tag: "u8", name: "string", space: "u32" } };

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/registerWithNft.mjs
var p12 = (p16, d19, u17, l17, j7, g12, I9, b10, w11) => {
  const [h16] = PublicKey.findProgramAddressSync([u17.toBuffer()], o2);
  return new r28({ space: d19, name: p16 }).getInstruction(o2, w, r7, u17, l17, SystemProgram.programId, E, j7, g12, I9, b10, w11, x, e17, SYSVAR_RENT_PUBKEY, h16, v);
};

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/transferInstruction.mjs
function s14(s24, t26, o25, u17, n27, a25, f20) {
  const p16 = [r.Buffer.from(Int8Array.from([2])), o25.toBuffer()], b10 = r.Buffer.concat(p16), m30 = [{ pubkey: t26, isSigner: false, isWritable: true }, { pubkey: f20 || u17, isSigner: true, isWritable: false }];
  return n27 && m30.push({ pubkey: n27, isSigner: true, isWritable: false }), f20 && a25 && (n27 || m30.push({ pubkey: PublicKey.default, isSigner: false, isWritable: false }), m30.push({ pubkey: a25, isSigner: false, isWritable: false })), new TransactionInstruction({ keys: m30, programId: s24, data: b10 });
}

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/transferNameOwnership.mjs
async function e22(e36, n27, i33, c21, a25, f20) {
  const u17 = s4(n27), p16 = t5(u17, c21, a25);
  let j7;
  j7 = c21 || (await s5.retrieve(e36, p16)).registry.owner;
  return s14(w, p16, i33, j7, c21, a25, f20);
}

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/transferSubdomain.mjs
var s15 = async (s24, n27, m30, a25, c21) => {
  const { pubkey: f20, isSub: p16, parent: u17 } = c8(n27);
  if (!u17 || !p16) throw new t3("The subdomain is not valid");
  if (!c21) {
    const { registry: r35 } = await s5.retrieve(s24, f20);
    c21 = r35.owner;
  }
  let w11, y10;
  a25 && (w11 = u17, y10 = (await s5.retrieve(s24, u17)).registry.owner);
  return s14(w, f20, m30, c21, void 0, w11, y10);
};

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/updateInstruction.mjs
function t16(t26, i33, f20, n27, m30) {
  const s24 = [r.Buffer.from(Int8Array.from([1])), f20.toBuffer(), new n8(n27.length).toBuffer(), n27], a25 = r.Buffer.concat(s24);
  return new TransactionInstruction({ keys: [{ pubkey: i33, isSigner: false, isWritable: true }, { pubkey: m30, isSigner: true, isWritable: false }], programId: t26, data: a25 });
}

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/updateNameRegistryData.mjs
async function n19(n27, i33, c21, a25, p16, u17) {
  const f20 = s4(i33), j7 = t5(f20, p16, u17);
  let y10;
  y10 = p16 || (await s5.retrieve(n27, j7)).registry.owner;
  return t16(w, j7, new n8(c21), a25, y10);
}

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/updateRecordInstruction.mjs
var d11 = async (d19, f20, l17, j7, h16, w11) => {
  o9(l17 !== A2.SOL, new l2("SOL record is not supported for this instruction"));
  const { pubkey: y10 } = c8(`${l17}.${f20}`, i5.V1), g12 = await d19.getAccountInfo(y10);
  o9(!!(null == g12 ? void 0 : g12.data), new g2("The record account does not exist"));
  const I9 = p6(j7, l17);
  if ((null == g12 ? void 0 : g12.data.slice(96).length) !== I9.length) return [i17(w, y10, w11, h16), await j3(d19, f20, l17, j7, h16, w11)];
  return t16(w, y10, new n8(0), I9, h16);
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/updateRecordV2Instruction.mjs
var i22 = (i33, d19, c21, p16, a25) => {
  let { pubkey: f20, parent: u17, isSub: j7 } = c8(`${d19}.${i33}`, i5.V2);
  if (j7 && (u17 = c8(i33).pubkey), !u17) throw new T("Parent could not be found");
  return E2(a25, f20, u17, p16, w, "".concat(d19), l7(c21, d19), I);
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/updateSolRecordInstruction.mjs
var p13 = async (p16, d19, f20, l17, j7, y10) => {
  const { pubkey: w11 } = c8(`${A2.SOL}.${d19}`, i5.V1), I9 = await p16.getAccountInfo(w11);
  if (o9(!!(null == I9 ? void 0 : I9.data), new g2("The record account does not exist")), 96 !== (null == I9 ? void 0 : I9.data.length)) return [i17(w, w11, y10, l17), await c16(p16, d19, f20, l17, j7, y10)];
  const S7 = f13(f20, w11, l17, j7);
  return t16(w, w11, new n8(0), S7, l17);
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/validateRecordV2Content.mjs
var n20 = (n27, i33, a25, d19, p16, u17) => {
  let { pubkey: f20, parent: S7, isSub: c21 } = c8(`${a25}.${i33}`, i5.V2);
  if (c21 && (S7 = c8(i33).pubkey), !S7) throw new T("Parent could not be found");
  return P2(p16, f20, S7, d19, u17, w, n27, I);
};

// node_modules/@bonfida/spl-name-service/dist/esm/bindings/writRoaRecordV2.mjs
var n21 = (n27, i33, p16, d19, a25) => {
  let { pubkey: f20, parent: u17, isSub: c21 } = c8(`${i33}.${n27}`, i5.V2);
  if (c21 && (u17 = c8(n27).pubkey), !u17) throw new T("Parent could not be found");
  return O(d19, w, f20, u17, p16, a25, I);
};

// node_modules/@bonfida/spl-name-service/dist/esm/twitter/ReverseTwitterRegistryState.mjs
var s16 = class _s {
  constructor(t26) {
    this.twitterRegistryKey = t26.twitterRegistryKey, this.twitterHandle = t26.twitterHandle;
  }
  static async retrieve(i33, o25) {
    let a25 = await i33.getAccountInfo(o25, "processed");
    if (!a25) throw new S3("The reverse twitter account was not found");
    return new _s(m(_s.schema, a25.data.slice(s5.HEADER_LEN)));
  }
};
s16.schema = { struct: { twitterRegistryKey: { array: { type: "u8", len: 32 } }, twitterHandle: "string" } };

// node_modules/@bonfida/spl-name-service/dist/esm/twitter/changeTwitterRegistryData.mjs
async function i23(i33, c21, e36, u17) {
  const p16 = s4(i33), a25 = t5(p16, void 0, L);
  return [t16(w, a25, new n8(e36), u17, c21)];
}

// node_modules/@bonfida/spl-name-service/dist/esm/twitter/createReverseTwitterRegistry.mjs
async function l13(l17, d19, g12, w11, y10) {
  const x9 = s4(w11.toString()), _4 = t5(x9, t2, L);
  let h16 = i3(s16.schema, new s16({ twitterRegistryKey: g12.toBytes(), twitterHandle: d19 }));
  return [t6(w, SystemProgram.programId, _4, w11, y10, x9, new u6(await l17.getMinimumBalanceForRentExemption(h16.length + s5.HEADER_LEN)), new n8(h16.length), t2, L, t2), t16(w, _4, new n8(0), r.Buffer.from(h16), t2)];
}

// node_modules/@bonfida/spl-name-service/dist/esm/twitter/changeVerifiedPubkey.mjs
async function a13(a25, c21, f20, p16, u17) {
  const g12 = s4(c21), j7 = t5(g12, void 0, L);
  let y10 = [s14(w, j7, p16, f20, void 0)];
  return y10.push(await s12(a25, f20.toString(), u17, t2, L)), y10 = y10.concat(await l13(a25, c21, j7, p16, u17)), y10;
}

// node_modules/@bonfida/spl-name-service/dist/esm/twitter/createVerifiedTwitterRegistry.mjs
async function f15(f20, j7, u17, w11, g12) {
  const l17 = s4(j7), y10 = t5(l17, void 0, L), d19 = await f20.getMinimumBalanceForRentExemption(w11 + s5.HEADER_LEN);
  let E6 = [t6(w, SystemProgram.programId, y10, u17, g12, l17, new u6(d19), new n8(w11), void 0, L, t2)];
  return E6 = E6.concat(await l13(f20, j7, y10, u17, g12)), E6;
}

// node_modules/@bonfida/spl-name-service/dist/esm/twitter/deleteTwitterRegistry.mjs
async function i24(i33, e36) {
  const c21 = s4(i33), u17 = t5(c21, void 0, L), a25 = s4(e36.toString()), f20 = t5(a25, t2, L);
  return [i17(w, u17, e36, e36), i17(w, f20, e36, e36)];
}

// node_modules/@bonfida/spl-name-service/dist/esm/twitter/getHandleAndRegistryKey.mjs
async function s17(s24, n27) {
  const a25 = s4(n27.toString()), c21 = t5(a25, t2, L);
  let y10 = await s16.retrieve(s24, c21);
  return [y10.twitterHandle, new PublicKey(y10.twitterRegistryKey)];
}

// node_modules/@bonfida/spl-name-service/dist/esm/twitter/getTwitterHandleandRegistryKeyViaFilters.mjs
async function i25(i33, c21) {
  const f20 = [{ memcmp: { offset: 0, bytes: L.toBase58() } }, { memcmp: { offset: 32, bytes: c21.toBase58() } }, { memcmp: { offset: 64, bytes: t2.toBase58() } }], p16 = await i33.getProgramAccounts(w, { filters: f20 });
  for (const o25 of p16) if (o25.account.data.length > s5.HEADER_LEN + 32) {
    const s24 = o25.account.data.slice(s5.HEADER_LEN), r35 = new s16(m(s16.schema, s24));
    return [r35.twitterHandle, new PublicKey(r35.twitterRegistryKey)];
  }
  throw new g2("The twitter account does not exist");
}

// node_modules/@bonfida/spl-name-service/dist/esm/twitter/getTwitterRegistry.mjs
async function e23(e36, s24) {
  const i33 = s4(s24), n27 = t5(i33, void 0, L), { registry: a25 } = await s5.retrieve(e36, n27);
  return a25;
}

// node_modules/@bonfida/spl-name-service/dist/esm/twitter/getTwitterRegistryData.mjs
async function a14(a25, f20) {
  const n27 = [{ memcmp: { offset: 0, bytes: L.toBase58() } }, { memcmp: { offset: 32, bytes: f20.toBase58() } }, { memcmp: { offset: 64, bytes: new PublicKey(r.Buffer.alloc(32, 0)).toBase58() } }], c21 = await a25.getProgramAccounts(w, { filters: n27 });
  if (c21.length > 1) throw new A3("More than 1 accounts were found");
  return c21[0].account.data.slice(s5.HEADER_LEN);
}

// node_modules/@bonfida/spl-name-service/dist/esm/twitter/getTwitterRegistryKey.mjs
async function n22(n27) {
  const s24 = s4(n27);
  return t5(s24, void 0, L);
}

// node_modules/@bonfida/spl-name-service/dist/esm/utils/findSubdomains.mjs
var a15 = async (a25, m30) => {
  const r35 = [{ memcmp: { offset: 0, bytes: m30.toBase58() } }, { memcmp: { offset: 64, bytes: E.toBase58() } }], c21 = await a25.getProgramAccounts(w, { filters: r35 }), f20 = [{ memcmp: { offset: 0, bytes: m30.toBase58() } }], n27 = await a25.getProgramAccounts(w, { filters: f20, dataSlice: { offset: 0, length: 0 } }), i33 = new Map(c21.map((e36) => [e36.pubkey.toBase58(), e20(e36.account.data.slice(96), true)])), p16 = [];
  return n27.forEach((e36) => {
    const t26 = e21(e36.pubkey, m30).toBase58(), s24 = i33.get(t26);
    s24 && p16.push(s24);
  }), p16;
};

// node_modules/@bonfida/spl-name-service/dist/esm/utils/getAllDomains.mjs
async function s18(s24, o25) {
  const m30 = [{ memcmp: { offset: 32, bytes: o25.toBase58() } }, { memcmp: { offset: 0, bytes: r7.toBase58() } }];
  return (await s24.getProgramAccounts(w, { filters: m30, dataSlice: { offset: 0, length: 0 } })).map((t26) => t26.pubkey);
}

// node_modules/@bonfida/spl-name-service/dist/esm/utils/getAllRegisteredDomains.mjs
var e24 = async (e36) => {
  const o25 = [{ memcmp: { offset: 0, bytes: r7.toBase58() } }];
  return await e36.getProgramAccounts(w, { dataSlice: { offset: 32, length: 32 }, filters: o25 });
};

// node_modules/@bonfida/spl-name-service/dist/esm/utils/reverseLookupBatch.mjs
async function a16(a25, s24) {
  let i33 = [];
  for (let t26 of s24) {
    const m30 = s4(t26.toBase58()), a26 = t5(m30, E);
    i33.push(a26);
  }
  return (await s5.retrieveBatch(a25, i33)).map((t26) => {
    if (void 0 !== t26 && void 0 !== t26.data) return e20(t26.data);
  });
}

// node_modules/@bonfida/spl-name-service/dist/esm/utils/getDomainKeysWithReverses.mjs
async function a17(a25, m30) {
  const r35 = await s18(a25, m30), e36 = await a16(a25, r35);
  return r35.map((o25, t26) => ({ pubKey: o25, domain: e36[t26] }));
}

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/graphemesplit/typeTrie.json.mjs
var v6 = "ABAOAAAAAACwiAAAAYkHdvjtnH+IFkUYxx/v3vPe7uw8UkjsD43ChKICDQsT3iIJy4gSiZAjkn5JUFlaiFmjccT9ESkpGBGVIlQgWSkY/QDBoMgrQv0jRJDAfkCXhUmgRX23d4ebnndmd3Z3ZnfVeeDDzM7MPs8zv57Zd2+5hd1Ed4ClYAisBuuUsqLpMHgJjIBNFu1fBW8l1O8AO8Ee8Cn4HIyCg+CI0u4Y+AmMgVPgDOhuEHWBPjAZXAy2gjfA9kb73hlx+i7SK8AHYDf4BOwHB8AoOAyOguPgB/ArOKlcnwHdPe32/Uin9LTvvwTph0gv62nbubKnXT+nZ1z/DcjfFF8vQno7uEaxH923BGVXN9v5Zcgvj/VFPIT8Y/H1k0jXxPn1SEfARjBdab8V+TfB22CXUh5xd3OcZTH3g6di1LZJbLNs55q96M9n4J9Gm6hsfzQvcT8fbfy//TyUf8vG4Lses/5jcd2PSE/IcQan4/o/UXYadE0kaoJBMG1ivNbidNbETr1XoWyuplwyHFN0fFai/8/EY7BIKY/68EpCvwP+mc/m/2vNGnBhp1eZ51bCmgsEAoFAIBAIBAKBQKAO3Irfrg3lfc4qi/cXd+Kee5TfvAd6ieY0ie5D2cNx+eNInwZLmu33gWuRn4/8C3H9CNJNYEt8/TrS35HuSPktvRP1z0LPOvAceB4IsB5saIa6UBfqQl2oc123AjwBVjWrP7MCgcC5y/ue/56yqXv87+qcIU2Z+ny8tuHHpyxsvrDNITDXgqkDRJcPdJY/wMo24/oQmDqZaPHkdplAuhv8ApqDRDeCVj/OAvD9BUSX9qF8Qpt7lTxnZ7+5TmVtrGMM7XchP3sS0SNgGzg4yU5HIBAIBM5NfsO5QDgfjuM54STOw7/Az/F3QtfhfF4Qn9F/gxMouxm/WU7F9afBQuUM7+rtPF+jb0b6ese/I7sI+emadhEzUT5bqbsW+esNbSMWoG6hWo/8gOLPUqUu+v5rKEHX8oS6iEXQexd7XlmBe1aCNWAp6kSsYyjHc82Liv2Xkd/C/HkN1w/Geren+KryToa2PtlQg2c9zijGZnGJ9kaibzZh84jmmfx4TeYpK9H3usMKqxnDCWxsdLY/3ygy9h+l/LYbYHtuXw2/rfsSPo0a/Jrn6PvPrzL2+7CmfV88lkc9j+F7cRzYU4N48DF8uA3n/T7Fly9q4Jdvoth0uLf9LORC11hvO/0D6RnQfRa99+2Hr1NS/M26VvfEe2jaWTAOvG8zzgKf8zCrYL++qUEfbumeQAjTVnQp+QmW99gQpDoJ4+9uHZe5/l3OW/M8x6WUZaduUvUc5p13NTXlz3VpGbCVrGNe5zOnjvGlrDWY1IdWShuuQ9fWh6h+VSV1Wit1lvNhHFz1zeUYtCg5ntvOSStDW5cITRnF5RJ+rcasJHExztwu910tl6LzLYsvuvvzilB0mvSaxt/V+SY0EMurfkjbrTjfInf+FJGkNdzSlOukZaDo3snqs7RZpqj2Gx7sS52D5O79k+93W2W/T3NhQxe3VeF16pwn4eI8qev7Sl1s0PnPy5PalSV57Pp6XuDxrypR9wBR8nOCzm/eXuYp5d4s/lV1XvL+lG2b+2AaQ1nPr23Hrc7z0WT5qvZL0v7QtdX5zdu6HMei+gV1ri8et4XSVpCfdeB7fRWNRy79UP0RCT4Jyre/88bbKsQUawUrV69dxjd+nlXxbCKos79pz1BpOqucz0gEdZ5hMk+aa7Wdy/7xZ5Yqhc+nyHivrkyQ/reM7tziuFojfM7zxtq0505XYutvHrtVnzNl2ONrTGdPkLv9ZjNHOoShnCh5nLLYKOKfK4qK7bjx/gqyj9lFJc2Wz/HIqyMSYaGnqM8+xp6vB1/6feg22UmLFUno1rurvelz7yT1UVfORW3L7+d6fMcAXdzxIVK3TNNioZpSyj2242izpky6y5S0fpr6q5ZXJT7O1qrmQRVB+rkQ1Dk3vvYttyGoc+51/mUVkYLtXvTx7MCvbUnzW2czyR8pql4XUlbcN9l1pSfPfOl0JV2bylyKoM4959sHQfr9Vpbk2V8u4ry0ndcvH5I1xggP9qVem/PHZL+qeGLrc945tLnHtG/LEtdjr4urxMpM92X1RZDd+pLtsorUydeCaiuvbtdSpQ9l2M4SU01nvI1e35L3uS5Jlw8pe1ykCKo2JtrGK9O9ujOlimcD6Y9LEWQ+7019d2VDLVPrTCLrsvjsQ1TfJVJM12pZmm5b4Xptx6HM9SpFkP2c6drJa5/iSr+pD7r+CNLvATVfpST1RYog/fwKTdsyxLVNQfnWrkyziGltJK2hLLptzjHXIsh+/HytmyQfpPA5VNtzXWWLzbiVsc9sbWSJ7UWE69KNh6v9kya2c6TzMa0fwpD37TtvQ6wuiw9CA9cny33Mj2pLte9Kp6996HO/83HPQ5r+ov5mvU9Qte/fIrGJP7axPO/9eXX6kjLPKZNd17iyZdOHLP31JSbfXY6hC59c+ZZ136TZ9SFlj6cvmVkSrkSQn3NG5KBqEVSeH6Ji/vvnhFWjSlfFNDwzyMgqLvvKxXffbeASBWo+Zj4p2x6TfwE=";
var f16 = { data: v6 };

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/graphemesplit/extPict.json.mjs
var d12 = "AAACAAAAAACAOAAAAbYBSf7t2S1IBEEYBuDVDZ7FYrQMNsFiu3hgEYOI0SCXRIUrB8JhEZtgs5gEg1GMFk02m82oGI02m+9xezCOczv/uwv3fvAwc/PzfXOzcdqzWdaBDdiGPdiHdjE+DS3RNDuCfsn8idQ/g3OH3BdwKf0e96/gumTfYcncLdzBPTzAo+RZ+f0Cr/AG7/AJX4738x1wtz9FO5PX/50n6UXMNdfg/0lERERERERERERERETpdedHBvDRql4nq0cXtW9af98qdRby0Vvp8K4W0V+C5Xw0t4J2bfjeBp3cnEu1brnnCTYNa7eKdz91XP7WO9Lb4GqRb7cY6xbtAdqeVOsY/QGcevw/tb6OT85YhvfKYEx9CMuxKsKnrs+eJtVInVvHJ0eVYVvTZk2siFVLOCjb61PTZX3MdVWEyP7fjzpmMxdzTyq2Ebue6x61nXRGnzndWpf1an7dXmGYE4Y1ptqqKsK1nu26Ju0ty+maV2Rpvk+qnDZjKUIobUiesdAQE/jmCTmHmsskpFZsVYbtmXRcaoSGUPomunW2derQhDPFjtT1Q/eb8vnm990fq35oHVt11bU9m89c7DNI8Qs=";
var A4 = { data: d12 };

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/tiny-inflate/index.mjs
var t17 = 0;
var e25 = -3;
function r29() {
  this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
}
function n23(t26, e36) {
  this.source = t26, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = e36, this.destLen = 0, this.ltree = new r29(), this.dtree = new r29();
}
var o22 = new r29();
var a18 = new r29();
var s19 = new Uint8Array(30);
var u13 = new Uint16Array(30);
var c17 = new Uint8Array(30);
var i26 = new Uint16Array(30);
var f17 = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
var d13 = new r29();
var b7 = new Uint8Array(320);
function l14(t26, e36, r35, n27) {
  var o25, a25;
  for (o25 = 0; o25 < r35; ++o25) t26[o25] = 0;
  for (o25 = 0; o25 < 30 - r35; ++o25) t26[o25 + r35] = o25 / r35 | 0;
  for (a25 = n27, o25 = 0; o25 < 30; ++o25) e36[o25] = a25, a25 += 1 << t26[o25];
}
var w9 = new Uint16Array(16);
function v7(t26, e36, r35, n27) {
  var o25, a25;
  for (o25 = 0; o25 < 16; ++o25) t26.table[o25] = 0;
  for (o25 = 0; o25 < n27; ++o25) t26.table[e36[r35 + o25]]++;
  for (t26.table[0] = 0, a25 = 0, o25 = 0; o25 < 16; ++o25) w9[o25] = a25, a25 += t26.table[o25];
  for (o25 = 0; o25 < n27; ++o25) e36[r35 + o25] && (t26.trans[w9[e36[r35 + o25]]++] = o25);
}
function h12(t26) {
  t26.bitcount-- || (t26.tag = t26.source[t26.sourceIndex++], t26.bitcount = 7);
  var e36 = 1 & t26.tag;
  return t26.tag >>>= 1, e36;
}
function x7(t26, e36, r35) {
  if (!e36) return r35;
  for (; t26.bitcount < 24; ) t26.tag |= t26.source[t26.sourceIndex++] << t26.bitcount, t26.bitcount += 8;
  var n27 = t26.tag & 65535 >>> 16 - e36;
  return t26.tag >>>= e36, t26.bitcount -= e36, n27 + r35;
}
function g8(t26, e36) {
  for (; t26.bitcount < 24; ) t26.tag |= t26.source[t26.sourceIndex++] << t26.bitcount, t26.bitcount += 8;
  var r35 = 0, n27 = 0, o25 = 0, a25 = t26.tag;
  do {
    n27 = 2 * n27 + (1 & a25), a25 >>>= 1, ++o25, r35 += e36.table[o25], n27 -= e36.table[o25];
  } while (n27 >= 0);
  return t26.tag = a25, t26.bitcount -= o25, e36.trans[r35 + n27];
}
function y8(t26, e36, r35) {
  var n27, o25, a25, s24, u17, c21;
  for (n27 = x7(t26, 5, 257), o25 = x7(t26, 5, 1), a25 = x7(t26, 4, 4), s24 = 0; s24 < 19; ++s24) b7[s24] = 0;
  for (s24 = 0; s24 < a25; ++s24) {
    var i33 = x7(t26, 3, 0);
    b7[f17[s24]] = i33;
  }
  for (v7(d13, b7, 0, 19), u17 = 0; u17 < n27 + o25; ) {
    var l17 = g8(t26, d13);
    switch (l17) {
      case 16:
        var w11 = b7[u17 - 1];
        for (c21 = x7(t26, 2, 3); c21; --c21) b7[u17++] = w11;
        break;
      case 17:
        for (c21 = x7(t26, 3, 3); c21; --c21) b7[u17++] = 0;
        break;
      case 18:
        for (c21 = x7(t26, 7, 11); c21; --c21) b7[u17++] = 0;
        break;
      default:
        b7[u17++] = l17;
    }
  }
  v7(e36, b7, 0, n27), v7(r35, b7, n27, o25);
}
function I7(e36, r35, n27) {
  for (; ; ) {
    var o25, a25, f20, d19, b10 = g8(e36, r35);
    if (256 === b10) return t17;
    if (b10 < 256) e36.dest[e36.destLen++] = b10;
    else for (o25 = x7(e36, s19[b10 -= 257], u13[b10]), a25 = g8(e36, n27), d19 = f20 = e36.destLen - x7(e36, c17[a25], i26[a25]); d19 < f20 + o25; ++d19) e36.dest[e36.destLen++] = e36.dest[d19];
  }
}
function A5(r35) {
  for (var n27, o25; r35.bitcount > 8; ) r35.sourceIndex--, r35.bitcount -= 8;
  if ((n27 = 256 * (n27 = r35.source[r35.sourceIndex + 1]) + r35.source[r35.sourceIndex]) !== (65535 & ~(256 * r35.source[r35.sourceIndex + 3] + r35.source[r35.sourceIndex + 2]))) return e25;
  for (r35.sourceIndex += 4, o25 = n27; o25; --o25) r35.dest[r35.destLen++] = r35.source[r35.sourceIndex++];
  return r35.bitcount = 0, t17;
}
!function(t26, e36) {
  var r35;
  for (r35 = 0; r35 < 7; ++r35) t26.table[r35] = 0;
  for (t26.table[7] = 24, t26.table[8] = 152, t26.table[9] = 112, r35 = 0; r35 < 24; ++r35) t26.trans[r35] = 256 + r35;
  for (r35 = 0; r35 < 144; ++r35) t26.trans[24 + r35] = r35;
  for (r35 = 0; r35 < 8; ++r35) t26.trans[168 + r35] = 280 + r35;
  for (r35 = 0; r35 < 112; ++r35) t26.trans[176 + r35] = 144 + r35;
  for (r35 = 0; r35 < 5; ++r35) e36.table[r35] = 0;
  for (e36.table[5] = 32, r35 = 0; r35 < 32; ++r35) e36.trans[r35] = r35;
}(o22, a18), l14(s19, u13, 4, 3), l14(c17, i26, 2, 1), s19[28] = 0, u13[28] = 258;
var U3 = function(r35, s24) {
  var u17, c21, i33 = new n23(r35, s24);
  do {
    switch (u17 = h12(i33), x7(i33, 2, 0)) {
      case 0:
        c21 = A5(i33);
        break;
      case 1:
        c21 = I7(i33, o22, a18);
        break;
      case 2:
        y8(i33, i33.ltree, i33.dtree), c21 = I7(i33, i33.ltree, i33.dtree);
        break;
      default:
        c21 = e25;
    }
    if (c21 !== t17) throw new Error("Data error");
  } while (!u17);
  return i33.destLen < i33.dest.length ? "function" == typeof i33.dest.slice ? i33.dest.slice(0, i33.destLen) : i33.dest.subarray(0, i33.destLen) : i33.dest;
};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/unicode-trie/swap.mjs
var r30 = 18 === new Uint8Array(new Uint32Array([305419896]).buffer)[0];
var t18 = (r35, t26, e36) => {
  let n27 = r35[t26];
  r35[t26] = r35[e36], r35[e36] = n27;
};
var e26 = { swap32LE: (e36) => {
  r30 && ((r35) => {
    const e37 = r35.length;
    for (let n27 = 0; n27 < e37; n27 += 4) t18(r35, n27, n27 + 3), t18(r35, n27 + 1, n27 + 2);
  })(e36);
} };

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/unicode-trie/index.mjs
var r31 = U3;
var { swap32LE: i27 } = e26;
var e27 = class {
  constructor(t26) {
    const a25 = "function" == typeof t26.readUInt32BE && "function" == typeof t26.slice;
    if (a25 || t26 instanceof Uint8Array) {
      let e36;
      if (a25) this.highStart = t26.readUInt32LE(0), this.errorValue = t26.readUInt32LE(4), e36 = t26.readUInt32LE(8), t26 = t26.slice(12);
      else {
        const a26 = new DataView(t26.buffer);
        this.highStart = a26.getUint32(0, true), this.errorValue = a26.getUint32(4, true), e36 = a26.getUint32(8, true), t26 = t26.subarray(12);
      }
      t26 = r31(t26, new Uint8Array(e36)), t26 = r31(t26, new Uint8Array(e36)), i27(t26), this.data = new Uint32Array(t26.buffer);
    } else ({ data: this.data, highStart: this.highStart, errorValue: this.errorValue } = t26);
  }
  get(t26) {
    let a25;
    return t26 < 0 || t26 > 1114111 ? this.errorValue : t26 < 55296 || t26 > 56319 && t26 <= 65535 ? (a25 = (this.data[t26 >> 5] << 2) + (31 & t26), this.data[a25]) : t26 <= 65535 ? (a25 = (this.data[2048 + (t26 - 55296 >> 5)] << 2) + (31 & t26), this.data[a25]) : t26 < this.highStart ? (a25 = this.data[2080 + (t26 >> 11)], a25 = this.data[a25 + (t26 >> 5 & 63)], a25 = (a25 << 2) + (31 & t26), this.data[a25]) : this.data[this.data.length - 4];
  }
};

// node_modules/@bonfida/spl-name-service/dist/esm/_virtual/base64.mjs
var e28 = { exports: {} };

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/js-base64/base64.mjs
var e29;
var o23;
var u14;
var i28;
var f18;
var a19;
var c18;
var s20;
var d14;
var l15;
var p14;
var h13;
var A6;
var y9;
var b8;
var m10;
var g9;
var x8;
var B7;
var v8;
var C3;
var U4;
var F2;
var w10;
var S6;
var _3;
var j5;
var E5;
var D2;
var R5;
var z4;
var T3;
var Z;
var I8;
var O4;
var P4;
var L3;
var V3;
var k3;
var H2;
var N4;
"undefined" != typeof self ? self : "undefined" != typeof window && window, e28.exports = (o23 = e29 = "3.7.5", u14 = "function" == typeof atob, i28 = "function" == typeof btoa, f18 = "function" == typeof r.Buffer, a19 = "function" == typeof TextDecoder ? new TextDecoder() : void 0, c18 = "function" == typeof TextEncoder ? new TextEncoder() : void 0, s20 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", d14 = Array.prototype.slice.call(s20), N4 = {}, d14.forEach(function(r35, t26) {
  return N4[r35] = t26;
}), l15 = N4, p14 = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/, h13 = String.fromCharCode.bind(String), A6 = "function" == typeof Uint8Array.from ? Uint8Array.from.bind(Uint8Array) : function(r35) {
  return new Uint8Array(Array.prototype.slice.call(r35, 0));
}, y9 = function(r35) {
  return r35.replace(/=/g, "").replace(/[+\/]/g, function(r36) {
    return "+" == r36 ? "-" : "_";
  });
}, b8 = function(r35) {
  return r35.replace(/[^A-Za-z0-9\+\/]/g, "");
}, m10 = function(r35) {
  for (var t26, n27, e36, o25, u17 = "", i33 = r35.length % 3, f20 = 0; f20 < r35.length; ) {
    if ((n27 = r35.charCodeAt(f20++)) > 255 || (e36 = r35.charCodeAt(f20++)) > 255 || (o25 = r35.charCodeAt(f20++)) > 255) throw new TypeError("invalid character found");
    u17 += d14[(t26 = n27 << 16 | e36 << 8 | o25) >> 18 & 63] + d14[t26 >> 12 & 63] + d14[t26 >> 6 & 63] + d14[63 & t26];
  }
  return i33 ? u17.slice(0, i33 - 3) + "===".substring(i33) : u17;
}, x8 = f18 ? function(r35) {
  return r.Buffer.from(r35).toString("base64");
} : function(r35) {
  for (var t26 = 4096, n27 = [], e36 = 0, o25 = r35.length; e36 < o25; e36 += t26) n27.push(h13.apply(null, r35.subarray(e36, e36 + t26)));
  return g9(n27.join(""));
}, v8 = function(r35) {
  if (r35.length < 2) return (t26 = r35.charCodeAt(0)) < 128 ? r35 : t26 < 2048 ? h13(192 | t26 >>> 6) + h13(128 | 63 & t26) : h13(224 | t26 >>> 12 & 15) + h13(128 | t26 >>> 6 & 63) + h13(128 | 63 & t26);
  var t26 = 65536 + 1024 * (r35.charCodeAt(0) - 55296) + (r35.charCodeAt(1) - 56320);
  return h13(240 | t26 >>> 18 & 7) + h13(128 | t26 >>> 12 & 63) + h13(128 | t26 >>> 6 & 63) + h13(128 | 63 & t26);
}, C3 = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g, F2 = f18 ? function(r35) {
  return r.Buffer.from(r35, "utf8").toString("base64");
} : c18 ? function(r35) {
  return x8(c18.encode(r35));
} : function(r35) {
  return g9(U4(r35));
}, S6 = function(r35) {
  return w10(r35, true);
}, _3 = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g, j5 = function(r35) {
  switch (r35.length) {
    case 4:
      var t26 = ((7 & r35.charCodeAt(0)) << 18 | (63 & r35.charCodeAt(1)) << 12 | (63 & r35.charCodeAt(2)) << 6 | 63 & r35.charCodeAt(3)) - 65536;
      return h13(55296 + (t26 >>> 10)) + h13(56320 + (1023 & t26));
    case 3:
      return h13((15 & r35.charCodeAt(0)) << 12 | (63 & r35.charCodeAt(1)) << 6 | 63 & r35.charCodeAt(2));
    default:
      return h13((31 & r35.charCodeAt(0)) << 6 | 63 & r35.charCodeAt(1));
  }
}, D2 = function(r35) {
  if (r35 = r35.replace(/\s+/g, ""), !p14.test(r35)) throw new TypeError("malformed base64.");
  r35 += "==".slice(2 - (3 & r35.length));
  for (var t26, n27, e36, o25 = "", u17 = 0; u17 < r35.length; ) t26 = l15[r35.charAt(u17++)] << 18 | l15[r35.charAt(u17++)] << 12 | (n27 = l15[r35.charAt(u17++)]) << 6 | (e36 = l15[r35.charAt(u17++)]), o25 += 64 === n27 ? h13(t26 >> 16 & 255) : 64 === e36 ? h13(t26 >> 16 & 255, t26 >> 8 & 255) : h13(t26 >> 16 & 255, t26 >> 8 & 255, 255 & t26);
  return o25;
}, z4 = f18 ? function(r35) {
  return A6(r.Buffer.from(r35, "base64"));
} : function(r35) {
  return A6(R5(r35).split("").map(function(r36) {
    return r36.charCodeAt(0);
  }));
}, T3 = function(r35) {
  return z4(I8(r35));
}, Z = f18 ? function(r35) {
  return r.Buffer.from(r35, "base64").toString("utf8");
} : a19 ? function(r35) {
  return a19.decode(z4(r35));
} : function(r35) {
  return E5(R5(r35));
}, I8 = function(r35) {
  return b8(r35.replace(/[-_]/g, function(r36) {
    return "-" == r36 ? "+" : "/";
  }));
}, P4 = function(r35) {
  return { value: r35, enumerable: false, writable: true, configurable: true };
}, L3 = function() {
  var r35 = function(r36, t26) {
    return Object.defineProperty(String.prototype, r36, P4(t26));
  };
  r35("fromBase64", function() {
    return O4(this);
  }), r35("toBase64", function(r36) {
    return w10(this, r36);
  }), r35("toBase64URI", function() {
    return w10(this, true);
  }), r35("toBase64URL", function() {
    return w10(this, true);
  }), r35("toUint8Array", function() {
    return T3(this);
  });
}, V3 = function() {
  var r35 = function(r36, t26) {
    return Object.defineProperty(Uint8Array.prototype, r36, P4(t26));
  };
  r35("toBase64", function(r36) {
    return B7(this, r36);
  }), r35("toBase64URI", function() {
    return B7(this, true);
  }), r35("toBase64URL", function() {
    return B7(this, true);
  });
}, k3 = function() {
  L3(), V3();
}, H2 = { version: e29, VERSION: o23, atob: R5 = u14 ? function(r35) {
  return atob(b8(r35));
} : f18 ? function(r35) {
  return r.Buffer.from(r35, "base64").toString("binary");
} : D2, atobPolyfill: D2, btoa: g9 = i28 ? function(r35) {
  return btoa(r35);
} : f18 ? function(r35) {
  return r.Buffer.from(r35, "binary").toString("base64");
} : m10, btoaPolyfill: m10, fromBase64: O4 = function(r35) {
  return Z(I8(r35));
}, toBase64: w10 = function(r35, t26) {
  return void 0 === t26 && (t26 = false), t26 ? y9(F2(r35)) : F2(r35);
}, encode: w10, encodeURI: S6, encodeURL: S6, utob: U4 = function(r35) {
  return r35.replace(C3, v8);
}, btou: E5 = function(r35) {
  return r35.replace(_3, j5);
}, decode: O4, isValid: function(r35) {
  if ("string" != typeof r35) return false;
  var t26 = r35.replace(/\s+/g, "").replace(/={0,2}$/, "");
  return !/[^\s0-9a-zA-Z\+/]/.test(t26) || !/[^\s0-9a-zA-Z\-_]/.test(t26);
}, fromUint8Array: B7 = function(r35, t26) {
  return void 0 === t26 && (t26 = false), t26 ? y9(x8(r35)) : x8(r35);
}, toUint8Array: T3, extendString: L3, extendUint8Array: V3, extendBuiltins: k3, Base64: {} }, Object.keys(H2).forEach(function(r35) {
  return H2.Base64[r35] = H2[r35];
}), H2);
var $ = e28.exports;

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/graphemesplit/types.mjs
var e30 = { Other: 0, CR: 1, LF: 2, Control: 4, Extend: 8, ZWJ: 16, Regional_Indicator: 32, Prepend: 64, SpacingMark: 128, L: 256, V: 512, T: 1024, LV: 2048, LVT: 4096, Extended_Pictographic: 8192 };

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/graphemesplit/index.mjs
var s21 = e30;
var a20 = f16.data;
var c19 = A4.data;
var m11 = e27;
var f19 = $.Base64;
var p15 = new m11(f19.toUint8Array(a20));
var d15 = new m11(f19.toUint8Array(c19));
function l16(t26, e36) {
  return 0 != (t26 & e36);
}
var u15 = 0;
var g10 = 1;
var j6 = 2;
function h14(t26, e36) {
  const o25 = t26.length;
  let r35 = 0, n27 = u15;
  for (let i33 = e36; i33 + 1 < o25; i33++) {
    const o26 = t26[i33 + 0], a25 = t26[i33 + 1];
    switch (l16(o26, s21.Regional_Indicator) || (r35 = 0), n27) {
      case j6:
      case u15:
        n27 = l16(o26, s21.Extended_Pictographic) ? g10 : u15;
        break;
      case g10:
        n27 = l16(o26, s21.Extend) ? g10 : l16(o26, s21.ZWJ) && l16(a25, s21.Extended_Pictographic) ? j6 : u15;
    }
    if (!l16(o26, s21.CR) || !l16(a25, s21.LF)) {
      if (l16(o26, s21.Control | s21.CR | s21.LF)) return i33 + 1 - e36;
      if (l16(a25, s21.Control | s21.CR | s21.LF)) return i33 + 1 - e36;
      if (!(l16(o26, s21.L) && l16(a25, s21.L | s21.V | s21.LV | s21.LVT) || l16(o26, s21.LV | s21.V) && l16(a25, s21.V | s21.T) || l16(o26, s21.LVT | s21.T) && l16(a25, s21.T) || l16(a25, s21.Extend | s21.ZWJ) || l16(a25, s21.SpacingMark) || l16(o26, s21.Prepend) || n27 === j6)) {
        if (!l16(o26, s21.Regional_Indicator) || !l16(a25, s21.Regional_Indicator) || r35 % 2 != 0) return i33 + 1 - e36;
        r35++;
      }
    }
  }
  return o25 - e36;
}
var L4 = o12(function(t26) {
  const e36 = [], o25 = [0], r35 = [];
  for (let e37 = 0; e37 < t26.length; ) {
    const n27 = t26.codePointAt(e37);
    r35.push(p15.get(n27) | d15.get(n27)), e37 += n27 > 65535 ? 2 : 1, o25.push(e37);
  }
  for (let n27 = 0; n27 < r35.length; ) {
    const i33 = h14(r35, n27), s24 = o25[n27], a25 = o25[n27 + i33];
    e36.push(t26.slice(s24, a25)), n27 += i33;
  }
  return e36;
});

// node_modules/@bonfida/spl-name-service/dist/esm/utils/getDomainPriceFromName.mjs
var r32 = (r35) => {
  switch (L4(r35).length) {
    case 1:
      return 750;
    case 2:
      return 700;
    case 3:
      return 640;
    case 4:
      return 160;
    default:
      return 20;
  }
};

// node_modules/@bonfida/spl-name-service/dist/esm/nft/state.mjs
var o24;
!function(e36) {
  e36[e36.Uninitialized = 0] = "Uninitialized", e36[e36.CentralState = 1] = "CentralState", e36[e36.ActiveRecord = 2] = "ActiveRecord", e36[e36.InactiveRecord = 3] = "InactiveRecord";
}(o24 || (o24 = {}));
var i29 = class _i {
  constructor(e36) {
    this.tag = e36.tag, this.nonce = e36.nonce, this.nameAccount = new PublicKey(e36.nameAccount), this.owner = new PublicKey(e36.owner), this.nftMint = new PublicKey(e36.nftMint);
  }
  static deserialize(t26) {
    return new _i(m(this.schema, t26));
  }
  static async retrieve(e36, t26) {
    const n27 = await e36.getAccountInfo(t26);
    if (!n27 || !n27.data) throw new b2("NFT record not found: " + t26.toBase58());
    return this.deserialize(n27.data);
  }
  static async findKey(e36, r35) {
    return await PublicKey.findProgramAddress([r.Buffer.from("nft_record"), e36.toBuffer()], r35);
  }
  static findKeySync(e36, r35) {
    return PublicKey.findProgramAddressSync([r.Buffer.from("nft_record"), e36.toBuffer()], r35);
  }
};
i29.LEN = 98, i29.schema = { struct: { tag: "u8", nonce: "u8", nameAccount: { array: { type: "u8", len: 32 } }, owner: { array: { type: "u8", len: 32 } }, nftMint: { array: { type: "u8", len: 32 } } } };

// node_modules/@bonfida/spl-name-service/dist/esm/nft/getRecordFromMint.mjs
var e31 = async (e36, m30) => {
  const o25 = [{ dataSize: i29.LEN }, { memcmp: { offset: 0, bytes: "3" } }, { memcmp: { offset: 66, bytes: m30.toBase58() } }];
  return await e36.getProgramAccounts(r13, { filters: o25 });
};

// node_modules/@bonfida/spl-name-service/dist/esm/nft/retrieveRecords.mjs
var s22 = (t26) => [{ memcmp: { offset: 32, bytes: t26 } }, { memcmp: { offset: 64, bytes: "2" } }];
var m12 = async (m30, n27) => {
  const r35 = [...s22(n27.toBase58()), { dataSize: 165 }], i33 = (await m30.getProgramAccounts(e17, { filters: r35 })).map((t26) => l4.decode(t26.account.data)).map((e36) => (async (e37, a25) => {
    const s24 = await e31(e37, a25.mint);
    if (1 === s24.length) return i29.deserialize(s24[0].account.data);
  })(m30, e36));
  return (await Promise.all(i33)).filter((t26) => void 0 !== t26);
};

// node_modules/@bonfida/spl-name-service/dist/esm/utils/getTokenizedDomains.mjs
var t19 = async (t26, n27) => {
  const o25 = await m12(t26, n27);
  return (await a16(t26, o25.map((e36) => e36.nameAccount))).map((e36, r35) => ({ key: o25[r35].nameAccount, mint: o25[r35].nftMint, reverse: e36 })).filter((e36) => !!e36.reverse);
};

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/createV2Instruction.mjs
var a21 = class _a {
  constructor(e36) {
    this.tag = 9, this.name = e36.name, this.space = e36.space;
  }
  serialize() {
    return i3(_a.schema, this);
  }
  getInstruction(s24, a25, n27, b10, o25, m30, p16, u17, l17, g12, k4) {
    const y10 = r.Buffer.from(this.serialize()), c21 = [{ pubkey: a25, isSigner: false, isWritable: false }, { pubkey: n27, isSigner: false, isWritable: false }, { pubkey: b10, isSigner: false, isWritable: false }, { pubkey: o25, isSigner: false, isWritable: true }, { pubkey: m30, isSigner: false, isWritable: true }, { pubkey: SystemProgram.programId, isSigner: false, isWritable: false }, { pubkey: p16, isSigner: false, isWritable: false }, { pubkey: u17, isSigner: true, isWritable: true }, { pubkey: l17, isSigner: false, isWritable: true }, { pubkey: g12, isSigner: false, isWritable: true }, { pubkey: e17, isSigner: false, isWritable: false }, { pubkey: k4, isSigner: false, isWritable: false }];
    return new TransactionInstruction({ keys: c21, programId: s24, data: y10 });
  }
};
a21.schema = { struct: { tag: "u8", name: "string", space: "u32" } };

// node_modules/@bonfida/spl-name-service/dist/esm/instructions/reallocInstruction.mjs
function i30(i33, o25, s24, t26, n27, a25) {
  const f20 = [r.Buffer.from(Int8Array.from([4])), a25.toBuffer()], u17 = r.Buffer.concat(f20);
  return new TransactionInstruction({ keys: [{ pubkey: o25, isSigner: false, isWritable: false }, { pubkey: s24, isSigner: true, isWritable: true }, { pubkey: t26, isSigner: false, isWritable: true }, { pubkey: n27, isSigner: true, isWritable: false }], programId: i33, data: u17 });
}

// node_modules/@bonfida/spl-name-service/dist/esm/nft/retrieveNftOwner.mjs
var n24 = async (n27, m30) => {
  try {
    const a25 = t7(m30);
    if ("0" === (await g7(n27, a25)).supply.toString()) return;
    const r35 = [{ memcmp: { offset: 0, bytes: a25.toBase58() } }, { memcmp: { offset: 64, bytes: "2" } }, { dataSize: 165 }], i33 = await n27.getProgramAccounts(e17, { filters: r35 });
    if (1 != i33.length) return;
    return new PublicKey(i33[0].account.data.slice(32, 64));
  } catch {
    return;
  }
};

// node_modules/@bonfida/spl-name-service/dist/esm/nft/retrieveNfts.mjs
var a22 = async (a25) => {
  const m30 = [{ dataSize: i29.LEN }, { memcmp: { offset: 0, bytes: "3" } }], e36 = await a25.getProgramAccounts(r13, { filters: m30 });
  return e36.map((o25) => new PublicKey(o25.account.data.slice(66, 98)));
};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/bs58/node_modules/base-x/src/index.mjs
var r33 = function(r35) {
  if (r35.length >= 255) throw new TypeError("Alphabet too long");
  for (var e36 = new Uint8Array(256), t26 = 0; t26 < e36.length; t26++) e36[t26] = 255;
  for (var n27 = 0; n27 < r35.length; n27++) {
    var o25 = r35.charAt(n27), a25 = o25.charCodeAt(0);
    if (255 !== e36[a25]) throw new TypeError(o25 + " is ambiguous");
    e36[a25] = n27;
  }
  var f20 = r35.length, i33 = r35.charAt(0), h16 = Math.log(f20) / Math.log(256), y10 = Math.log(256) / Math.log(f20);
  function w11(r36) {
    if ("string" != typeof r36) throw new TypeError("Expected String");
    if (0 === r36.length) return new Uint8Array();
    for (var t27 = 0, n28 = 0, o26 = 0; r36[t27] === i33; ) n28++, t27++;
    for (var a26 = (r36.length - t27) * h16 + 1 >>> 0, y11 = new Uint8Array(a26); r36[t27]; ) {
      var w12 = e36[r36.charCodeAt(t27)];
      if (255 === w12) return;
      for (var c21 = 0, A7 = a26 - 1; (0 !== w12 || c21 < o26) && -1 !== A7; A7--, c21++) w12 += f20 * y11[A7] >>> 0, y11[A7] = w12 % 256 >>> 0, w12 = w12 / 256 >>> 0;
      if (0 !== w12) throw new Error("Non-zero carry");
      o26 = c21, t27++;
    }
    for (var g12 = a26 - o26; g12 !== a26 && 0 === y11[g12]; ) g12++;
    for (var v10 = new Uint8Array(n28 + (a26 - g12)), u17 = n28; g12 !== a26; ) v10[u17++] = y11[g12++];
    return v10;
  }
  return { encode: function(e37) {
    if (e37 instanceof Uint8Array || (ArrayBuffer.isView(e37) ? e37 = new Uint8Array(e37.buffer, e37.byteOffset, e37.byteLength) : Array.isArray(e37) && (e37 = Uint8Array.from(e37))), !(e37 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (0 === e37.length) return "";
    for (var t27 = 0, n28 = 0, o26 = 0, a26 = e37.length; o26 !== a26 && 0 === e37[o26]; ) o26++, t27++;
    for (var h17 = (a26 - o26) * y10 + 1 >>> 0, w12 = new Uint8Array(h17); o26 !== a26; ) {
      for (var c21 = e37[o26], A7 = 0, g12 = h17 - 1; (0 !== c21 || A7 < n28) && -1 !== g12; g12--, A7++) c21 += 256 * w12[g12] >>> 0, w12[g12] = c21 % f20 >>> 0, c21 = c21 / f20 >>> 0;
      if (0 !== c21) throw new Error("Non-zero carry");
      n28 = A7, o26++;
    }
    for (var v10 = h17 - n28; v10 !== h17 && 0 === w12[v10]; ) v10++;
    for (var u17 = i33.repeat(t27); v10 < h17; ++v10) u17 += r35.charAt(w12[v10]);
    return u17;
  }, decodeUnsafe: w11, decode: function(r36) {
    var e37 = w11(r36);
    if (e37) return e37;
    throw new Error("Non-base" + f20 + " character");
  } };
};

// node_modules/@bonfida/spl-name-service/dist/esm/node_modules/bs58/index.mjs
var e32 = r33("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");

// node_modules/@bonfida/spl-name-service/dist/esm/record/deserializeRecord.mjs
var d16 = (d19, l17, u17) => {
  const a25 = null == d19 ? void 0 : d19.data;
  if (!a25) return;
  if (0 === a25.compare(r.Buffer.alloc(a25.length))) return;
  const p16 = c4.get(l17), j7 = ((e36) => {
    const r35 = Array.from(e36);
    return r35.length - 1 - r35.reverse().findIndex((e37) => 0 !== e37) + 1;
  })(a25);
  if (!p16) {
    const e36 = a25.slice(0, j7).toString("utf-8");
    return l17 === A2.CNAME || l17 === A2.TXT ? l6(e36) : e36;
  }
  if (l17 === A2.SOL) {
    const r35 = new TextEncoder(), o25 = r.Buffer.concat([a25.slice(0, 32), u17.toBuffer()]), t26 = r35.encode(o25.toString("hex"));
    if (o17(t26, a25.slice(32, 96), d19.owner)) return e32.encode(a25.slice(0, 32));
  }
  if (p16 && j7 !== p16) {
    const e36 = a25.slice(0, j7).toString("utf-8");
    if (l17 === A2.Injective) {
      const r35 = h6.decodeToBytes(e36);
      if ("inj" === r35.prefix && 20 === r35.bytes.length) return e36;
    } else if (l17 === A2.BSC || l17 === A2.ETH) {
      const r35 = e36.slice(0, 2), o25 = e36.slice(2);
      if ("0x" === r35 && 20 === r.Buffer.from(o25, "hex").length) return e36;
    } else if ((l17 === A2.A || l17 === A2.AAAA) && n11.isValid(e36)) return e36;
    throw new i6("The record data is malformed");
  }
  if (l17 === A2.ETH || l17 === A2.BSC) return "0x" + a25.slice(0, p16).toString("hex");
  if (l17 === A2.Injective) return h6.encode("inj", h6.toWords(a25.slice(0, p16)));
  if (l17 === A2.A || l17 === A2.AAAA) return n11.fromByteArray([...a25.slice(0, p16)]).toString();
  if (l17 === A2.Background) return new PublicKey(a25.slice(0, p16)).toString();
  throw new i6("The record data is malformed");
};

// node_modules/@bonfida/spl-name-service/dist/esm/record/getRecordKeySync.mjs
var t20 = (t26, e36) => {
  const { pubkey: m30 } = c8(e36 + "." + t26, i5.V1);
  return m30;
};

// node_modules/@bonfida/spl-name-service/dist/esm/record/getRecord.mjs
async function i31(i33, s24, a25, c21) {
  const d19 = t20(s24, a25);
  let { registry: n27 } = await s5.retrieve(i33, d19);
  if (!n27.data) throw new u4("The record data is empty");
  if (c21) return d16(n27, a25, d19);
  const f20 = c4.get(a25);
  return n27.data = n27.data.slice(0, f20), n27;
}

// node_modules/@bonfida/spl-name-service/dist/esm/record/getRecords.mjs
async function m13(m30, o25, i33, a25) {
  const c21 = i33.map((r35) => t20(o25, r35)), n27 = await s5.retrieveBatch(m30, c21);
  return a25 ? n27.map((r35, m31) => {
    if (r35) return d16(r35, i33[m31], t20(o25, i33[m31]));
  }) : n27;
}

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getArweaveRecord.mjs
var m14 = (m30, t26) => i31(m30, t26, A2.ARWV, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getBackgroundRecord.mjs
var m15 = (m30, t26) => i31(m30, t26, A2.Background, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getBackpackRecord.mjs
var m16 = (m30, t26) => i31(m30, t26, A2.Backpack, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getBtcRecord.mjs
var m17 = (m30, t26) => i31(m30, t26, A2.BTC, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getBscRecord.mjs
var m18 = (m30, t26) => i31(m30, t26, A2.BSC, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getDiscordRecord.mjs
var m19 = (m30, t26) => i31(m30, t26, A2.Discord, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getDogeRecord.mjs
var m20 = (m30, t26) => i31(m30, t26, A2.DOGE, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getEmailRecord.mjs
var m21 = (m30, t26) => i31(m30, t26, A2.Email, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getEthRecord.mjs
var m22 = (m30, t26) => i31(m30, t26, A2.ETH, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getGithubRecord.mjs
var t21 = (t26, m30) => i31(t26, m30, A2.Github, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getInjectiveRecord.mjs
var e33 = (e36, t26) => i31(e36, t26, A2.Injective, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getIpfsRecord.mjs
var m23 = (m30, t26) => i31(m30, t26, A2.IPFS, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getLtcRecord.mjs
var m24 = (m30, t26) => i31(m30, t26, A2.LTC, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getPicRecord.mjs
var m25 = (m30, t26) => i31(m30, t26, A2.Pic, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getPointRecord.mjs
var m26 = (m30, t26) => i31(m30, t26, A2.POINT, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getRedditRecord.mjs
var t22 = (t26, e36) => i31(t26, e36, A2.Reddit, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getShdwRecord.mjs
var m27 = (m30, t26) => i31(m30, t26, A2.SHDW, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getSolRecord.mjs
var m28 = (m30, t26) => i31(m30, t26, A2.SOL);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getTelegramRecord.mjs
var e34 = (e36, m30) => i31(e36, m30, A2.Telegram, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getTwitterRecord.mjs
var t23 = (t26, e36) => i31(t26, e36, A2.Twitter, true);

// node_modules/@bonfida/spl-name-service/dist/esm/record/helpers/getUrlRecord.mjs
var m29 = (m30, t26) => i31(m30, t26, A2.Url, true);

// node_modules/@bonfida/spl-name-service/dist/esm/types/custom-bg.mjs
var r34;
!function(r35) {
  r35.DegenPoet1 = "DegenPoet#1", r35.Rgb0x001 = "rgb0x00#1", r35.Retardio1 = "Retardio#1", r35.Retardio2 = "Retardio#2", r35.Retardio3 = "Retardio#3", r35.NumberArt0 = "NumberArt#0", r35.NumberArt1 = "NumberArt#1", r35.NumberArt2 = "NumberArt#2", r35.NumberArt3 = "NumberArt#3", r35.NumberArt4 = "NumberArt#4", r35.NumberArt5 = "NumberArt#5", r35.NumberArt6 = "NumberArt#6", r35.NumberArt7 = "NumberArt#7", r35.NumberArt8 = "NumberArt#8", r35.NumberArt9 = "NumberArt#9";
}(r34 || (r34 = {}));

// node_modules/@bonfida/spl-name-service/dist/esm/record_v2/getRecordV2Key.mjs
var e35 = (e36, n27) => {
  const { pubkey: r35 } = c8(e36), i33 = s4("".concat(n27));
  return t5(i33, A, r35);
};

// node_modules/@bonfida/spl-name-service/dist/esm/resolve/resolve.mjs
var R6 = async (R7, A7, _4 = { allowPda: false }) => {
  var y10;
  const { pubkey: S7 } = c8(A7), [D3] = i29.findKeySync(S7, r13), x9 = t20(A7, A2.SOL), L5 = e35(A7, A2.SOL), [b10, N6, B9, H3] = await R7.getMultipleAccountsInfo([D3, x9, L5, S7]);
  if (!(null == H3 ? void 0 : H3.data)) throw new C2(`Domain ${A7} does not exist`);
  const I9 = s5.deserialize(H3.data);
  if (null == b10 ? void 0 : b10.data) {
    if (i29.deserialize(b10.data).tag === o24.ActiveRecord) {
      const e36 = await e7(R7, S7);
      if (!e36) throw new k2();
      return e36;
    }
  }
  e: if (null == B9 ? void 0 : B9.data) {
    const o25 = V.deserialize(B9.data), r35 = o25.getStalenessId(), t26 = o25.getRoAId(), n27 = o25.getContent();
    if (32 !== n27.length) throw new j2("Record is malformed");
    if (o25.header.rightOfAssociationValidation !== B2.Solana || o25.header.stalenessValidation !== B2.Solana) throw new G2();
    if (!r35.equals(I9.owner.toBuffer())) break e;
    if (t26.equals(n27)) return new PublicKey(n27);
    throw new h3(`The RoA ID shoudl be ${new PublicKey(n27).toBase58()} but is ${new PublicKey(t26).toBase58()} `);
  }
  if (null == N6 ? void 0 : N6.data) {
    const r35 = new TextEncoder(), t26 = r.Buffer.concat([N6.data.slice(s5.HEADER_LEN, s5.HEADER_LEN + 32), x9.toBuffer()]), n27 = r35.encode(t26.toString("hex"));
    if (o17(n27, N6.data.slice(s5.HEADER_LEN + 32, s5.HEADER_LEN + 32 + SIGNATURE_LENGTH_IN_BYTES), I9.owner)) return new PublicKey(N6.data.slice(s5.HEADER_LEN, s5.HEADER_LEN + 32));
  }
  if (!PublicKey.isOnCurve(I9.owner)) {
    if ("any" === _4.allowPda) return I9.owner;
    if (_4.allowPda) {
      const e36 = await R7.getAccountInfo(I9.owner);
      if (null === (y10 = _4.programIds) || void 0 === y10 ? void 0 : y10.some((o25) => {
        var r35;
        return null === (r35 = null == e36 ? void 0 : e36.owner) || void 0 === r35 ? void 0 : r35.equals(o25);
      })) return I9.owner;
      throw new B3(`The Program ${null == e36 ? void 0 : e36.owner.toBase58()} is not allowed`);
    }
    throw new B3();
  }
  return I9.owner;
};

// node_modules/@bonfida/spl-name-service/dist/esm/resolve/resolveSolRecordV1.mjs
var d17 = async (d19, n27, a25) => {
  const f20 = t20(a25, A2.SOL), p16 = await m28(d19, a25);
  if (!(null == p16 ? void 0 : p16.data)) throw new u4("The SOL record V1 data is empty");
  const l17 = new TextEncoder(), j7 = r.Buffer.concat([p16.data.slice(0, 32), f20.toBuffer()]), u17 = l17.encode(j7.toString("hex"));
  if (!o17(u17, p16.data.slice(32), n27)) throw new R3("The SOL record V1 signature is invalid");
  return new PublicKey(p16.data.slice(0, 32));
};

// node_modules/@bonfida/spl-name-service/dist/esm/resolve/resolveSolRecordV2.mjs
var s23 = async (s24, n27, i33) => {
  try {
    const d19 = e35(i33, A2.SOL), c21 = await V.retrieve(s24, d19), m30 = c21.getStalenessId(), f20 = c21.getRoAId(), l17 = c21.getContent();
    if (0 === m30.compare(n27.toBuffer()) && c21.header.stalenessValidation === B2.Solana && 0 === f20.compare(l17) && c21.header.rightOfAssociationValidation === B2.Solana) return new PublicKey(l17);
  } catch (e36) {
    if (e36 instanceof Error && "FetchError" === e36.name) throw e36;
  }
};

// node_modules/@bonfida/spl-name-service/dist/esm/custom-bg.mjs
var a23 = new PublicKey("ART5dr4bDic2sQVZoFheEmUxwQq5VGSx9he7JxHcXNQD");
var c20 = new PublicKey("CSWvuDHXExVGEMR9kP8xYAHuNjXogeRck9Cnr312CC9g");
var n25 = new PublicKey("J2Q2j6kpSg7tq8JzueCHNTQNcyNnQkvr85RhsFnYZWeG");
var u16 = new PublicKey("6vwnZJZNQjtY4zR93YUuyeDUBhacLLH2mQaZiJAvVwzu");
var i32 = (e36, t26) => {
  const o25 = s4(t26), a25 = s4(e36), c21 = t5(a25, void 0, S);
  return { domainKey: c21, bgKey: t5(o25, void 0, c21) };
};
var N5 = (e36) => {
  switch (e36) {
    case r34.DegenPoet1:
      return a23;
    case r34.Rgb0x001:
      return c20;
    case r34.Retardio1:
    case r34.Retardio2:
    case r34.Retardio3:
      return n25;
    case r34.NumberArt0:
    case r34.NumberArt1:
    case r34.NumberArt2:
    case r34.NumberArt3:
    case r34.NumberArt4:
    case r34.NumberArt5:
    case r34.NumberArt6:
    case r34.NumberArt7:
    case r34.NumberArt8:
    case r34.NumberArt9:
      return u16;
    default:
      throw new w3("The given background is invalid");
  }
};

// node_modules/@bonfida/spl-name-service/dist/esm/record_v2/deserializeRecordV2Content.mjs
var d18 = (d19, f20) => {
  if (a7.has(f20)) {
    const o25 = d19.toString("utf-8");
    return f20 === A2.CNAME || f20 === A2.TXT ? l6(o25) : o25;
  }
  if (f20 === A2.SOL) return new PublicKey(d19).toBase58();
  if (S4.has(f20)) return "0x" + d19.toString("hex");
  if (f20 === A2.Injective) return h6.encode("inj", h6.toWords(d19));
  if (f20 === A2.A || f20 === A2.AAAA) return n11.fromByteArray([...d19]).toString();
  throw new i6("The record content is malformed");
};

// node_modules/@bonfida/spl-name-service/dist/esm/record_v2/getRecordV2.mjs
async function t24(t26, d19, i33, n27 = {}) {
  const s24 = e35(d19, i33), m30 = await V.retrieve(t26, s24);
  return n27.deserialize ? { retrievedRecord: m30, deserializedContent: d18(m30.getContent(), i33) } : { retrievedRecord: m30 };
}

// node_modules/@bonfida/spl-name-service/dist/esm/record_v2/getMultipleRecordsV2.mjs
async function t25(t26, d19, i33, n27 = {}) {
  const s24 = i33.map((e36) => e35(d19, e36)), m30 = await V.retrieveBatch(t26, s24);
  return n27.deserialize ? m30.map((e36, r35) => {
    if (e36) return { retrievedRecord: e36, record: i33[r35], deserializedContent: d18(e36.getContent(), i33[r35]) };
  }) : m30.map((e36, r35) => {
    if (e36) return { retrievedRecord: e36, record: i33[r35] };
  });
}

// node_modules/@bonfida/spl-name-service/dist/esm/record_v2/verifyRightOfAssociation.mjs
var a24 = async (a25, m30, n27, d19) => {
  var f20;
  const c21 = e35(n27, m30), l17 = await V.retrieve(a25, c21), u17 = l17.getRoAId(), p16 = r17.has(m30) ? B2.Ethereum : B2.Solana;
  if (!(d19 = null != d19 ? d19 : null === (f20 = T2.get(m30)) || void 0 === f20 ? void 0 : f20.toBuffer())) throw new M("You must specify the verifier");
  return 0 === d19.compare(u17) && l17.header.rightOfAssociationValidation === p16;
};

// node_modules/@bonfida/spl-name-service/dist/esm/record_v2/utils.mjs
var n26 = async (n27, i33, m30) => {
  const d19 = e35(m30, i33), { registry: l17, nftOwner: c21 } = await s5.retrieve(n27, c8(m30).pubkey), f20 = c21 || l17.owner, p16 = await V.retrieve(n27, d19), u17 = p16.getStalenessId();
  return (null == f20 ? void 0 : f20.equals(new PublicKey(u17))) && p16.header.stalenessValidation === B2.Solana;
};

// node_modules/@bonfida/spl-name-service/dist/esm/devnet.mjs
var g11 = { NAME_PROGRAM_ID: new PublicKey("namesLPneVptA9Z5rqUDD9tMTWEJwofgaYwp8cawRkX"), HASH_PREFIX: "SPL Name Service", ROOT_DOMAIN_ACCOUNT: new PublicKey("5eoDkP6vCQBXqDV9YN2NdUs3nmML3dMRNmEYpiyVNBm2"), REGISTER_PROGRAM_ID: new PublicKey("snshBoEQ9jx4QoHBpZDQPYdNCtw7RMxJvYrKFEhwaPJ"), REVERSE_LOOKUP_CLASS: new PublicKey("7NbD1vprif6apthEZAqhRfYuhrqnuderB8qpnfXGCc8H"), USDC_MINT: new PublicKey("4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU"), REFERRERS: [new PublicKey("3ogYncmMM5CmytsGCqKHydmXmKUZ6sGWvizkzqwT7zb1")], TOKENS_SYM_MINT: /* @__PURE__ */ new Map([["4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU", "USDC"], ["EJwZgeZrdC8TXTQbQBoL6bfuAnFUUy1PVCMB4DYPzVaS", "USDT"], ["So11111111111111111111111111111111111111112", "SOL"], ["fidaWCioBQjieRrUQDxxS5Uxmq1CLi2VuVRyv4dEBey", "FIDA"], ["DL4ivZm3NVHWk9ZvtcqTchxoKArDK4rT3vbDx2gYVr7P", "INJ"]]), PYTH_FEEDS: /* @__PURE__ */ new Map([["4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU", { price: "5SSkXsEKQepHHAewytPVwdej4epN1nxgLVM84L4KXgy7", product: "6NpdXrQEpmDZ3jZKmM2rhdmkd3H6QAk23j2x8bkXcHKA" }], ["EJwZgeZrdC8TXTQbQBoL6bfuAnFUUy1PVCMB4DYPzVaS", { price: "38xoQ4oeJCBrcVvca2cGk7iV1dAfrmTR1kmhSCJQ8Jto", product: "C5wDxND9E61RZ1wZhaSTWkoA8udumaHnoQY6BBsiaVpn" }], ["So11111111111111111111111111111111111111112", { price: "J83w4HKfqxwcq3BEMMkPFSppX3gqekLyLJBexebFVkix", product: "3Mnn2fX6rQyUsyELYms1sBJyChWofzSNRoqYzvgMVz5E" }], ["EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp", { price: "7teETxN9Y8VK6uJxsctHEwST75mKLLwPH1jaFdvTQCpD", product: "5kWV4bhHeZANzg5MWaYCQYEEKHjur5uz1mu5vuLHwiLB" }], ["DL4ivZm3NVHWk9ZvtcqTchxoKArDK4rT3vbDx2gYVr7P", { price: "44uRsNnT35kjkscSu59MxRr9CfkLZWf6gny8bWqUbVxE", product: "7UHB783Nh4avW3Yw9yoktf2KjxipU56KPahA51RnCCYE" }]]), PYTH_MAPPING_ACC: new PublicKey("BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2"), VAULT_OWNER: new PublicKey("SNSaTJbEv2iT3CUrCQYa9zpGjbBVWhFCPaSJHkaJX34") };
var h15 = (e36, r35, n27) => {
  const o25 = [e36];
  r35 ? o25.push(r35.toBuffer()) : o25.push(r.Buffer.alloc(32)), n27 ? o25.push(n27.toBuffer()) : o25.push(r.Buffer.alloc(32));
  const [s24] = PublicKey.findProgramAddressSync(o25, g11.NAME_PROGRAM_ID);
  return s24;
};
var C4 = (t26, e36 = g11.ROOT_DOMAIN_ACCOUNT, r35) => {
  let n27 = s4(t26);
  return { pubkey: h15(n27, r35, e36), hashed: n27 };
};
var G3 = (t26) => {
  t26.endsWith(".sol") && (t26 = t26.slice(0, -4));
  const e36 = t26.split(".");
  if (2 === e36.length) {
    const t27 = "\0".concat(e36[0]), { pubkey: r35 } = C4(e36[1]);
    return { ...C4(t27, r35), isSub: true, parent: r35 };
  }
  if (e36.length >= 3) throw new f3("The domain is malformed");
  return { ...C4(t26, g11.ROOT_DOMAIN_ACCOUNT), isSub: false, parent: void 0 };
};
var v9 = (t26, e36) => {
  const { pubkey: r35, parent: n27 } = G3(t26), o25 = s4(r35.toBase58());
  return h15(o25, g11.REVERSE_LOOKUP_CLASS, e36 ? n27 : void 0);
};
async function B8(t26, r35, o25, s24, i33, a25, c21, m30) {
  const R7 = await d3(r35), u17 = await h15(R7, c21, m30), A7 = a25 || await t26.getMinimumBalanceForRentExemption(o25);
  let _4;
  if (m30) {
    const { registry: e36 } = await m5(t26, m30);
    _4 = e36.owner;
  }
  return t6(g11.NAME_PROGRAM_ID, SystemProgram.programId, u17, i33, s24, R7, new u6(A7), new n8(o25), c21, m30, _4);
}
var U5 = async (n27, o25, s24, i33, c21) => {
  let [m30] = await PublicKey.findProgramAddress([g11.REGISTER_PROGRAM_ID.toBuffer()], g11.REGISTER_PROGRAM_ID), R7 = await d3(n27.toBase58()), u17 = h15(R7, m30, i33);
  return [[], [new r18({ name: o25 }).getInstruction(g11.REGISTER_PROGRAM_ID, g11.NAME_PROGRAM_ID, g11.ROOT_DOMAIN_ACCOUNT, u17, SystemProgram.programId, m30, s24, SYSVAR_RENT_PUBKEY, i33, c21)]];
};
var b9 = { utils: { getNameAccountKeySync: h15, reverseLookup: async (t26, e36) => {
  const r35 = s4(e36.toBase58()), n27 = h15(r35, g11.REVERSE_LOOKUP_CLASS), { registry: o25 } = await s5.retrieve(t26, n27);
  if (!o25.data) throw new D("The registry data is empty");
  return e20(o25.data);
}, _deriveSync: C4, getDomainKeySync: G3, getReverseKeySync: v9 }, constants: g11, bindings: { createNameRegistry: B8, updateNameRegistryData: async function(t26, e36, r35, n27, o25, s24) {
  const a25 = await d3(e36), c21 = h15(a25, o25, s24);
  let m30;
  return m30 = o25 || (await s5.retrieve(t26, c21)).registry.owner, t16(g11.NAME_PROGRAM_ID, c21, new n8(r35), n27, m30);
}, transferNameOwnership: async function(t26, e36, r35, n27, o25, i33) {
  const a25 = await d3(e36), c21 = h15(a25, n27, o25);
  let m30;
  return m30 = n27 || (await s5.retrieve(t26, c21)).registry.owner, s14(g11.NAME_PROGRAM_ID, c21, r35, m30, n27, o25, i33);
}, deleteNameRegistry: async function(t26, e36, r35, n27, s24) {
  const i33 = await d3(e36), a25 = h15(i33, n27, s24);
  let c21;
  return c21 = n27 || (await s5.retrieve(t26, a25)).registry.owner, i17(g11.NAME_PROGRAM_ID, a25, r35, c21);
}, registerDomainName: async (n27, o25, s24, i33, a25, m30 = g11.USDC_MINT, R7) => {
  if (o25.includes(".") || o25.trim().toLowerCase() !== o25) throw new m3("The domain is malformed");
  const [u17] = PublicKey.findProgramAddressSync([g11.REGISTER_PROGRAM_ID.toBuffer()], g11.REGISTER_PROGRAM_ID), d19 = s4(o25), f20 = h15(d19, void 0, g11.ROOT_DOMAIN_ACCOUNT), E6 = s4(f20.toBase58()), p16 = h15(E6, u17), [A7] = PublicKey.findProgramAddressSync([f20.toBuffer()], g11.REGISTER_PROGRAM_ID), _4 = g11.REFERRERS.findIndex((t26) => null == R7 ? void 0 : R7.equals(t26));
  let M2;
  const S7 = [];
  if (-1 !== _4 && R7) {
    M2 = B6(m30, R7, true);
    const t26 = await n27.getAccountInfo(M2);
    if (!(null == t26 ? void 0 : t26.data)) {
      const t27 = n18(i33, M2, R7, m30);
      S7.push(t27);
    }
  }
  const O5 = B6(m30, g11.VAULT_OWNER), P5 = b9.constants.PYTH_FEEDS.get(m30.toBase58());
  if (!P5) throw new y4("The Pyth account for the provided mint was not found");
  const T4 = new r23({ name: o25, space: s24, referrerIdxOpt: -1 != _4 ? _4 : null }).getInstruction(g11.REGISTER_PROGRAM_ID, g11.NAME_PROGRAM_ID, g11.ROOT_DOMAIN_ACCOUNT, f20, p16, SystemProgram.programId, u17, i33, a25, g11.PYTH_MAPPING_ACC, new PublicKey(P5.product), new PublicKey(P5.price), O5, e17, SYSVAR_RENT_PUBKEY, A7, M2);
  return S7.push(T4), [[], S7];
}, createReverseName: U5, createSubdomain: async (t26, e36, r35, n27 = 2e3) => {
  const o25 = [], s24 = e36.split(".")[0];
  if (!s24) throw new t3("The subdomain is malformed");
  const { parent: i33, pubkey: a25 } = G3(e36), c21 = await t26.getMinimumBalanceForRentExemption(n27 + s5.HEADER_LEN), m30 = await B8(t26, "\0".concat(s24), n27, r35, r35, c21, void 0, i33);
  o25.push(m30);
  const R7 = v9(e36, true), d19 = await t26.getAccountInfo(R7);
  if (!(null == d19 ? void 0 : d19.data)) {
    const [, t27] = await U5(a25, "\0".concat(s24), r35, i33, r35);
    o25.push(...t27);
  }
  return [[], o25];
}, burnDomain: (r35, n27, o25) => {
  const { pubkey: s24 } = G3(r35), [i33] = PublicKey.findProgramAddressSync([s24.toBuffer()], g11.REGISTER_PROGRAM_ID), [a25] = PublicKey.findProgramAddressSync([s24.toBuffer(), Uint8Array.from([1, 1])], g11.REGISTER_PROGRAM_ID);
  return new r6().getInstruction(g11.REGISTER_PROGRAM_ID, g11.NAME_PROGRAM_ID, SystemProgram.programId, s24, v9(r35), a25, i33, g11.REVERSE_LOOKUP_CLASS, n27, o25);
}, transferSubdomain: async (t26, e36, r35, n27, o25) => {
  const { pubkey: i33, isSub: a25, parent: c21 } = G3(e36);
  if (!c21 || !a25) throw new t3("The subdomain is not valid");
  if (!o25) {
    const { registry: e37 } = await s5.retrieve(t26, i33);
    o25 = e37.owner;
  }
  let m30, R7;
  n27 && (m30 = c21, R7 = (await s5.retrieve(t26, c21)).registry.owner);
  return s14(g11.NAME_PROGRAM_ID, i33, r35, o25, void 0, m30, R7);
}, registerDomainNameV2: async (n27, o25, s24, i33, a25, c21 = g11.USDC_MINT, m30) => {
  if (o25.includes(".") || o25.trim().toLowerCase() !== o25) throw new m3("The domain name is malformed");
  const [u17] = PublicKey.findProgramAddressSync([g11.REGISTER_PROGRAM_ID.toBuffer()], g11.REGISTER_PROGRAM_ID), d19 = s4(o25), f20 = h15(d19, void 0, g11.ROOT_DOMAIN_ACCOUNT), E6 = s4(f20.toBase58()), p16 = h15(E6, u17), [A7] = PublicKey.findProgramAddressSync([f20.toBuffer()], g11.REGISTER_PROGRAM_ID), _4 = g11.REFERRERS.findIndex((t26) => null == m30 ? void 0 : m30.equals(t26));
  let M2;
  const S7 = [];
  if (-1 !== _4 && m30) {
    M2 = B6(c21, m30, true);
    const t26 = await n27.getAccountInfo(M2);
    if (!(null == t26 ? void 0 : t26.data)) {
      const t27 = n18(i33, M2, m30, c21);
      S7.push(t27);
    }
  }
  const T4 = B6(c21, g11.VAULT_OWNER, true), C5 = X.get(c21.toBase58());
  if (!C5) throw new y4("The Pyth account for the provided mint was not found");
  const [G4] = t15(0, C5), v10 = new r26({ name: o25, space: s24, referrerIdxOpt: -1 != _4 ? _4 : null }).getInstruction(g11.REGISTER_PROGRAM_ID, g11.NAME_PROGRAM_ID, g11.ROOT_DOMAIN_ACCOUNT, f20, p16, SystemProgram.programId, u17, i33, i33, i33, a25, G4, T4, e17, SYSVAR_RENT_PUBKEY, A7, M2);
  return S7.push(v10), S7;
} } };
export {
  g2 as AccountDoesNotExistError,
  p2 as CENTRAL_STATE,
  S as CUSTOM_BG_TLD,
  k2 as CouldNotFindNftOwner,
  r34 as CustomBg,
  R as DEFAULT_PYTH_PUSH_PROGRAM,
  C2 as DomainDoesNotExist,
  r17 as ETH_ROA_RECORDS,
  S4 as EVM_RECORDS,
  e3 as ErrorType,
  p11 as FavouriteDomain,
  o4 as FavouriteDomainNotFoundError,
  T2 as GUARDIANS,
  n2 as HASH_PREFIX,
  x3 as InvalidAAAARecordError,
  I2 as InvalidARecordError,
  c5 as InvalidBufferLengthError,
  w3 as InvalidCustomBgError,
  m3 as InvalidDomainError,
  p4 as InvalidEvmAddressError,
  v3 as InvalidInjectiveAddressError,
  f3 as InvalidInputError,
  T as InvalidParrentError,
  V2 as InvalidPdaError,
  i6 as InvalidRecordDataError,
  N as InvalidRecordInputError,
  S3 as InvalidReverseTwitterError,
  h3 as InvalidRoAError,
  R3 as InvalidSignatureError,
  E3 as InvalidSolRecordV2Error,
  t3 as InvalidSubdomainError,
  v as METAPLEX_ID,
  m4 as MINT_PREFIX,
  n4 as MissingParentOwnerError,
  M as MissingVerifierError,
  A3 as MultipleRegistriesError,
  f14 as NAME_OFFERS_ID,
  w as NAME_PROGRAM_ID,
  r13 as NAME_TOKENIZER_ID,
  s5 as NameRegistryState,
  i29 as NftRecord,
  b2 as NftRecordNotFoundError,
  D as NoAccountDataError,
  u4 as NoRecordDataError,
  n8 as Numberu32,
  u6 as Numberu64,
  y2 as PYTH_FEEDS,
  C as PYTH_MAPPING_ACC,
  X as PYTH_PULL_FEEDS,
  B3 as PdaOwnerNotAllowed,
  p11 as PrimaryDomain,
  y4 as PythFeedNotFoundError,
  c4 as RECORD_V1_SIZE,
  B as REFERRERS,
  o2 as REGISTER_PROGRAM_ID,
  E as REVERSE_LOOKUP_CLASS,
  r7 as ROOT_DOMAIN_ACCOUNT,
  A2 as Record,
  O2 as RecordDoestNotSupportGuardianSigError,
  P3 as RecordIsNotSignedError,
  j2 as RecordMalformed,
  i5 as RecordVersion,
  s16 as ReverseTwitterRegistryState,
  n12 as SELF_SIGNED,
  s2 as SNSError,
  r8 as SymbolNotFoundError,
  i4 as TOKENS_SYM_MINT,
  L as TWITTER_ROOT_PARENT_REGISTRY_KEY,
  t2 as TWITTER_VERIFICATION_AUTHORITY,
  o24 as Tag,
  d2 as U32OverflowError,
  a3 as U64OverflowError,
  z as USDC_MINT,
  a7 as UTF8_ENCODED,
  l2 as UnsupportedRecordError,
  F as UnsupportedSignatureError,
  U2 as UnsupportedSignatureTypeError,
  P as VAULT_OWNER,
  G as VAULT_OWNER_DEPRECATED,
  x as WOLVES_COLLECTION_METADATA,
  G2 as WrongValidation,
  f5 as burnDomain,
  r6 as burnInstruction,
  i23 as changeTwitterRegistryData,
  a13 as changeVerifiedPubkey,
  o9 as check,
  o17 as checkSolRecord,
  t6 as createInstruction,
  r23 as createInstructionV3,
  a5 as createNameRegistry,
  j3 as createRecordInstruction,
  i11 as createRecordV2Instruction,
  r18 as createReverseInstruction,
  i12 as createReverseName,
  l13 as createReverseTwitterRegistry,
  c16 as createSolRecordInstruction,
  r26 as createSplitV2Instruction,
  i16 as createSubdomain,
  a21 as createV2Instruction,
  f15 as createVerifiedTwitterRegistry,
  r28 as createWithNftInstruction,
  i17 as deleteInstruction,
  s12 as deleteNameRegistry,
  n15 as deleteRecordV2,
  i24 as deleteTwitterRegistry,
  d16 as deserializeRecord,
  d18 as deserializeRecordV2Content,
  e20 as deserializeReverse,
  b9 as devnet,
  i18 as ethValidateRecordV2Content,
  a15 as findSubdomains,
  s18 as getAllDomains,
  e24 as getAllRegisteredDomains,
  N5 as getArtistPubkey,
  m14 as getArweaveRecord,
  m15 as getBackgroundRecord,
  m16 as getBackpackRecord,
  m18 as getBscRecord,
  m17 as getBtcRecord,
  i32 as getCustomBgKeys,
  m19 as getDiscordRecord,
  m20 as getDogeRecord,
  y5 as getDomainKey,
  c8 as getDomainKeySync,
  a17 as getDomainKeysWithReverses,
  t7 as getDomainMint,
  r32 as getDomainPriceFromName,
  m21 as getEmailRecord,
  m22 as getEthRecord,
  v5 as getFavoriteDomain,
  t21 as getGithubRecord,
  s17 as getHandleAndRegistryKey,
  d3 as getHashedName,
  s4 as getHashedNameSync,
  e33 as getInjectiveRecord,
  m23 as getIpfsRecord,
  m24 as getLtcRecord,
  w8 as getMultipleFavoriteDomains,
  w8 as getMultiplePrimaryDomains,
  t25 as getMultipleRecordsV2,
  p5 as getNameAccountKey,
  t5 as getNameAccountKeySync,
  m5 as getNameOwner,
  m25 as getPicRecord,
  m26 as getPointRecord,
  v5 as getPrimaryDomain,
  t15 as getPythFeedAccountKey,
  i31 as getRecord,
  e31 as getRecordFromMint,
  t20 as getRecordKeySync,
  t24 as getRecordV2,
  e35 as getRecordV2Key,
  m13 as getRecords,
  t22 as getRedditRecord,
  b3 as getReverseKey,
  e21 as getReverseKeyFromDomainKey,
  r12 as getReverseKeySync,
  m27 as getShdwRecord,
  m28 as getSolRecord,
  e34 as getTelegramRecord,
  t19 as getTokenizedDomains,
  i25 as getTwitterHandleandRegistryKeyViaFilters,
  t23 as getTwitterRecord,
  e23 as getTwitterRegistry,
  a14 as getTwitterRegistryData,
  n22 as getTwitterRegistryKey,
  m29 as getUrlRecord,
  w4 as performReverseLookup,
  l5 as performReverseLookupBatch,
  i30 as reallocInstruction,
  I5 as registerDomainName,
  I6 as registerDomainNameV2,
  m9 as registerFavorite,
  r27 as registerFavoriteInstruction,
  p12 as registerWithNft,
  R6 as resolve,
  d17 as resolveSolRecordV1,
  s23 as resolveSolRecordV2,
  n24 as retrieveNftOwner,
  e7 as retrieveNftOwnerV2,
  a22 as retrieveNfts,
  m12 as retrieveRecords,
  o21 as reverseLookup,
  a16 as reverseLookupBatch,
  p6 as serializeRecord,
  l7 as serializeRecordV2Content,
  f13 as serializeSolRecord,
  m9 as setPrimaryDomain,
  s14 as transferInstruction,
  e22 as transferNameOwnership,
  s15 as transferSubdomain,
  t16 as updateInstruction,
  n19 as updateNameRegistryData,
  d11 as updateRecordInstruction,
  i22 as updateRecordV2Instruction,
  p13 as updateSolRecordInstruction,
  n20 as validateRecordV2Content,
  a24 as verifyRightOfAssociation,
  n26 as verifyStaleness,
  n21 as writRoaRecordV2
};
/*! Bundled license information:

ieee754/index.mjs:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

buffer/index.mjs:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)

@noble/hashes/esm/utils.mjs:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@scure/base/lib/esm/index.mjs:
  (*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/utils.mjs:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/modular.mjs:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/curve.mjs:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/abstract/edwards.mjs:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@noble/curves/esm/ed25519.mjs:
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
//# sourceMappingURL=@bonfida_spl-name-service.js.map
